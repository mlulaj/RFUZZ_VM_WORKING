circuit ICache :
  module ICache :
    input clock : Clock
    input reset : UInt<1>
    output auto : {master_out : {a : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, mask : UInt<8>, data : UInt<64>}}, flip b : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<1>, address : UInt<32>, mask : UInt<8>, data : UInt<64>}}, c : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, data : UInt<64>, error : UInt<1>}}, flip d : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<1>, sink : UInt<3>, data : UInt<64>, error : UInt<1>}}, e : {flip ready : UInt<1>, valid : UInt<1>, bits : {sink : UInt<3>}}}}
    output io : {flip hartid : UInt<1>, flip req : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<39>}}, flip s1_paddr : UInt<32>, flip s2_vaddr : UInt<39>, flip s1_kill : UInt<1>, flip s2_kill : UInt<1>, flip s2_prefetch : UInt<1>, resp : {valid : UInt<1>, bits : {data : UInt<32>, replay : UInt<1>, ae : UInt<1>}}, flip invalidate : UInt<1>, errors : {}, perf : {acquire : UInt<1>}}

    clock is invalid
    reset is invalid
    auto is invalid
    io is invalid
    wire tl_out : {a : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, mask : UInt<8>, data : UInt<64>}}, flip b : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<1>, address : UInt<32>, mask : UInt<8>, data : UInt<64>}}, c : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, data : UInt<64>, error : UInt<1>}}, flip d : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<1>, sink : UInt<3>, data : UInt<64>, error : UInt<1>}}, e : {flip ready : UInt<1>, valid : UInt<1>, bits : {sink : UInt<3>}}} @[Nodes.scala 334:76]
    tl_out is invalid @[Nodes.scala 334:76]
    auto.master_out <- tl_out @[LazyModule.scala 189:49]
    reg scratchpadOn : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[ICache.scala 122:29]
    reg s1_slaveValid : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[ICache.scala 134:30]
    s1_slaveValid <= UInt<1>("h00") @[ICache.scala 134:30]
    reg s2_slaveValid : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[ICache.scala 135:30]
    s2_slaveValid <= s1_slaveValid @[ICache.scala 135:30]
    reg s3_slaveValid : UInt<1>, clock @[ICache.scala 136:30]
    s3_slaveValid <= UInt<1>("h00") @[ICache.scala 136:30]
    reg s1_valid : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[ICache.scala 138:21]
    wire s1_tag_hit : UInt<1>[4] @[ICache.scala 139:24]
    s1_tag_hit is invalid @[ICache.scala 139:24]
    node _T_125 = or(s1_tag_hit[0], s1_tag_hit[1]) @[ICache.scala 140:35]
    node _T_126 = or(_T_125, s1_tag_hit[2]) @[ICache.scala 140:35]
    node _T_127 = or(_T_126, s1_tag_hit[3]) @[ICache.scala 140:35]
    node _T_130 = mux(s1_slaveValid, UInt<1>("h01"), UInt<1>("h00")) @[ICache.scala 140:46]
    node s1_hit = or(_T_127, _T_130) @[ICache.scala 140:40]
    node _T_132 = eq(io.s1_kill, UInt<1>("h00")) @[ICache.scala 141:38]
    node _T_133 = and(s1_valid, _T_132) @[ICache.scala 141:35]
    reg s2_valid : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[ICache.scala 141:25]
    s2_valid <= _T_133 @[ICache.scala 141:25]
    reg s2_hit : UInt<1>, clock @[ICache.scala 142:23]
    s2_hit <= s1_hit @[ICache.scala 142:23]
    reg invalidated : UInt<1>, clock @[ICache.scala 144:24]
    reg refill_valid : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[ICache.scala 145:29]
    reg send_hint : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[ICache.scala 146:26]
    node _T_142 = and(tl_out.a.ready, tl_out.a.valid) @[Decoupled.scala 30:37]
    node _T_144 = eq(send_hint, UInt<1>("h00")) @[ICache.scala 147:40]
    node refill_fire = and(_T_142, _T_144) @[ICache.scala 147:37]
    reg hint_outstanding : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[ICache.scala 148:33]
    node _T_148 = eq(s2_hit, UInt<1>("h00")) @[ICache.scala 149:29]
    node _T_149 = and(s2_valid, _T_148) @[ICache.scala 149:26]
    node _T_151 = eq(io.s2_kill, UInt<1>("h00")) @[ICache.scala 149:40]
    node _T_152 = and(_T_149, _T_151) @[ICache.scala 149:37]
    reg _T_154 : UInt<1>, clock @[ICache.scala 149:63]
    _T_154 <= refill_valid @[ICache.scala 149:63]
    node _T_156 = eq(_T_154, UInt<1>("h00")) @[ICache.scala 149:55]
    node s2_miss = and(_T_152, _T_156) @[ICache.scala 149:52]
    node _T_157 = or(refill_valid, s2_miss) @[ICache.scala 150:71]
    node _T_159 = eq(_T_157, UInt<1>("h00")) @[ICache.scala 150:56]
    node _T_160 = and(s1_valid, _T_159) @[ICache.scala 150:53]
    reg refill_addr : UInt<32>, clock @[Reg.scala 11:16]
    when _T_160 : @[Reg.scala 12:19]
      refill_addr <= io.s1_paddr @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node refill_tag = bits(refill_addr, 31, 12) @[ICache.scala 151:31]
    node refill_idx = bits(refill_addr, 11, 6) @[ICache.scala 152:31]
    node _T_162 = and(tl_out.d.ready, tl_out.d.valid) @[Decoupled.scala 30:37]
    node _T_163 = bits(tl_out.d.bits.opcode, 0, 0) @[Edges.scala 106:36]
    node refill_one_beat = and(_T_162, _T_163) @[ICache.scala 153:41]
    node _T_164 = or(refill_one_beat, UInt<1>("h00")) @[ICache.scala 155:37]
    node _T_165 = or(_T_164, s3_slaveValid) @[ICache.scala 155:54]
    node _T_167 = eq(_T_165, UInt<1>("h00")) @[ICache.scala 155:19]
    io.req.ready <= _T_167 @[ICache.scala 155:16]
    node s0_valid = and(io.req.ready, io.req.valid) @[Decoupled.scala 30:37]
    s1_valid <= s0_valid @[ICache.scala 158:12]
    node _T_168 = and(tl_out.d.ready, tl_out.d.valid) @[Decoupled.scala 30:37]
    node _T_170 = asUInt(asSInt(UInt<12>("h0fff"))) @[package.scala 82:70]
    node _T_171 = dshl(_T_170, tl_out.d.bits.size) @[package.scala 82:77]
    node _T_172 = bits(_T_171, 11, 0) @[package.scala 82:82]
    node _T_173 = not(_T_172) @[package.scala 82:46]
    node _T_174 = shr(_T_173, 3) @[Edges.scala 211:59]
    node _T_175 = bits(tl_out.d.bits.opcode, 0, 0) @[Edges.scala 106:36]
    node _T_177 = mux(_T_175, _T_174, UInt<1>("h00")) @[Edges.scala 212:14]
    reg _T_180 : UInt<9>, clock with : (reset => (reset, UInt<9>("h00"))) @[Edges.scala 220:27]
    node _T_182 = sub(_T_180, UInt<1>("h01")) @[Edges.scala 221:28]
    node _T_183 = asUInt(_T_182) @[Edges.scala 221:28]
    node _T_184 = tail(_T_183, 1) @[Edges.scala 221:28]
    node _T_186 = eq(_T_180, UInt<1>("h00")) @[Edges.scala 222:25]
    node _T_188 = eq(_T_180, UInt<1>("h01")) @[Edges.scala 223:25]
    node _T_190 = eq(_T_177, UInt<1>("h00")) @[Edges.scala 223:47]
    node _T_191 = or(_T_188, _T_190) @[Edges.scala 223:37]
    node d_done = and(_T_191, _T_168) @[Edges.scala 224:22]
    node _T_192 = not(_T_184) @[Edges.scala 225:27]
    node refill_cnt = and(_T_177, _T_192) @[Edges.scala 225:25]
    when _T_168 : @[Edges.scala 226:17]
      node _T_193 = mux(_T_186, _T_177, _T_184) @[Edges.scala 227:21]
      _T_180 <= _T_193 @[Edges.scala 227:15]
      skip @[Edges.scala 226:17]
    node refill_done = and(refill_one_beat, d_done) @[ICache.scala 161:37]
    node _T_195 = eq(s3_slaveValid, UInt<1>("h00")) @[ICache.scala 162:21]
    tl_out.d.ready <= _T_195 @[ICache.scala 162:18]
    reg _T_198 : UInt<16>, clock with : (reset => (reset, UInt<16>("h01"))) @[LFSR.scala 22:23]
    when refill_fire : @[LFSR.scala 23:22]
      node _T_199 = bits(_T_198, 0, 0) @[LFSR.scala 23:40]
      node _T_200 = bits(_T_198, 2, 2) @[LFSR.scala 23:48]
      node _T_201 = xor(_T_199, _T_200) @[LFSR.scala 23:43]
      node _T_202 = bits(_T_198, 3, 3) @[LFSR.scala 23:56]
      node _T_203 = xor(_T_201, _T_202) @[LFSR.scala 23:51]
      node _T_204 = bits(_T_198, 5, 5) @[LFSR.scala 23:64]
      node _T_205 = xor(_T_203, _T_204) @[LFSR.scala 23:59]
      node _T_206 = bits(_T_198, 15, 1) @[LFSR.scala 23:73]
      node _T_207 = cat(_T_205, _T_206) @[Cat.scala 30:58]
      _T_198 <= _T_207 @[LFSR.scala 23:29]
      skip @[LFSR.scala 23:22]
    node _T_208 = bits(_T_198, 1, 0) @[ICache.scala 167:33]
    node _T_210 = or(_T_208, UInt<1>("h00")) @[ICache.scala 171:40]
    node _T_211 = cat(_T_210, refill_idx) @[Cat.scala 30:58]
    node _T_213 = shl(UInt<1>("h00"), 1) @[ICache.scala 171:63]
    node _T_214 = or(_T_208, _T_213) @[ICache.scala 171:13]
    node _T_216 = or(_T_208, UInt<2>("h02")) @[ICache.scala 171:40]
    node _T_217 = cat(_T_216, refill_idx) @[Cat.scala 30:58]
    node _T_219 = shl(UInt<1>("h00"), 0) @[ICache.scala 171:63]
    node repl_way = or(_T_214, _T_219) @[ICache.scala 171:13]
    node _T_220 = cat(repl_way, refill_idx) @[Cat.scala 30:58]
    node _T_223 = eq(UInt<1>("h00"), UInt<1>("h00")) @[ICache.scala 173:12]
    node _T_224 = bits(reset, 0, 0) @[ICache.scala 173:11]
    node _T_225 = or(_T_223, _T_224) @[ICache.scala 173:11]
    node _T_227 = eq(_T_225, UInt<1>("h00")) @[ICache.scala 173:11]
    when _T_227 : @[ICache.scala 173:11]
      printf(clock, UInt<1>(1), "Assertion failed\n    at ICache.scala:173 assert(!lineInScratchpad(Cat(v, refill_idx)))\n") @[ICache.scala 173:11]
      stop(clock, UInt<1>(1), 1) @[ICache.scala 173:11]
      skip @[ICache.scala 173:11]
    smem tag_array : UInt<21>[4][64] @[ICache.scala 177:25]
    node _T_238 = bits(io.req.bits.addr, 11, 6) @[ICache.scala 178:42]
    node _T_240 = eq(refill_done, UInt<1>("h00")) @[ICache.scala 178:70]
    node _T_241 = and(_T_240, s0_valid) @[ICache.scala 178:83]
    wire _T_243 : UInt @[ICache.scala 178:33]
    _T_243 is invalid @[ICache.scala 178:33]
    when _T_241 : @[ICache.scala 178:33]
      _T_243 <= _T_238 @[ICache.scala 178:33]
      node _T_245 = or(_T_243, UInt<6>("h00")) @[ICache.scala 178:33]
      node _T_246 = bits(_T_245, 5, 0) @[ICache.scala 178:33]
      read mport tag_rdata = tag_array[_T_246], clock @[ICache.scala 178:33]
      skip @[ICache.scala 178:33]
    reg accruedRefillError : UInt<1>, clock @[ICache.scala 179:31]
    when refill_done : @[ICache.scala 180:22]
      node _T_259 = cat(tl_out.d.bits.error, refill_tag) @[Cat.scala 30:58]
      wire _T_262 : UInt<21>[4] @[compatibility.scala 117:12]
      _T_262 is invalid @[compatibility.scala 117:12]
      _T_262[0] <= _T_259 @[compatibility.scala 117:12]
      _T_262[1] <= _T_259 @[compatibility.scala 117:12]
      _T_262[2] <= _T_259 @[compatibility.scala 117:12]
      _T_262[3] <= _T_259 @[compatibility.scala 117:12]
      node _T_270 = eq(repl_way, UInt<1>("h00")) @[ICache.scala 182:88]
      node _T_272 = eq(repl_way, UInt<1>("h01")) @[ICache.scala 182:88]
      node _T_274 = eq(repl_way, UInt<2>("h02")) @[ICache.scala 182:88]
      node _T_276 = eq(repl_way, UInt<2>("h03")) @[ICache.scala 182:88]
      write mport _T_277 = tag_array[refill_idx], clock
      when _T_270 :
        _T_277[0] <= _T_262[0]
        skip
      when _T_272 :
        _T_277[1] <= _T_262[1]
        skip
      when _T_274 :
        _T_277[2] <= _T_262[2]
        skip
      when _T_276 :
        _T_277[3] <= _T_262[3]
        skip
      skip @[ICache.scala 180:22]
    reg vb_array : UInt<256>, clock with : (reset => (reset, UInt<256>("h00"))) @[ICache.scala 187:21]
    when refill_one_beat : @[ICache.scala 188:26]
      node _T_291 = cat(repl_way, refill_idx) @[Cat.scala 30:58]
      node _T_293 = eq(invalidated, UInt<1>("h00")) @[ICache.scala 190:75]
      node _T_294 = and(refill_done, _T_293) @[ICache.scala 190:72]
      node _T_296 = dshl(UInt<1>("h01"), _T_291) @[ICache.scala 190:32]
      node _T_297 = or(vb_array, _T_296) @[ICache.scala 190:32]
      node _T_298 = not(vb_array) @[ICache.scala 190:32]
      node _T_299 = or(_T_298, _T_296) @[ICache.scala 190:32]
      node _T_300 = not(_T_299) @[ICache.scala 190:32]
      node _T_301 = mux(_T_294, _T_297, _T_300) @[ICache.scala 190:32]
      vb_array <= _T_301 @[ICache.scala 190:14]
      skip @[ICache.scala 188:26]
    wire invalidate : UInt<1>
    invalidate is invalid
    invalidate <= io.invalidate
    when invalidate : @[ICache.scala 193:21]
      vb_array <= UInt<1>("h00") @[ICache.scala 194:14]
      invalidated <= UInt<1>("h01") @[ICache.scala 195:17]
      skip @[ICache.scala 193:21]
    wire s1_tag_disparity : UInt<1>[4] @[ICache.scala 198:30]
    s1_tag_disparity is invalid @[ICache.scala 198:30]
    wire s1_tl_error : UInt<1>[4] @[ICache.scala 199:25]
    s1_tl_error is invalid @[ICache.scala 199:25]
    wire s1_dout : UInt<32>[4] @[ICache.scala 201:21]
    s1_dout is invalid @[ICache.scala 201:21]
    reg s1s3_slaveAddr : UInt<14>, clock @[ICache.scala 204:27]
    reg s1s3_slaveData : UInt<32>, clock @[ICache.scala 205:27]
    node _T_334 = bits(io.s1_paddr, 11, 6) @[ICache.scala 208:29]
    node _T_335 = bits(io.s1_paddr, 31, 12) @[ICache.scala 209:29]
    node _T_338 = lt(UInt<1>("h00"), UInt<2>("h03")) @[ICache.scala 131:43]
    node _T_339 = bits(s1s3_slaveAddr, 13, 6) @[ICache.scala 132:40]
    node _T_341 = bits(s1s3_slaveAddr, 13, 12) @[package.scala 64:13]
    node _T_343 = eq(_T_341, UInt<1>("h00")) @[ICache.scala 212:91]
    node _T_344 = and(UInt<1>("h00"), _T_343) @[ICache.scala 212:58]
    node _T_346 = bits(io.s1_paddr, 13, 6) @[ICache.scala 129:90]
    node _T_348 = and(UInt<1>("h00"), UInt<1>("h00")) @[ICache.scala 129:66]
    node _T_349 = bits(io.s1_paddr, 13, 12) @[package.scala 64:13]
    node _T_351 = eq(_T_349, UInt<1>("h00")) @[ICache.scala 213:69]
    node _T_352 = and(_T_348, _T_351) @[ICache.scala 213:39]
    node _T_353 = mux(s1_slaveValid, _T_344, _T_352) @[ICache.scala 211:10]
    node _T_354 = and(_T_338, _T_353) @[ICache.scala 210:47]
    node _T_356 = cat(UInt<1>("h00"), _T_334) @[Cat.scala 30:58]
    node _T_357 = dshr(vb_array, _T_356) @[ICache.scala 214:25]
    node _T_358 = bits(_T_357, 0, 0) @[ICache.scala 214:25]
    node _T_360 = eq(s1_slaveValid, UInt<1>("h00")) @[ICache.scala 214:51]
    node _T_361 = and(_T_358, _T_360) @[ICache.scala 214:48]
    node _T_362 = bits(tag_rdata[0], 20, 20) @[Misc.scala 173:7]
    node _T_363 = bits(tag_rdata[0], 19, 0) @[Misc.scala 173:18]
    node _T_364 = eq(_T_363, _T_335) @[ICache.scala 217:33]
    node _T_365 = and(_T_361, _T_364) @[ICache.scala 217:26]
    node _T_368 = or(UInt<1>("h00"), UInt<1>("h00")) @[ECC.scala 13:27]
    node _T_369 = and(_T_361, _T_368) @[ICache.scala 218:34]
    s1_tag_disparity[0] <= _T_369 @[ICache.scala 218:25]
    node _T_370 = bits(_T_362, 0, 0) @[ICache.scala 219:44]
    node _T_371 = and(_T_365, _T_370) @[ICache.scala 219:32]
    s1_tl_error[0] <= _T_371 @[ICache.scala 219:20]
    node _T_372 = or(_T_365, _T_354) @[ICache.scala 220:31]
    s1_tag_hit[0] <= _T_372 @[ICache.scala 220:19]
    node _T_373 = bits(io.s1_paddr, 11, 6) @[ICache.scala 208:29]
    node _T_374 = bits(io.s1_paddr, 31, 12) @[ICache.scala 209:29]
    node _T_377 = lt(UInt<1>("h01"), UInt<2>("h03")) @[ICache.scala 131:43]
    node _T_378 = bits(s1s3_slaveAddr, 13, 6) @[ICache.scala 132:40]
    node _T_380 = bits(s1s3_slaveAddr, 13, 12) @[package.scala 64:13]
    node _T_382 = eq(_T_380, UInt<1>("h01")) @[ICache.scala 212:91]
    node _T_383 = and(UInt<1>("h00"), _T_382) @[ICache.scala 212:58]
    node _T_385 = bits(io.s1_paddr, 13, 6) @[ICache.scala 129:90]
    node _T_387 = and(UInt<1>("h00"), UInt<1>("h00")) @[ICache.scala 129:66]
    node _T_388 = bits(io.s1_paddr, 13, 12) @[package.scala 64:13]
    node _T_390 = eq(_T_388, UInt<1>("h01")) @[ICache.scala 213:69]
    node _T_391 = and(_T_387, _T_390) @[ICache.scala 213:39]
    node _T_392 = mux(s1_slaveValid, _T_383, _T_391) @[ICache.scala 211:10]
    node _T_393 = and(_T_377, _T_392) @[ICache.scala 210:47]
    node _T_395 = cat(UInt<1>("h01"), _T_373) @[Cat.scala 30:58]
    node _T_396 = dshr(vb_array, _T_395) @[ICache.scala 214:25]
    node _T_397 = bits(_T_396, 0, 0) @[ICache.scala 214:25]
    node _T_399 = eq(s1_slaveValid, UInt<1>("h00")) @[ICache.scala 214:51]
    node _T_400 = and(_T_397, _T_399) @[ICache.scala 214:48]
    node _T_401 = bits(tag_rdata[1], 20, 20) @[Misc.scala 173:7]
    node _T_402 = bits(tag_rdata[1], 19, 0) @[Misc.scala 173:18]
    node _T_403 = eq(_T_402, _T_374) @[ICache.scala 217:33]
    node _T_404 = and(_T_400, _T_403) @[ICache.scala 217:26]
    node _T_407 = or(UInt<1>("h00"), UInt<1>("h00")) @[ECC.scala 13:27]
    node _T_408 = and(_T_400, _T_407) @[ICache.scala 218:34]
    s1_tag_disparity[1] <= _T_408 @[ICache.scala 218:25]
    node _T_409 = bits(_T_401, 0, 0) @[ICache.scala 219:44]
    node _T_410 = and(_T_404, _T_409) @[ICache.scala 219:32]
    s1_tl_error[1] <= _T_410 @[ICache.scala 219:20]
    node _T_411 = or(_T_404, _T_393) @[ICache.scala 220:31]
    s1_tag_hit[1] <= _T_411 @[ICache.scala 220:19]
    node _T_412 = bits(io.s1_paddr, 11, 6) @[ICache.scala 208:29]
    node _T_413 = bits(io.s1_paddr, 31, 12) @[ICache.scala 209:29]
    node _T_416 = lt(UInt<2>("h02"), UInt<2>("h03")) @[ICache.scala 131:43]
    node _T_417 = bits(s1s3_slaveAddr, 13, 6) @[ICache.scala 132:40]
    node _T_419 = bits(s1s3_slaveAddr, 13, 12) @[package.scala 64:13]
    node _T_421 = eq(_T_419, UInt<2>("h02")) @[ICache.scala 212:91]
    node _T_422 = and(UInt<1>("h00"), _T_421) @[ICache.scala 212:58]
    node _T_424 = bits(io.s1_paddr, 13, 6) @[ICache.scala 129:90]
    node _T_426 = and(UInt<1>("h00"), UInt<1>("h00")) @[ICache.scala 129:66]
    node _T_427 = bits(io.s1_paddr, 13, 12) @[package.scala 64:13]
    node _T_429 = eq(_T_427, UInt<2>("h02")) @[ICache.scala 213:69]
    node _T_430 = and(_T_426, _T_429) @[ICache.scala 213:39]
    node _T_431 = mux(s1_slaveValid, _T_422, _T_430) @[ICache.scala 211:10]
    node _T_432 = and(_T_416, _T_431) @[ICache.scala 210:47]
    node _T_434 = cat(UInt<2>("h02"), _T_412) @[Cat.scala 30:58]
    node _T_435 = dshr(vb_array, _T_434) @[ICache.scala 214:25]
    node _T_436 = bits(_T_435, 0, 0) @[ICache.scala 214:25]
    node _T_438 = eq(s1_slaveValid, UInt<1>("h00")) @[ICache.scala 214:51]
    node _T_439 = and(_T_436, _T_438) @[ICache.scala 214:48]
    node _T_440 = bits(tag_rdata[2], 20, 20) @[Misc.scala 173:7]
    node _T_441 = bits(tag_rdata[2], 19, 0) @[Misc.scala 173:18]
    node _T_442 = eq(_T_441, _T_413) @[ICache.scala 217:33]
    node _T_443 = and(_T_439, _T_442) @[ICache.scala 217:26]
    node _T_446 = or(UInt<1>("h00"), UInt<1>("h00")) @[ECC.scala 13:27]
    node _T_447 = and(_T_439, _T_446) @[ICache.scala 218:34]
    s1_tag_disparity[2] <= _T_447 @[ICache.scala 218:25]
    node _T_448 = bits(_T_440, 0, 0) @[ICache.scala 219:44]
    node _T_449 = and(_T_443, _T_448) @[ICache.scala 219:32]
    s1_tl_error[2] <= _T_449 @[ICache.scala 219:20]
    node _T_450 = or(_T_443, _T_432) @[ICache.scala 220:31]
    s1_tag_hit[2] <= _T_450 @[ICache.scala 220:19]
    node _T_451 = bits(io.s1_paddr, 11, 6) @[ICache.scala 208:29]
    node _T_452 = bits(io.s1_paddr, 31, 12) @[ICache.scala 209:29]
    node _T_455 = lt(UInt<2>("h03"), UInt<2>("h03")) @[ICache.scala 131:43]
    node _T_456 = bits(s1s3_slaveAddr, 13, 6) @[ICache.scala 132:40]
    node _T_458 = bits(s1s3_slaveAddr, 13, 12) @[package.scala 64:13]
    node _T_460 = eq(_T_458, UInt<2>("h03")) @[ICache.scala 212:91]
    node _T_461 = and(UInt<1>("h00"), _T_460) @[ICache.scala 212:58]
    node _T_463 = bits(io.s1_paddr, 13, 6) @[ICache.scala 129:90]
    node _T_465 = and(UInt<1>("h00"), UInt<1>("h00")) @[ICache.scala 129:66]
    node _T_466 = bits(io.s1_paddr, 13, 12) @[package.scala 64:13]
    node _T_468 = eq(_T_466, UInt<2>("h03")) @[ICache.scala 213:69]
    node _T_469 = and(_T_465, _T_468) @[ICache.scala 213:39]
    node _T_470 = mux(s1_slaveValid, _T_461, _T_469) @[ICache.scala 211:10]
    node _T_471 = and(_T_455, _T_470) @[ICache.scala 210:47]
    node _T_473 = cat(UInt<2>("h03"), _T_451) @[Cat.scala 30:58]
    node _T_474 = dshr(vb_array, _T_473) @[ICache.scala 214:25]
    node _T_475 = bits(_T_474, 0, 0) @[ICache.scala 214:25]
    node _T_477 = eq(s1_slaveValid, UInt<1>("h00")) @[ICache.scala 214:51]
    node _T_478 = and(_T_475, _T_477) @[ICache.scala 214:48]
    node _T_479 = bits(tag_rdata[3], 20, 20) @[Misc.scala 173:7]
    node _T_480 = bits(tag_rdata[3], 19, 0) @[Misc.scala 173:18]
    node _T_481 = eq(_T_480, _T_452) @[ICache.scala 217:33]
    node _T_482 = and(_T_478, _T_481) @[ICache.scala 217:26]
    node _T_485 = or(UInt<1>("h00"), UInt<1>("h00")) @[ECC.scala 13:27]
    node _T_486 = and(_T_478, _T_485) @[ICache.scala 218:34]
    s1_tag_disparity[3] <= _T_486 @[ICache.scala 218:25]
    node _T_487 = bits(_T_479, 0, 0) @[ICache.scala 219:44]
    node _T_488 = and(_T_482, _T_487) @[ICache.scala 219:32]
    s1_tl_error[3] <= _T_488 @[ICache.scala 219:20]
    node _T_489 = or(_T_482, _T_471) @[ICache.scala 220:31]
    s1_tag_hit[3] <= _T_489 @[ICache.scala 220:19]
    node _T_490 = or(s1_valid, s1_slaveValid) @[ICache.scala 222:21]
    node _T_492 = eq(_T_490, UInt<1>("h00")) @[ICache.scala 222:10]
    node _T_494 = eq(s1_tag_disparity[0], UInt<1>("h00")) @[ICache.scala 222:109]
    node _T_495 = and(s1_tag_hit[0], _T_494) @[ICache.scala 222:106]
    node _T_497 = eq(s1_tag_disparity[1], UInt<1>("h00")) @[ICache.scala 222:109]
    node _T_498 = and(s1_tag_hit[1], _T_497) @[ICache.scala 222:106]
    node _T_500 = eq(s1_tag_disparity[2], UInt<1>("h00")) @[ICache.scala 222:109]
    node _T_501 = and(s1_tag_hit[2], _T_500) @[ICache.scala 222:106]
    node _T_503 = eq(s1_tag_disparity[3], UInt<1>("h00")) @[ICache.scala 222:109]
    node _T_504 = and(s1_tag_hit[3], _T_503) @[ICache.scala 222:106]
    node _T_505 = add(_T_495, _T_498) @[Bitwise.scala 48:55]
    node _T_506 = add(_T_501, _T_504) @[Bitwise.scala 48:55]
    node _T_507 = add(_T_505, _T_506) @[Bitwise.scala 48:55]
    node _T_509 = leq(_T_507, UInt<1>("h01")) @[ICache.scala 222:115]
    node _T_510 = or(_T_492, _T_509) @[ICache.scala 222:39]
    node _T_511 = bits(reset, 0, 0) @[ICache.scala 222:9]
    node _T_512 = or(_T_510, _T_511) @[ICache.scala 222:9]
    node _T_514 = eq(_T_512, UInt<1>("h00")) @[ICache.scala 222:9]
    when _T_514 : @[ICache.scala 222:9]
      printf(clock, UInt<1>(1), "Assertion failed\n    at ICache.scala:222 assert(!(s1_valid || s1_slaveValid) || PopCount(s1_tag_hit zip s1_tag_disparity map { case (h, d) => h && !d }) <= 1)\n") @[ICache.scala 222:9]
      stop(clock, UInt<1>(1), 1) @[ICache.scala 222:9]
      skip @[ICache.scala 222:9]
    smem data_arrays_0 : UInt<32>[4][512] @[ICache.scala 225:78]
    smem data_arrays_1 : UInt<32>[4][512] @[ICache.scala 225:78]
    node _T_535 = bits(io.req.bits.addr, 2, 2) @[package.scala 64:13]
    node _T_537 = eq(_T_535, UInt<1>("h00")) @[ICache.scala 227:111]
    node _T_538 = and(s0_valid, _T_537) @[ICache.scala 229:28]
    node _T_541 = eq(UInt<1>("h00"), UInt<1>("h00")) @[ICache.scala 227:111]
    node _T_542 = and(UInt<1>("h00"), _T_541) @[ICache.scala 229:70]
    node _T_543 = or(_T_538, _T_542) @[ICache.scala 229:52]
    node _T_545 = eq(invalidated, UInt<1>("h00")) @[ICache.scala 230:35]
    node _T_546 = and(refill_one_beat, _T_545) @[ICache.scala 230:32]
    node _T_547 = bits(s1s3_slaveAddr, 2, 2) @[package.scala 64:13]
    node _T_549 = eq(_T_547, UInt<1>("h00")) @[ICache.scala 227:111]
    node _T_550 = and(s3_slaveValid, _T_549) @[ICache.scala 230:67]
    node _T_551 = or(_T_546, _T_550) @[ICache.scala 230:49]
    node _T_552 = shl(refill_idx, 3) @[ICache.scala 231:52]
    node _T_553 = or(_T_552, refill_cnt) @[ICache.scala 231:79]
    node _T_554 = bits(s1s3_slaveAddr, 11, 3) @[ICache.scala 228:31]
    node _T_556 = bits(io.req.bits.addr, 11, 3) @[ICache.scala 228:31]
    node _T_557 = mux(UInt<1>("h00"), UInt<9>("h00"), _T_556) @[ICache.scala 233:22]
    node _T_558 = mux(s3_slaveValid, _T_554, _T_557) @[ICache.scala 232:22]
    node _T_559 = mux(refill_one_beat, _T_553, _T_558) @[ICache.scala 231:22]
    when _T_551 : @[ICache.scala 235:16]
      node _T_560 = bits(tl_out.d.bits.data, 31, 0) @[ICache.scala 236:71]
      node _T_561 = mux(s3_slaveValid, s1s3_slaveData, _T_560) @[ICache.scala 236:21]
      node _T_562 = bits(s1s3_slaveAddr, 13, 12) @[package.scala 64:13]
      node _T_563 = mux(s3_slaveValid, _T_562, repl_way) @[ICache.scala 237:20]
      wire _T_566 : UInt<32>[4] @[compatibility.scala 117:12]
      _T_566 is invalid @[compatibility.scala 117:12]
      _T_566[0] <= _T_561 @[compatibility.scala 117:12]
      _T_566[1] <= _T_561 @[compatibility.scala 117:12]
      _T_566[2] <= _T_561 @[compatibility.scala 117:12]
      _T_566[3] <= _T_561 @[compatibility.scala 117:12]
      node _T_574 = eq(_T_563, UInt<1>("h00")) @[ICache.scala 238:93]
      node _T_576 = eq(_T_563, UInt<1>("h01")) @[ICache.scala 238:93]
      node _T_578 = eq(_T_563, UInt<2>("h02")) @[ICache.scala 238:93]
      node _T_580 = eq(_T_563, UInt<2>("h03")) @[ICache.scala 238:93]
      write mport _T_581 = data_arrays_0[_T_559], clock
      when _T_574 :
        _T_581[0] <= _T_566[0]
        skip
      when _T_576 :
        _T_581[1] <= _T_566[1]
        skip
      when _T_578 :
        _T_581[2] <= _T_566[2]
        skip
      when _T_580 :
        _T_581[3] <= _T_566[3]
        skip
      skip @[ICache.scala 235:16]
    node _T_594 = eq(_T_551, UInt<1>("h00")) @[ICache.scala 240:41]
    node _T_595 = and(_T_594, _T_543) @[ICache.scala 240:46]
    wire _T_597 : UInt @[ICache.scala 240:31]
    _T_597 is invalid @[ICache.scala 240:31]
    when _T_595 : @[ICache.scala 240:31]
      _T_597 <= _T_559 @[ICache.scala 240:31]
      node _T_599 = or(_T_597, UInt<9>("h00")) @[ICache.scala 240:31]
      node _T_600 = bits(_T_599, 8, 0) @[ICache.scala 240:31]
      read mport _T_601 = data_arrays_0[_T_600], clock @[ICache.scala 240:31]
      skip @[ICache.scala 240:31]
    node _T_613 = mux(s1_slaveValid, s1s3_slaveAddr, io.s1_paddr) @[ICache.scala 241:24]
    node _T_614 = bits(_T_613, 2, 2) @[package.scala 64:13]
    node _T_616 = eq(_T_614, UInt<1>("h00")) @[ICache.scala 227:111]
    when _T_616 : @[ICache.scala 241:71]
      s1_dout <- _T_601 @[ICache.scala 242:15]
      skip @[ICache.scala 241:71]
    node _T_617 = bits(io.req.bits.addr, 2, 2) @[package.scala 64:13]
    node _T_619 = eq(_T_617, UInt<1>("h01")) @[ICache.scala 227:111]
    node _T_620 = and(s0_valid, _T_619) @[ICache.scala 229:28]
    node _T_623 = eq(UInt<1>("h00"), UInt<1>("h01")) @[ICache.scala 227:111]
    node _T_624 = and(UInt<1>("h00"), _T_623) @[ICache.scala 229:70]
    node _T_625 = or(_T_620, _T_624) @[ICache.scala 229:52]
    node _T_627 = eq(invalidated, UInt<1>("h00")) @[ICache.scala 230:35]
    node _T_628 = and(refill_one_beat, _T_627) @[ICache.scala 230:32]
    node _T_629 = bits(s1s3_slaveAddr, 2, 2) @[package.scala 64:13]
    node _T_631 = eq(_T_629, UInt<1>("h01")) @[ICache.scala 227:111]
    node _T_632 = and(s3_slaveValid, _T_631) @[ICache.scala 230:67]
    node _T_633 = or(_T_628, _T_632) @[ICache.scala 230:49]
    node _T_634 = shl(refill_idx, 3) @[ICache.scala 231:52]
    node _T_635 = or(_T_634, refill_cnt) @[ICache.scala 231:79]
    node _T_636 = bits(s1s3_slaveAddr, 11, 3) @[ICache.scala 228:31]
    node _T_638 = bits(io.req.bits.addr, 11, 3) @[ICache.scala 228:31]
    node _T_639 = mux(UInt<1>("h00"), UInt<9>("h00"), _T_638) @[ICache.scala 233:22]
    node _T_640 = mux(s3_slaveValid, _T_636, _T_639) @[ICache.scala 232:22]
    node _T_641 = mux(refill_one_beat, _T_635, _T_640) @[ICache.scala 231:22]
    when _T_633 : @[ICache.scala 235:16]
      node _T_642 = bits(tl_out.d.bits.data, 63, 32) @[ICache.scala 236:71]
      node _T_643 = mux(s3_slaveValid, s1s3_slaveData, _T_642) @[ICache.scala 236:21]
      node _T_644 = bits(s1s3_slaveAddr, 13, 12) @[package.scala 64:13]
      node _T_645 = mux(s3_slaveValid, _T_644, repl_way) @[ICache.scala 237:20]
      wire _T_648 : UInt<32>[4] @[compatibility.scala 117:12]
      _T_648 is invalid @[compatibility.scala 117:12]
      _T_648[0] <= _T_643 @[compatibility.scala 117:12]
      _T_648[1] <= _T_643 @[compatibility.scala 117:12]
      _T_648[2] <= _T_643 @[compatibility.scala 117:12]
      _T_648[3] <= _T_643 @[compatibility.scala 117:12]
      node _T_656 = eq(_T_645, UInt<1>("h00")) @[ICache.scala 238:93]
      node _T_658 = eq(_T_645, UInt<1>("h01")) @[ICache.scala 238:93]
      node _T_660 = eq(_T_645, UInt<2>("h02")) @[ICache.scala 238:93]
      node _T_662 = eq(_T_645, UInt<2>("h03")) @[ICache.scala 238:93]
      write mport _T_663 = data_arrays_1[_T_641], clock
      when _T_656 :
        _T_663[0] <= _T_648[0]
        skip
      when _T_658 :
        _T_663[1] <= _T_648[1]
        skip
      when _T_660 :
        _T_663[2] <= _T_648[2]
        skip
      when _T_662 :
        _T_663[3] <= _T_648[3]
        skip
      skip @[ICache.scala 235:16]
    node _T_676 = eq(_T_633, UInt<1>("h00")) @[ICache.scala 240:41]
    node _T_677 = and(_T_676, _T_625) @[ICache.scala 240:46]
    wire _T_679 : UInt @[ICache.scala 240:31]
    _T_679 is invalid @[ICache.scala 240:31]
    when _T_677 : @[ICache.scala 240:31]
      _T_679 <= _T_641 @[ICache.scala 240:31]
      node _T_681 = or(_T_679, UInt<9>("h00")) @[ICache.scala 240:31]
      node _T_682 = bits(_T_681, 8, 0) @[ICache.scala 240:31]
      read mport _T_683 = data_arrays_1[_T_682], clock @[ICache.scala 240:31]
      skip @[ICache.scala 240:31]
    node _T_695 = mux(s1_slaveValid, s1s3_slaveAddr, io.s1_paddr) @[ICache.scala 241:24]
    node _T_696 = bits(_T_695, 2, 2) @[package.scala 64:13]
    node _T_698 = eq(_T_696, UInt<1>("h01")) @[ICache.scala 227:111]
    when _T_698 : @[ICache.scala 241:71]
      s1_dout <- _T_683 @[ICache.scala 242:15]
      skip @[ICache.scala 241:71]
    node s1_clk_en = or(s1_valid, s1_slaveValid) @[ICache.scala 246:28]
    reg s2_tag_hit : UInt<1>[4], clock @[Reg.scala 11:16]
    when s1_clk_en : @[Reg.scala 12:19]
      s2_tag_hit[0] <= s1_tag_hit[0] @[Reg.scala 12:23]
      s2_tag_hit[1] <= s1_tag_hit[1] @[Reg.scala 12:23]
      s2_tag_hit[2] <= s1_tag_hit[2] @[Reg.scala 12:23]
      s2_tag_hit[3] <= s1_tag_hit[3] @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_727 = cat(s2_tag_hit[1], s2_tag_hit[0]) @[OneHot.scala 18:45]
    node _T_728 = cat(s2_tag_hit[3], s2_tag_hit[2]) @[OneHot.scala 18:45]
    node _T_729 = cat(_T_728, _T_727) @[OneHot.scala 18:45]
    node _T_730 = bits(_T_729, 3, 2) @[OneHot.scala 26:18]
    node _T_731 = bits(_T_729, 1, 0) @[OneHot.scala 27:18]
    node _T_733 = neq(_T_730, UInt<1>("h00")) @[OneHot.scala 28:14]
    node _T_734 = or(_T_730, _T_731) @[OneHot.scala 28:28]
    node _T_735 = bits(_T_734, 1, 1) @[CircuitMath.scala 30:8]
    node s2_hit_way = cat(_T_733, _T_735) @[Cat.scala 30:58]
    node _T_736 = mux(s2_slaveValid, s1s3_slaveAddr, io.s2_vaddr) @[ICache.scala 249:52]
    node _T_737 = bits(_T_736, 11, 2) @[ICache.scala 249:96]
    node _T_739 = cat(s2_hit_way, _T_737) @[Cat.scala 30:58]
    node s2_scratchpad_word_addr = cat(_T_739, UInt<2>("h00")) @[Cat.scala 30:58]
    reg s2_dout : UInt<32>[4], clock @[Reg.scala 11:16]
    when s1_clk_en : @[Reg.scala 12:19]
      s2_dout[0] <= s1_dout[0] @[Reg.scala 12:23]
      s2_dout[1] <= s1_dout[1] @[Reg.scala 12:23]
      s2_dout[2] <= s1_dout[2] @[Reg.scala 12:23]
      s2_dout[3] <= s1_dout[3] @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_770 = mux(s2_tag_hit[0], s2_dout[0], UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_772 = mux(s2_tag_hit[1], s2_dout[1], UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_774 = mux(s2_tag_hit[2], s2_dout[2], UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_776 = mux(s2_tag_hit[3], s2_dout[3], UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_777 = or(_T_770, _T_772) @[Mux.scala 19:72]
    node _T_778 = or(_T_777, _T_774) @[Mux.scala 19:72]
    node _T_779 = or(_T_778, _T_776) @[Mux.scala 19:72]
    wire s2_way_mux : UInt<32> @[Mux.scala 19:72]
    s2_way_mux <= _T_779 @[Mux.scala 19:72]
    reg _T_793 : UInt<1>[4], clock @[Reg.scala 11:16]
    when s1_clk_en : @[Reg.scala 12:19]
      _T_793[0] <= s1_tag_disparity[0] @[Reg.scala 12:23]
      _T_793[1] <= s1_tag_disparity[1] @[Reg.scala 12:23]
      _T_793[2] <= s1_tag_disparity[2] @[Reg.scala 12:23]
      _T_793[3] <= s1_tag_disparity[3] @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_810 = cat(_T_793[1], _T_793[0]) @[ICache.scala 253:65]
    node _T_811 = cat(_T_793[3], _T_793[2]) @[ICache.scala 253:65]
    node _T_812 = cat(_T_811, _T_810) @[ICache.scala 253:65]
    node s2_tag_disparity = neq(_T_812, UInt<1>("h00")) @[ICache.scala 253:72]
    node _T_814 = cat(s1_tl_error[1], s1_tl_error[0]) @[ICache.scala 254:43]
    node _T_815 = cat(s1_tl_error[3], s1_tl_error[2]) @[ICache.scala 254:43]
    node _T_816 = cat(_T_815, _T_814) @[ICache.scala 254:43]
    node _T_818 = neq(_T_816, UInt<1>("h00")) @[ICache.scala 254:50]
    reg s2_tl_error : UInt<1>, clock @[Reg.scala 11:16]
    when s1_clk_en : @[Reg.scala 12:19]
      s2_tl_error <= _T_818 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_822 = or(UInt<1>("h00"), UInt<1>("h00")) @[ECC.scala 13:27]
    node s2_disparity = or(s2_tag_disparity, _T_822) @[ICache.scala 256:39]
    wire s2_full_word_write : UInt<1>
    s2_full_word_write is invalid
    s2_full_word_write <= UInt<1>("h00")
    node _T_825 = bits(s1s3_slaveAddr, 13, 6) @[ICache.scala 132:40]
    node _T_828 = bits(io.s1_paddr, 13, 6) @[ICache.scala 129:90]
    node _T_830 = and(UInt<1>("h00"), UInt<1>("h00")) @[ICache.scala 129:66]
    node s1_scratchpad_hit = mux(s1_slaveValid, UInt<1>("h00"), _T_830) @[ICache.scala 259:30]
    reg s2_scratchpad_hit : UInt<1>, clock @[Reg.scala 11:16]
    when s1_clk_en : @[Reg.scala 12:19]
      s2_scratchpad_hit <= s1_scratchpad_hit @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_833 = and(s2_scratchpad_hit, UInt<1>("h00")) @[ICache.scala 261:57]
    node _T_835 = eq(s2_full_word_write, UInt<1>("h00")) @[ICache.scala 261:124]
    node _T_836 = and(s2_slaveValid, _T_835) @[ICache.scala 261:121]
    node _T_837 = or(s2_valid, _T_836) @[ICache.scala 261:103]
    node s2_report_uncorrectable_error = and(_T_833, _T_837) @[ICache.scala 261:90]
    node _T_838 = and(s2_valid, s2_disparity) @[ICache.scala 276:22]
    when _T_838 : @[ICache.scala 276:39]
      invalidate <= UInt<1>("h01") @[ICache.scala 276:52]
      skip @[ICache.scala 276:39]
    io.resp.bits.data <= s2_way_mux @[ICache.scala 278:25]
    io.resp.bits.ae <= s2_tl_error @[ICache.scala 279:23]
    io.resp.bits.replay <= s2_disparity @[ICache.scala 280:27]
    node _T_840 = and(s2_valid, s2_hit) @[ICache.scala 281:33]
    io.resp.valid <= _T_840 @[ICache.scala 281:21]
    node _T_842 = eq(refill_valid, UInt<1>("h00")) @[ICache.scala 361:32]
    node _T_843 = and(s2_miss, _T_842) @[ICache.scala 361:29]
    tl_out.a.valid <= _T_843 @[ICache.scala 361:18]
    node _T_845 = shr(refill_addr, 6) @[ICache.scala 364:46]
    node _T_846 = shl(_T_845, 6) @[ICache.scala 364:63]
    node _T_850 = leq(UInt<1>("h00"), UInt<3>("h06")) @[Parameters.scala 88:32]
    node _T_852 = leq(UInt<3>("h06"), UInt<4>("h0c")) @[Parameters.scala 88:42]
    node _T_853 = and(_T_850, _T_852) @[Parameters.scala 88:37]
    node _T_854 = or(UInt<1>("h00"), _T_853) @[Parameters.scala 157:31]
    node _T_856 = xor(_T_846, UInt<14>("h02000")) @[Parameters.scala 153:31]
    node _T_857 = cvt(_T_856) @[Parameters.scala 153:49]
    node _T_859 = and(_T_857, asSInt(UInt<33>("h08a012000"))) @[Parameters.scala 153:52]
    node _T_860 = asSInt(_T_859) @[Parameters.scala 153:52]
    node _T_862 = eq(_T_860, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_863 = and(_T_854, _T_862) @[Parameters.scala 157:56]
    node _T_866 = leq(UInt<1>("h00"), UInt<3>("h06")) @[Parameters.scala 88:32]
    node _T_868 = leq(UInt<3>("h06"), UInt<3>("h06")) @[Parameters.scala 88:42]
    node _T_869 = and(_T_866, _T_868) @[Parameters.scala 88:37]
    node _T_870 = or(UInt<1>("h00"), _T_869) @[Parameters.scala 157:31]
    node _T_872 = xor(_T_846, UInt<28>("h08000000")) @[Parameters.scala 153:31]
    node _T_873 = cvt(_T_872) @[Parameters.scala 153:49]
    node _T_875 = and(_T_873, asSInt(UInt<33>("h088000000"))) @[Parameters.scala 153:52]
    node _T_876 = asSInt(_T_875) @[Parameters.scala 153:52]
    node _T_878 = eq(_T_876, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_880 = xor(_T_846, UInt<26>("h02000000")) @[Parameters.scala 153:31]
    node _T_881 = cvt(_T_880) @[Parameters.scala 153:49]
    node _T_883 = and(_T_881, asSInt(UInt<33>("h08a010000"))) @[Parameters.scala 153:52]
    node _T_884 = asSInt(_T_883) @[Parameters.scala 153:52]
    node _T_886 = eq(_T_884, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_888 = xor(_T_846, UInt<1>("h00")) @[Parameters.scala 153:31]
    node _T_889 = cvt(_T_888) @[Parameters.scala 153:49]
    node _T_891 = and(_T_889, asSInt(UInt<33>("h08a012000"))) @[Parameters.scala 153:52]
    node _T_892 = asSInt(_T_891) @[Parameters.scala 153:52]
    node _T_894 = eq(_T_892, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_896 = xor(_T_846, UInt<17>("h010000")) @[Parameters.scala 153:31]
    node _T_897 = cvt(_T_896) @[Parameters.scala 153:49]
    node _T_899 = and(_T_897, asSInt(UInt<33>("h08a010000"))) @[Parameters.scala 153:52]
    node _T_900 = asSInt(_T_899) @[Parameters.scala 153:52]
    node _T_902 = eq(_T_900, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_904 = xor(_T_846, UInt<32>("h080000000")) @[Parameters.scala 153:31]
    node _T_905 = cvt(_T_904) @[Parameters.scala 153:49]
    node _T_907 = and(_T_905, asSInt(UInt<33>("h080000000"))) @[Parameters.scala 153:52]
    node _T_908 = asSInt(_T_907) @[Parameters.scala 153:52]
    node _T_910 = eq(_T_908, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_911 = or(_T_878, _T_886) @[Parameters.scala 158:42]
    node _T_912 = or(_T_911, _T_894) @[Parameters.scala 158:42]
    node _T_913 = or(_T_912, _T_902) @[Parameters.scala 158:42]
    node _T_914 = or(_T_913, _T_910) @[Parameters.scala 158:42]
    node _T_915 = and(_T_870, _T_914) @[Parameters.scala 157:56]
    node _T_917 = or(UInt<1>("h00"), _T_863) @[Parameters.scala 159:30]
    node _T_918 = or(_T_917, _T_915) @[Parameters.scala 159:30]
    wire _T_920 : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, mask : UInt<8>, data : UInt<64>} @[Edges.scala 371:17]
    _T_920 is invalid @[Edges.scala 371:17]
    _T_920.opcode <= UInt<3>("h04") @[Edges.scala 372:15]
    _T_920.param <= UInt<1>("h00") @[Edges.scala 373:15]
    _T_920.size <= UInt<3>("h06") @[Edges.scala 374:15]
    _T_920.source <= UInt<1>("h00") @[Edges.scala 375:15]
    _T_920.address <= _T_846 @[Edges.scala 376:15]
    node _T_925 = dshl(UInt<1>("h01"), UInt<2>("h02")) @[OneHot.scala 50:12]
    node _T_926 = bits(_T_925, 2, 0) @[OneHot.scala 50:27]
    node _T_928 = or(_T_926, UInt<1>("h01")) @[Misc.scala 252:54]
    node _T_930 = geq(UInt<3>("h06"), UInt<2>("h03")) @[Misc.scala 256:21]
    node _T_932 = bits(_T_928, 2, 2) @[Misc.scala 259:26]
    node _T_933 = bits(_T_846, 2, 2) @[Misc.scala 260:26]
    node _T_935 = eq(_T_933, UInt<1>("h00")) @[Misc.scala 261:20]
    node _T_936 = and(UInt<1>("h01"), _T_935) @[Misc.scala 264:27]
    node _T_937 = and(_T_932, _T_936) @[Misc.scala 265:38]
    node _T_938 = or(_T_930, _T_937) @[Misc.scala 265:29]
    node _T_939 = and(UInt<1>("h01"), _T_933) @[Misc.scala 264:27]
    node _T_940 = and(_T_932, _T_939) @[Misc.scala 265:38]
    node _T_941 = or(_T_930, _T_940) @[Misc.scala 265:29]
    node _T_942 = bits(_T_928, 1, 1) @[Misc.scala 259:26]
    node _T_943 = bits(_T_846, 1, 1) @[Misc.scala 260:26]
    node _T_945 = eq(_T_943, UInt<1>("h00")) @[Misc.scala 261:20]
    node _T_946 = and(_T_936, _T_945) @[Misc.scala 264:27]
    node _T_947 = and(_T_942, _T_946) @[Misc.scala 265:38]
    node _T_948 = or(_T_938, _T_947) @[Misc.scala 265:29]
    node _T_949 = and(_T_936, _T_943) @[Misc.scala 264:27]
    node _T_950 = and(_T_942, _T_949) @[Misc.scala 265:38]
    node _T_951 = or(_T_938, _T_950) @[Misc.scala 265:29]
    node _T_952 = and(_T_939, _T_945) @[Misc.scala 264:27]
    node _T_953 = and(_T_942, _T_952) @[Misc.scala 265:38]
    node _T_954 = or(_T_941, _T_953) @[Misc.scala 265:29]
    node _T_955 = and(_T_939, _T_943) @[Misc.scala 264:27]
    node _T_956 = and(_T_942, _T_955) @[Misc.scala 265:38]
    node _T_957 = or(_T_941, _T_956) @[Misc.scala 265:29]
    node _T_958 = bits(_T_928, 0, 0) @[Misc.scala 259:26]
    node _T_959 = bits(_T_846, 0, 0) @[Misc.scala 260:26]
    node _T_961 = eq(_T_959, UInt<1>("h00")) @[Misc.scala 261:20]
    node _T_962 = and(_T_946, _T_961) @[Misc.scala 264:27]
    node _T_963 = and(_T_958, _T_962) @[Misc.scala 265:38]
    node _T_964 = or(_T_948, _T_963) @[Misc.scala 265:29]
    node _T_965 = and(_T_946, _T_959) @[Misc.scala 264:27]
    node _T_966 = and(_T_958, _T_965) @[Misc.scala 265:38]
    node _T_967 = or(_T_948, _T_966) @[Misc.scala 265:29]
    node _T_968 = and(_T_949, _T_961) @[Misc.scala 264:27]
    node _T_969 = and(_T_958, _T_968) @[Misc.scala 265:38]
    node _T_970 = or(_T_951, _T_969) @[Misc.scala 265:29]
    node _T_971 = and(_T_949, _T_959) @[Misc.scala 264:27]
    node _T_972 = and(_T_958, _T_971) @[Misc.scala 265:38]
    node _T_973 = or(_T_951, _T_972) @[Misc.scala 265:29]
    node _T_974 = and(_T_952, _T_961) @[Misc.scala 264:27]
    node _T_975 = and(_T_958, _T_974) @[Misc.scala 265:38]
    node _T_976 = or(_T_954, _T_975) @[Misc.scala 265:29]
    node _T_977 = and(_T_952, _T_959) @[Misc.scala 264:27]
    node _T_978 = and(_T_958, _T_977) @[Misc.scala 265:38]
    node _T_979 = or(_T_954, _T_978) @[Misc.scala 265:29]
    node _T_980 = and(_T_955, _T_961) @[Misc.scala 264:27]
    node _T_981 = and(_T_958, _T_980) @[Misc.scala 265:38]
    node _T_982 = or(_T_957, _T_981) @[Misc.scala 265:29]
    node _T_983 = and(_T_955, _T_959) @[Misc.scala 264:27]
    node _T_984 = and(_T_958, _T_983) @[Misc.scala 265:38]
    node _T_985 = or(_T_957, _T_984) @[Misc.scala 265:29]
    node _T_986 = cat(_T_967, _T_964) @[Cat.scala 30:58]
    node _T_987 = cat(_T_973, _T_970) @[Cat.scala 30:58]
    node _T_988 = cat(_T_987, _T_986) @[Cat.scala 30:58]
    node _T_989 = cat(_T_979, _T_976) @[Cat.scala 30:58]
    node _T_990 = cat(_T_985, _T_982) @[Cat.scala 30:58]
    node _T_991 = cat(_T_990, _T_989) @[Cat.scala 30:58]
    node _T_992 = cat(_T_991, _T_988) @[Cat.scala 30:58]
    _T_920.mask <= _T_992 @[Edges.scala 377:15]
    _T_920.data <= UInt<1>("h00") @[Edges.scala 378:15]
    tl_out.a.bits <- _T_920 @[ICache.scala 362:17]
    tl_out.b.ready <= UInt<1>("h01") @[ICache.scala 396:18]
    tl_out.c.valid <= UInt<1>("h00") @[ICache.scala 397:18]
    tl_out.e.valid <= UInt<1>("h00") @[ICache.scala 398:18]
    node _T_998 = and(tl_out.a.valid, UInt<1>("h00")) @[ICache.scala 399:27]
    node _T_1000 = eq(_T_998, UInt<1>("h00")) @[ICache.scala 399:10]
    node _T_1001 = bits(reset, 0, 0) @[ICache.scala 399:9]
    node _T_1002 = or(_T_1000, _T_1001) @[ICache.scala 399:9]
    node _T_1004 = eq(_T_1002, UInt<1>("h00")) @[ICache.scala 399:9]
    when _T_1004 : @[ICache.scala 399:9]
      printf(clock, UInt<1>(1), "Assertion failed\n    at ICache.scala:399 assert(!(tl_out.a.valid && addrMaybeInScratchpad(tl_out.a.bits.address)))\n") @[ICache.scala 399:9]
      stop(clock, UInt<1>(1), 1) @[ICache.scala 399:9]
      skip @[ICache.scala 399:9]
    node _T_1006 = eq(refill_valid, UInt<1>("h00")) @[ICache.scala 401:9]
    when _T_1006 : @[ICache.scala 401:24]
      invalidated <= UInt<1>("h00") @[ICache.scala 401:38]
      skip @[ICache.scala 401:24]
    when refill_fire : @[ICache.scala 402:22]
      refill_valid <= UInt<1>("h01") @[ICache.scala 402:37]
      skip @[ICache.scala 402:22]
    when refill_done : @[ICache.scala 403:22]
      refill_valid <= UInt<1>("h00") @[ICache.scala 403:37]
      skip @[ICache.scala 403:22]
    io.perf.acquire <= refill_fire @[ICache.scala 405:19]
    node _T_1011 = eq(send_hint, UInt<1>("h00")) @[ICache.scala 407:10]
    node _T_1013 = eq(tl_out.a.ready, UInt<1>("h00")) @[ICache.scala 407:43]
    node _T_1014 = and(tl_out.a.valid, _T_1013) @[ICache.scala 407:40]
    node _T_1015 = and(_T_1011, _T_1014) @[ICache.scala 407:21]
    node _T_1016 = and(invalidate, refill_valid) @[ICache.scala 408:21]
    node _T_1019 = eq(UInt<1>("h00"), UInt<1>("h00")) @[ICache.scala 415:18]
    node _T_1022 = eq(UInt<1>("h00"), UInt<1>("h00")) @[ICache.scala 415:50]
    node _T_1023 = and(_T_1019, _T_1022) @[ICache.scala 415:47]
    node _T_1027 = eq(s2_slaveValid, UInt<1>("h00")) @[ICache.scala 419:18]
    node _T_1029 = eq(s2_tag_disparity, UInt<1>("h00")) @[ICache.scala 423:18]
    node _T_1031 = eq(s2_scratchpad_hit, UInt<1>("h00")) @[ICache.scala 428:18]
    node _T_1032 = and(_T_1027, s2_scratchpad_hit) @[Property.scala 85:34]
    node _T_1033 = and(_T_1027, _T_1031) @[Property.scala 85:34]
    node _T_1034 = and(s2_slaveValid, s2_scratchpad_hit) @[Property.scala 85:34]
    node _T_1035 = and(s2_slaveValid, _T_1031) @[Property.scala 85:34]
    node _T_1036 = and(_T_1029, _T_1032) @[Property.scala 85:34]
    node _T_1037 = and(_T_1029, _T_1033) @[Property.scala 85:34]
    node _T_1038 = and(_T_1029, _T_1034) @[Property.scala 85:34]
    node _T_1039 = and(_T_1029, _T_1035) @[Property.scala 85:34]
    node _T_1040 = and(_T_1027, s2_scratchpad_hit) @[Property.scala 85:34]
    node _T_1041 = and(_T_1027, _T_1031) @[Property.scala 85:34]
    node _T_1042 = and(s2_slaveValid, s2_scratchpad_hit) @[Property.scala 85:34]
    node _T_1043 = and(s2_slaveValid, _T_1031) @[Property.scala 85:34]
    node _T_1044 = and(s2_tag_disparity, _T_1040) @[Property.scala 85:34]
    node _T_1045 = and(s2_tag_disparity, _T_1041) @[Property.scala 85:34]
    node _T_1046 = and(s2_tag_disparity, _T_1042) @[Property.scala 85:34]
    node _T_1047 = and(s2_tag_disparity, _T_1043) @[Property.scala 85:34]
    node _T_1048 = and(_T_1023, _T_1036) @[Property.scala 85:34]
    node _T_1049 = and(_T_1023, _T_1037) @[Property.scala 85:34]
    node _T_1050 = and(_T_1023, _T_1038) @[Property.scala 85:34]
    node _T_1051 = and(_T_1023, _T_1039) @[Property.scala 85:34]
    node _T_1052 = and(_T_1023, _T_1044) @[Property.scala 85:34]
    node _T_1053 = and(_T_1023, _T_1045) @[Property.scala 85:34]
    node _T_1054 = and(_T_1023, _T_1046) @[Property.scala 85:34]
    node _T_1055 = and(_T_1023, _T_1047) @[Property.scala 85:34]
    node _T_1056 = and(_T_1027, s2_scratchpad_hit) @[Property.scala 85:34]
    node _T_1057 = and(_T_1027, _T_1031) @[Property.scala 85:34]
    node _T_1058 = and(s2_slaveValid, s2_scratchpad_hit) @[Property.scala 85:34]
    node _T_1059 = and(s2_slaveValid, _T_1031) @[Property.scala 85:34]
    node _T_1060 = and(_T_1029, _T_1056) @[Property.scala 85:34]
    node _T_1061 = and(_T_1029, _T_1057) @[Property.scala 85:34]
    node _T_1062 = and(_T_1029, _T_1058) @[Property.scala 85:34]
    node _T_1063 = and(_T_1029, _T_1059) @[Property.scala 85:34]
    node _T_1064 = and(_T_1027, s2_scratchpad_hit) @[Property.scala 85:34]
    node _T_1065 = and(_T_1027, _T_1031) @[Property.scala 85:34]
    node _T_1066 = and(s2_slaveValid, s2_scratchpad_hit) @[Property.scala 85:34]
    node _T_1067 = and(s2_slaveValid, _T_1031) @[Property.scala 85:34]
    node _T_1068 = and(s2_tag_disparity, _T_1064) @[Property.scala 85:34]
    node _T_1069 = and(s2_tag_disparity, _T_1065) @[Property.scala 85:34]
    node _T_1070 = and(s2_tag_disparity, _T_1066) @[Property.scala 85:34]
    node _T_1071 = and(s2_tag_disparity, _T_1067) @[Property.scala 85:34]
    node _T_1072 = and(UInt<1>("h00"), _T_1060) @[Property.scala 85:34]
    node _T_1073 = and(UInt<1>("h00"), _T_1061) @[Property.scala 85:34]
    node _T_1074 = and(UInt<1>("h00"), _T_1062) @[Property.scala 85:34]
    node _T_1075 = and(UInt<1>("h00"), _T_1063) @[Property.scala 85:34]
    node _T_1076 = and(UInt<1>("h00"), _T_1068) @[Property.scala 85:34]
    node _T_1077 = and(UInt<1>("h00"), _T_1069) @[Property.scala 85:34]
    node _T_1078 = and(UInt<1>("h00"), _T_1070) @[Property.scala 85:34]
    node _T_1079 = and(UInt<1>("h00"), _T_1071) @[Property.scala 85:34]
    node _T_1080 = and(_T_1027, s2_scratchpad_hit) @[Property.scala 85:34]
    node _T_1081 = and(_T_1027, _T_1031) @[Property.scala 85:34]
    node _T_1082 = and(s2_slaveValid, s2_scratchpad_hit) @[Property.scala 85:34]
    node _T_1083 = and(s2_slaveValid, _T_1031) @[Property.scala 85:34]
    node _T_1084 = and(_T_1029, _T_1080) @[Property.scala 85:34]
    node _T_1085 = and(_T_1029, _T_1081) @[Property.scala 85:34]
    node _T_1086 = and(_T_1029, _T_1082) @[Property.scala 85:34]
    node _T_1087 = and(_T_1029, _T_1083) @[Property.scala 85:34]
    node _T_1088 = and(_T_1027, s2_scratchpad_hit) @[Property.scala 85:34]
    node _T_1089 = and(_T_1027, _T_1031) @[Property.scala 85:34]
    node _T_1090 = and(s2_slaveValid, s2_scratchpad_hit) @[Property.scala 85:34]
    node _T_1091 = and(s2_slaveValid, _T_1031) @[Property.scala 85:34]
    node _T_1092 = and(s2_tag_disparity, _T_1088) @[Property.scala 85:34]
    node _T_1093 = and(s2_tag_disparity, _T_1089) @[Property.scala 85:34]
    node _T_1094 = and(s2_tag_disparity, _T_1090) @[Property.scala 85:34]
    node _T_1095 = and(s2_tag_disparity, _T_1091) @[Property.scala 85:34]
    node _T_1096 = and(UInt<1>("h00"), _T_1084) @[Property.scala 85:34]
    node _T_1097 = and(UInt<1>("h00"), _T_1085) @[Property.scala 85:34]
    node _T_1098 = and(UInt<1>("h00"), _T_1086) @[Property.scala 85:34]
    node _T_1099 = and(UInt<1>("h00"), _T_1087) @[Property.scala 85:34]
    node _T_1100 = and(UInt<1>("h00"), _T_1092) @[Property.scala 85:34]
    node _T_1101 = and(UInt<1>("h00"), _T_1093) @[Property.scala 85:34]
    node _T_1102 = and(UInt<1>("h00"), _T_1094) @[Property.scala 85:34]
    node _T_1103 = and(UInt<1>("h00"), _T_1095) @[Property.scala 85:34]
    node _T_1104 = and(s2_valid, _T_1048) @[Property.scala 85:34]
    node _T_1105 = and(s2_valid, _T_1049) @[Property.scala 85:34]
    node _T_1106 = and(s2_valid, _T_1050) @[Property.scala 85:34]
    node _T_1107 = and(s2_valid, _T_1051) @[Property.scala 85:34]
    node _T_1108 = and(s2_valid, _T_1052) @[Property.scala 85:34]
    node _T_1109 = and(s2_valid, _T_1053) @[Property.scala 85:34]
    node _T_1110 = and(s2_valid, _T_1054) @[Property.scala 85:34]
    node _T_1111 = and(s2_valid, _T_1055) @[Property.scala 85:34]
    node _T_1112 = and(s2_valid, _T_1072) @[Property.scala 85:34]
    node _T_1113 = and(s2_valid, _T_1073) @[Property.scala 85:34]
    node _T_1114 = and(s2_valid, _T_1074) @[Property.scala 85:34]
    node _T_1115 = and(s2_valid, _T_1075) @[Property.scala 85:34]
    node _T_1116 = and(s2_valid, _T_1076) @[Property.scala 85:34]
    node _T_1117 = and(s2_valid, _T_1077) @[Property.scala 85:34]
    node _T_1118 = and(s2_valid, _T_1078) @[Property.scala 85:34]
    node _T_1119 = and(s2_valid, _T_1079) @[Property.scala 85:34]
    node _T_1120 = and(s2_valid, _T_1096) @[Property.scala 85:34]
    node _T_1121 = and(s2_valid, _T_1097) @[Property.scala 85:34]
    node _T_1122 = and(s2_valid, _T_1098) @[Property.scala 85:34]
    node _T_1123 = and(s2_valid, _T_1099) @[Property.scala 85:34]
    node _T_1124 = and(s2_valid, _T_1100) @[Property.scala 85:34]
    node _T_1125 = and(s2_valid, _T_1101) @[Property.scala 85:34]
    node _T_1126 = and(s2_valid, _T_1102) @[Property.scala 85:34]
    node _T_1127 = and(s2_valid, _T_1103) @[Property.scala 85:34]