;buildInfoPackage: chisel3, version: 3.1-SNAPSHOT, scalaVersion: 2.11.12, sbtVersion: 1.0.4, builtAtString: 2018-02-01 20:13:24.838, builtAtMillis: 1517516004838
circuit NonBlockingDCache : 
  module WritebackUnit : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip req : {flip ready : UInt<1>, valid : UInt<1>, bits : {tag : UInt<20>, idx : UInt<6>, source : UInt<2>, param : UInt<3>, way_en : UInt<4>, voluntary : UInt<1>}}, meta_read : {flip ready : UInt<1>, valid : UInt<1>, bits : {idx : UInt<6>, way_en : UInt<4>, tag : UInt<20>}}, data_req : {flip ready : UInt<1>, valid : UInt<1>, bits : {way_en : UInt<4>, addr : UInt<12>}}, flip data_resp : UInt<64>, release : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<2>, address : UInt<32>, data : UInt<64>, error : UInt<1>}}}
    
    clock is invalid
    reset is invalid
    io is invalid
    reg req : {tag : UInt<20>, idx : UInt<6>, source : UInt<2>, param : UInt<3>, way_en : UInt<4>, voluntary : UInt<1>}, clock @[NBDcache.scala 448:16]
    reg active : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[NBDcache.scala 449:19]
    reg r1_data_req_fired : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[NBDcache.scala 450:30]
    reg r2_data_req_fired : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[NBDcache.scala 451:30]
    reg data_req_cnt : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[NBDcache.scala 452:25]
    node _T_32 = and(io.release.ready, io.release.valid) @[Decoupled.scala 30:37]
    node _T_34 = asUInt(asSInt(UInt<12>("h0fff"))) @[package.scala 82:70]
    node _T_35 = dshl(_T_34, io.release.bits.size) @[package.scala 82:77]
    node _T_36 = bits(_T_35, 11, 0) @[package.scala 82:82]
    node _T_37 = not(_T_36) @[package.scala 82:46]
    node _T_38 = shr(_T_37, 3) @[Edges.scala 211:59]
    node _T_39 = bits(io.release.bits.opcode, 0, 0) @[Edges.scala 102:36]
    node _T_41 = mux(_T_39, _T_38, UInt<1>("h00")) @[Edges.scala 212:14]
    reg _T_44 : UInt<9>, clock with : (reset => (reset, UInt<9>("h00"))) @[Edges.scala 220:27]
    node _T_46 = sub(_T_44, UInt<1>("h01")) @[Edges.scala 221:28]
    node _T_47 = asUInt(_T_46) @[Edges.scala 221:28]
    node _T_48 = tail(_T_47, 1) @[Edges.scala 221:28]
    node _T_50 = eq(_T_44, UInt<1>("h00")) @[Edges.scala 222:25]
    node _T_52 = eq(_T_44, UInt<1>("h01")) @[Edges.scala 223:25]
    node _T_54 = eq(_T_41, UInt<1>("h00")) @[Edges.scala 223:47]
    node last_beat = or(_T_52, _T_54) @[Edges.scala 223:37]
    node all_beats_done = and(last_beat, _T_32) @[Edges.scala 224:22]
    node _T_55 = not(_T_48) @[Edges.scala 225:27]
    node beat_count = and(_T_41, _T_55) @[Edges.scala 225:25]
    when _T_32 : @[Edges.scala 226:17]
      node _T_56 = mux(_T_50, _T_41, _T_48) @[Edges.scala 227:21]
      _T_44 <= _T_56 @[Edges.scala 227:15]
      skip @[Edges.scala 226:17]
    io.release.valid <= UInt<1>("h00") @[NBDcache.scala 455:20]
    when active : @[NBDcache.scala 456:17]
      r1_data_req_fired <= UInt<1>("h00") @[NBDcache.scala 457:23]
      r2_data_req_fired <= r1_data_req_fired @[NBDcache.scala 458:23]
      node _T_59 = and(io.data_req.ready, io.data_req.valid) @[Decoupled.scala 30:37]
      node _T_60 = and(io.meta_read.ready, io.meta_read.valid) @[Decoupled.scala 30:37]
      node _T_61 = and(_T_59, _T_60) @[NBDcache.scala 459:30]
      when _T_61 : @[NBDcache.scala 459:54]
        r1_data_req_fired <= UInt<1>("h01") @[NBDcache.scala 460:25]
        node _T_64 = add(data_req_cnt, UInt<1>("h01")) @[NBDcache.scala 461:36]
        node _T_65 = tail(_T_64, 1) @[NBDcache.scala 461:36]
        data_req_cnt <= _T_65 @[NBDcache.scala 461:20]
        skip @[NBDcache.scala 459:54]
      when r2_data_req_fired : @[NBDcache.scala 463:30]
        io.release.valid <= UInt<1>("h01") @[NBDcache.scala 464:24]
        node _T_68 = eq(io.release.ready, UInt<1>("h00")) @[NBDcache.scala 465:12]
        when _T_68 : @[NBDcache.scala 465:31]
          r1_data_req_fired <= UInt<1>("h00") @[NBDcache.scala 466:27]
          r2_data_req_fired <= UInt<1>("h00") @[NBDcache.scala 467:27]
          node _T_72 = and(UInt<1>("h01"), r1_data_req_fired) @[NBDcache.scala 468:73]
          node _T_75 = mux(_T_72, UInt<2>("h02"), UInt<1>("h01")) @[NBDcache.scala 468:49]
          node _T_76 = sub(data_req_cnt, _T_75) @[NBDcache.scala 468:38]
          node _T_77 = asUInt(_T_76) @[NBDcache.scala 468:38]
          node _T_78 = tail(_T_77, 1) @[NBDcache.scala 468:38]
          data_req_cnt <= _T_78 @[NBDcache.scala 468:22]
          skip @[NBDcache.scala 465:31]
        node _T_80 = eq(r1_data_req_fired, UInt<1>("h00")) @[NBDcache.scala 470:12]
        when _T_80 : @[NBDcache.scala 470:32]
          node _T_82 = lt(data_req_cnt, UInt<4>("h08")) @[NBDcache.scala 472:32]
          node _T_84 = eq(io.release.ready, UInt<1>("h00")) @[NBDcache.scala 472:56]
          node _T_85 = or(_T_82, _T_84) @[NBDcache.scala 472:53]
          active <= _T_85 @[NBDcache.scala 472:16]
          skip @[NBDcache.scala 470:32]
        skip @[NBDcache.scala 463:30]
      skip @[NBDcache.scala 456:17]
    node _T_86 = and(io.req.ready, io.req.valid) @[Decoupled.scala 30:37]
    when _T_86 : @[NBDcache.scala 476:24]
      active <= UInt<1>("h01") @[NBDcache.scala 477:12]
      data_req_cnt <= UInt<1>("h00") @[NBDcache.scala 478:18]
      req <- io.req.bits @[NBDcache.scala 479:9]
      skip @[NBDcache.scala 476:24]
    node _T_90 = eq(active, UInt<1>("h00")) @[NBDcache.scala 482:19]
    io.req.ready <= _T_90 @[NBDcache.scala 482:16]
    node _T_92 = lt(data_req_cnt, UInt<4>("h08")) @[NBDcache.scala 484:37]
    node fire = and(active, _T_92) @[NBDcache.scala 484:21]
    io.meta_read.valid <= fire @[NBDcache.scala 487:22]
    io.meta_read.bits.idx <= req.idx @[NBDcache.scala 488:25]
    io.meta_read.bits.tag <= req.tag @[NBDcache.scala 489:25]
    io.data_req.valid <= fire @[NBDcache.scala 491:21]
    io.data_req.bits.way_en <= req.way_en @[NBDcache.scala 492:27]
    node _T_93 = bits(data_req_cnt, 2, 0) @[NBDcache.scala 494:56]
    node _T_94 = cat(req.idx, _T_93) @[Cat.scala 30:58]
    node _T_95 = shl(_T_94, 3) @[NBDcache.scala 495:43]
    io.data_req.bits.addr <= _T_95 @[NBDcache.scala 493:25]
    node _T_96 = cat(req.tag, req.idx) @[Cat.scala 30:58]
    node r_address = shl(_T_96, 6) @[NBDcache.scala 497:41]
    wire probeResponse : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<2>, address : UInt<32>, data : UInt<64>, error : UInt<1>} @[Edges.scala 349:17]
    probeResponse is invalid @[Edges.scala 349:17]
    probeResponse.opcode <= UInt<3>("h05") @[Edges.scala 350:15]
    probeResponse.param <= req.param @[Edges.scala 351:15]
    probeResponse.size <= UInt<3>("h06") @[Edges.scala 352:15]
    probeResponse.source <= req.source @[Edges.scala 353:15]
    probeResponse.address <= r_address @[Edges.scala 354:15]
    probeResponse.data <= io.data_resp @[Edges.scala 355:15]
    probeResponse.error <= UInt<1>("h00") @[Edges.scala 356:15]
    node _T_104 = leq(UInt<1>("h00"), UInt<3>("h06")) @[Parameters.scala 88:32]
    node _T_106 = leq(UInt<3>("h06"), UInt<4>("h0c")) @[Parameters.scala 88:42]
    node _T_107 = and(_T_104, _T_106) @[Parameters.scala 88:37]
    node _T_108 = or(UInt<1>("h00"), _T_107) @[Parameters.scala 157:31]
    node _T_110 = xor(r_address, UInt<14>("h02000")) @[Parameters.scala 153:31]
    node _T_111 = cvt(_T_110) @[Parameters.scala 153:49]
    node _T_113 = and(_T_111, asSInt(UInt<33>("h08a012000"))) @[Parameters.scala 153:52]
    node _T_114 = asSInt(_T_113) @[Parameters.scala 153:52]
    node _T_116 = eq(_T_114, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_117 = and(_T_108, _T_116) @[Parameters.scala 157:56]
    node _T_120 = leq(UInt<1>("h00"), UInt<3>("h06")) @[Parameters.scala 88:32]
    node _T_122 = leq(UInt<3>("h06"), UInt<3>("h06")) @[Parameters.scala 88:42]
    node _T_123 = and(_T_120, _T_122) @[Parameters.scala 88:37]
    node _T_124 = or(UInt<1>("h00"), _T_123) @[Parameters.scala 157:31]
    node _T_126 = xor(r_address, UInt<32>("h080000000")) @[Parameters.scala 153:31]
    node _T_127 = cvt(_T_126) @[Parameters.scala 153:49]
    node _T_129 = and(_T_127, asSInt(UInt<33>("h080000000"))) @[Parameters.scala 153:52]
    node _T_130 = asSInt(_T_129) @[Parameters.scala 153:52]
    node _T_132 = eq(_T_130, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_133 = and(_T_124, _T_132) @[Parameters.scala 157:56]
    node _T_136 = or(UInt<1>("h00"), UInt<1>("h00")) @[Parameters.scala 157:31]
    node _T_138 = xor(r_address, UInt<28>("h08000000")) @[Parameters.scala 153:31]
    node _T_139 = cvt(_T_138) @[Parameters.scala 153:49]
    node _T_141 = and(_T_139, asSInt(UInt<33>("h088000000"))) @[Parameters.scala 153:52]
    node _T_142 = asSInt(_T_141) @[Parameters.scala 153:52]
    node _T_144 = eq(_T_142, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_146 = xor(r_address, UInt<26>("h02000000")) @[Parameters.scala 153:31]
    node _T_147 = cvt(_T_146) @[Parameters.scala 153:49]
    node _T_149 = and(_T_147, asSInt(UInt<33>("h08a010000"))) @[Parameters.scala 153:52]
    node _T_150 = asSInt(_T_149) @[Parameters.scala 153:52]
    node _T_152 = eq(_T_150, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_154 = xor(r_address, UInt<1>("h00")) @[Parameters.scala 153:31]
    node _T_155 = cvt(_T_154) @[Parameters.scala 153:49]
    node _T_157 = and(_T_155, asSInt(UInt<33>("h08a012000"))) @[Parameters.scala 153:52]
    node _T_158 = asSInt(_T_157) @[Parameters.scala 153:52]
    node _T_160 = eq(_T_158, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_162 = xor(r_address, UInt<17>("h010000")) @[Parameters.scala 153:31]
    node _T_163 = cvt(_T_162) @[Parameters.scala 153:49]
    node _T_165 = and(_T_163, asSInt(UInt<33>("h08a010000"))) @[Parameters.scala 153:52]
    node _T_166 = asSInt(_T_165) @[Parameters.scala 153:52]
    node _T_168 = eq(_T_166, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_169 = or(_T_144, _T_152) @[Parameters.scala 158:42]
    node _T_170 = or(_T_169, _T_160) @[Parameters.scala 158:42]
    node _T_171 = or(_T_170, _T_168) @[Parameters.scala 158:42]
    node _T_172 = and(_T_136, _T_171) @[Parameters.scala 157:56]
    node _T_174 = or(UInt<1>("h00"), _T_117) @[Parameters.scala 159:30]
    node _T_175 = or(_T_174, _T_133) @[Parameters.scala 159:30]
    node _T_176 = or(_T_175, _T_172) @[Parameters.scala 159:30]
    wire voluntaryRelease : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<2>, address : UInt<32>, data : UInt<64>, error : UInt<1>} @[Edges.scala 319:17]
    voluntaryRelease is invalid @[Edges.scala 319:17]
    voluntaryRelease.opcode <= UInt<3>("h07") @[Edges.scala 320:15]
    voluntaryRelease.param <= req.param @[Edges.scala 321:15]
    voluntaryRelease.size <= UInt<3>("h06") @[Edges.scala 322:15]
    voluntaryRelease.source <= req.source @[Edges.scala 323:15]
    voluntaryRelease.address <= r_address @[Edges.scala 324:15]
    voluntaryRelease.data <= io.data_resp @[Edges.scala 325:15]
    voluntaryRelease.error <= UInt<1>("h00") @[Edges.scala 326:15]
    node _T_180 = mux(req.voluntary, voluntaryRelease, probeResponse) @[NBDcache.scala 512:25]
    io.release.bits <- _T_180 @[NBDcache.scala 512:19]
    
  module ProbeUnit : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip req : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<2>, address : UInt<32>, mask : UInt<8>, data : UInt<64>}}, rep : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<2>, address : UInt<32>, data : UInt<64>, error : UInt<1>}}, meta_read : {flip ready : UInt<1>, valid : UInt<1>, bits : {idx : UInt<6>, way_en : UInt<4>, tag : UInt<20>}}, meta_write : {flip ready : UInt<1>, valid : UInt<1>, bits : {idx : UInt<6>, way_en : UInt<4>, tag : UInt<20>, data : {coh : {state : UInt<2>}, tag : UInt<20>}}}, wb_req : {flip ready : UInt<1>, valid : UInt<1>, bits : {tag : UInt<20>, idx : UInt<6>, source : UInt<2>, param : UInt<3>, way_en : UInt<4>, voluntary : UInt<1>}}, flip way_en : UInt<4>, flip mshr_rdy : UInt<1>, flip block_state : {state : UInt<2>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    reg state : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[NBDcache.scala 530:18]
    reg req : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<2>, address : UInt<32>, mask : UInt<8>, data : UInt<64>}, clock @[NBDcache.scala 532:16]
    node req_idx = bits(req.address, 11, 6) @[NBDcache.scala 533:28]
    node req_tag = shr(req.address, 12) @[NBDcache.scala 534:29]
    reg way_en : UInt, clock @[NBDcache.scala 536:19]
    node tag_matches = neq(way_en, UInt<1>("h00")) @[NBDcache.scala 537:28]
    reg old_coh : {state : UInt<2>}, clock @[NBDcache.scala 538:20]
    wire miss_coh : {state : UInt<2>} @[Metadata.scala 160:20]
    miss_coh is invalid @[Metadata.scala 160:20]
    miss_coh.state <= UInt<2>("h00") @[Metadata.scala 161:16]
    node reply_coh = mux(tag_matches, old_coh, miss_coh) @[NBDcache.scala 540:22]
    node _T_37 = cat(req.param, reply_coh.state) @[Cat.scala 30:58]
    node _T_43 = cat(UInt<2>("h00"), UInt<2>("h03")) @[Cat.scala 30:58]
    node _T_49 = cat(UInt<2>("h00"), UInt<2>("h02")) @[Cat.scala 30:58]
    node _T_55 = cat(UInt<2>("h00"), UInt<2>("h01")) @[Cat.scala 30:58]
    node _T_61 = cat(UInt<2>("h00"), UInt<2>("h00")) @[Cat.scala 30:58]
    node _T_67 = cat(UInt<2>("h01"), UInt<2>("h03")) @[Cat.scala 30:58]
    node _T_73 = cat(UInt<2>("h01"), UInt<2>("h02")) @[Cat.scala 30:58]
    node _T_79 = cat(UInt<2>("h01"), UInt<2>("h01")) @[Cat.scala 30:58]
    node _T_85 = cat(UInt<2>("h01"), UInt<2>("h00")) @[Cat.scala 30:58]
    node _T_91 = cat(UInt<2>("h02"), UInt<2>("h03")) @[Cat.scala 30:58]
    node _T_97 = cat(UInt<2>("h02"), UInt<2>("h02")) @[Cat.scala 30:58]
    node _T_103 = cat(UInt<2>("h02"), UInt<2>("h01")) @[Cat.scala 30:58]
    node _T_109 = cat(UInt<2>("h02"), UInt<2>("h00")) @[Cat.scala 30:58]
    node _T_113 = eq(_T_109, _T_37) @[Misc.scala 94:20]
    node _T_114 = mux(_T_113, UInt<1>("h00"), UInt<1>("h00")) @[Misc.scala 76:9]
    node _T_115 = mux(_T_113, UInt<3>("h05"), UInt<1>("h00")) @[Misc.scala 76:36]
    node _T_116 = mux(_T_113, UInt<2>("h00"), UInt<1>("h00")) @[Misc.scala 76:63]
    node _T_117 = eq(_T_103, _T_37) @[Misc.scala 94:20]
    node _T_118 = mux(_T_117, UInt<1>("h00"), _T_114) @[Misc.scala 76:9]
    node _T_119 = mux(_T_117, UInt<3>("h02"), _T_115) @[Misc.scala 76:36]
    node _T_120 = mux(_T_117, UInt<2>("h00"), _T_116) @[Misc.scala 76:63]
    node _T_121 = eq(_T_97, _T_37) @[Misc.scala 94:20]
    node _T_122 = mux(_T_121, UInt<1>("h00"), _T_118) @[Misc.scala 76:9]
    node _T_123 = mux(_T_121, UInt<3>("h01"), _T_119) @[Misc.scala 76:36]
    node _T_124 = mux(_T_121, UInt<2>("h00"), _T_120) @[Misc.scala 76:63]
    node _T_125 = eq(_T_91, _T_37) @[Misc.scala 94:20]
    node _T_126 = mux(_T_125, UInt<1>("h01"), _T_122) @[Misc.scala 76:9]
    node _T_127 = mux(_T_125, UInt<3>("h01"), _T_123) @[Misc.scala 76:36]
    node _T_128 = mux(_T_125, UInt<2>("h00"), _T_124) @[Misc.scala 76:63]
    node _T_129 = eq(_T_85, _T_37) @[Misc.scala 94:20]
    node _T_130 = mux(_T_129, UInt<1>("h00"), _T_126) @[Misc.scala 76:9]
    node _T_131 = mux(_T_129, UInt<3>("h02"), _T_127) @[Misc.scala 76:36]
    node _T_132 = mux(_T_129, UInt<2>("h00"), _T_128) @[Misc.scala 76:63]
    node _T_133 = eq(_T_79, _T_37) @[Misc.scala 94:20]
    node _T_134 = mux(_T_133, UInt<1>("h00"), _T_130) @[Misc.scala 76:9]
    node _T_135 = mux(_T_133, UInt<3>("h04"), _T_131) @[Misc.scala 76:36]
    node _T_136 = mux(_T_133, UInt<2>("h01"), _T_132) @[Misc.scala 76:63]
    node _T_137 = eq(_T_73, _T_37) @[Misc.scala 94:20]
    node _T_138 = mux(_T_137, UInt<1>("h00"), _T_134) @[Misc.scala 76:9]
    node _T_139 = mux(_T_137, UInt<3>("h00"), _T_135) @[Misc.scala 76:36]
    node _T_140 = mux(_T_137, UInt<2>("h01"), _T_136) @[Misc.scala 76:63]
    node _T_141 = eq(_T_67, _T_37) @[Misc.scala 94:20]
    node _T_142 = mux(_T_141, UInt<1>("h01"), _T_138) @[Misc.scala 76:9]
    node _T_143 = mux(_T_141, UInt<3>("h00"), _T_139) @[Misc.scala 76:36]
    node _T_144 = mux(_T_141, UInt<2>("h01"), _T_140) @[Misc.scala 76:63]
    node _T_145 = eq(_T_61, _T_37) @[Misc.scala 94:20]
    node _T_146 = mux(_T_145, UInt<1>("h00"), _T_142) @[Misc.scala 76:9]
    node _T_147 = mux(_T_145, UInt<3>("h05"), _T_143) @[Misc.scala 76:36]
    node _T_148 = mux(_T_145, UInt<2>("h00"), _T_144) @[Misc.scala 76:63]
    node _T_149 = eq(_T_55, _T_37) @[Misc.scala 94:20]
    node _T_150 = mux(_T_149, UInt<1>("h00"), _T_146) @[Misc.scala 76:9]
    node _T_151 = mux(_T_149, UInt<3>("h04"), _T_147) @[Misc.scala 76:36]
    node _T_152 = mux(_T_149, UInt<2>("h01"), _T_148) @[Misc.scala 76:63]
    node _T_153 = eq(_T_49, _T_37) @[Misc.scala 94:20]
    node _T_154 = mux(_T_153, UInt<1>("h00"), _T_150) @[Misc.scala 76:9]
    node _T_155 = mux(_T_153, UInt<3>("h03"), _T_151) @[Misc.scala 76:36]
    node _T_156 = mux(_T_153, UInt<2>("h02"), _T_152) @[Misc.scala 76:63]
    node _T_157 = eq(_T_43, _T_37) @[Misc.scala 94:20]
    node is_dirty = mux(_T_157, UInt<1>("h01"), _T_154) @[Misc.scala 76:9]
    node report_param = mux(_T_157, UInt<3>("h03"), _T_155) @[Misc.scala 76:36]
    node _T_158 = mux(_T_157, UInt<2>("h02"), _T_156) @[Misc.scala 76:63]
    wire new_coh : {state : UInt<2>} @[Metadata.scala 160:20]
    new_coh is invalid @[Metadata.scala 160:20]
    new_coh.state <= _T_158 @[Metadata.scala 161:16]
    node _T_160 = eq(state, UInt<4>("h00")) @[NBDcache.scala 543:25]
    io.req.ready <= _T_160 @[NBDcache.scala 543:16]
    node _T_161 = eq(state, UInt<4>("h05")) @[NBDcache.scala 544:25]
    io.rep.valid <= _T_161 @[NBDcache.scala 544:16]
    wire _T_163 : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<2>, address : UInt<32>, data : UInt<64>, error : UInt<1>} @[Edges.scala 334:17]
    _T_163 is invalid @[Edges.scala 334:17]
    _T_163.opcode <= UInt<3>("h04") @[Edges.scala 335:15]
    _T_163.param <= report_param @[Edges.scala 336:15]
    _T_163.size <= req.size @[Edges.scala 337:15]
    _T_163.source <= req.source @[Edges.scala 338:15]
    _T_163.address <= req.address @[Edges.scala 339:15]
    _T_163.data <= UInt<1>("h00") @[Edges.scala 340:15]
    _T_163.error <= UInt<1>("h00") @[Edges.scala 341:15]
    io.rep.bits <- _T_163 @[NBDcache.scala 545:15]
    node _T_168 = eq(io.rep.valid, UInt<1>("h00")) @[NBDcache.scala 547:10]
    node _T_169 = bits(io.rep.bits.opcode, 0, 0) @[Edges.scala 102:36]
    node _T_171 = eq(_T_169, UInt<1>("h00")) @[NBDcache.scala 547:27]
    node _T_172 = or(_T_168, _T_171) @[NBDcache.scala 547:24]
    node _T_173 = bits(reset, 0, 0) @[NBDcache.scala 547:9]
    node _T_174 = or(_T_172, _T_173) @[NBDcache.scala 547:9]
    node _T_176 = eq(_T_174, UInt<1>("h00")) @[NBDcache.scala 547:9]
    when _T_176 : @[NBDcache.scala 547:9]
      printf(clock, UInt<1>(1), "Assertion failed: ProbeUnit should not send ProbeAcks with data, WritebackUnit should handle it\n    at NBDcache.scala:547 assert(!io.rep.valid || !edge.hasData(io.rep.bits),\n") @[NBDcache.scala 547:9]
      stop(clock, UInt<1>(1), 1) @[NBDcache.scala 547:9]
      skip @[NBDcache.scala 547:9]
    node _T_177 = eq(state, UInt<4>("h01")) @[NBDcache.scala 550:31]
    io.meta_read.valid <= _T_177 @[NBDcache.scala 550:22]
    io.meta_read.bits.idx <= req_idx @[NBDcache.scala 551:25]
    io.meta_read.bits.tag <= req_tag @[NBDcache.scala 552:25]
    node _T_178 = eq(state, UInt<4>("h08")) @[NBDcache.scala 554:32]
    io.meta_write.valid <= _T_178 @[NBDcache.scala 554:23]
    io.meta_write.bits.way_en <= way_en @[NBDcache.scala 555:29]
    io.meta_write.bits.idx <= req_idx @[NBDcache.scala 556:26]
    io.meta_write.bits.data.tag <= req_tag @[NBDcache.scala 557:31]
    io.meta_write.bits.data.coh <- new_coh @[NBDcache.scala 558:31]
    node _T_179 = eq(state, UInt<4>("h06")) @[NBDcache.scala 560:28]
    io.wb_req.valid <= _T_179 @[NBDcache.scala 560:19]
    io.wb_req.bits.source <= req.source @[NBDcache.scala 561:25]
    io.wb_req.bits.idx <= req_idx @[NBDcache.scala 562:22]
    io.wb_req.bits.tag <= req_tag @[NBDcache.scala 563:22]
    io.wb_req.bits.param <= report_param @[NBDcache.scala 564:24]
    io.wb_req.bits.way_en <= way_en @[NBDcache.scala 565:25]
    io.wb_req.bits.voluntary <= UInt<1>("h00") @[NBDcache.scala 566:28]
    node _T_181 = and(io.req.ready, io.req.valid) @[Decoupled.scala 30:37]
    when _T_181 : @[NBDcache.scala 569:24]
      state <= UInt<4>("h01") @[NBDcache.scala 570:11]
      req <- io.req.bits @[NBDcache.scala 571:9]
      skip @[NBDcache.scala 569:24]
    node _T_182 = and(io.meta_read.ready, io.meta_read.valid) @[Decoupled.scala 30:37]
    when _T_182 : @[NBDcache.scala 575:30]
      state <= UInt<4>("h02") @[NBDcache.scala 576:11]
      skip @[NBDcache.scala 575:30]
    node _T_183 = eq(state, UInt<4>("h02")) @[NBDcache.scala 580:15]
    when _T_183 : @[NBDcache.scala 580:32]
      state <= UInt<4>("h03") @[NBDcache.scala 581:11]
      skip @[NBDcache.scala 580:32]
    node _T_184 = eq(state, UInt<4>("h03")) @[NBDcache.scala 584:15]
    when _T_184 : @[NBDcache.scala 584:31]
      old_coh <- io.block_state @[NBDcache.scala 585:13]
      way_en <= io.way_en @[NBDcache.scala 586:12]
      node _T_185 = mux(io.mshr_rdy, UInt<4>("h04"), UInt<4>("h01")) @[NBDcache.scala 588:17]
      state <= _T_185 @[NBDcache.scala 588:11]
      skip @[NBDcache.scala 584:31]
    node _T_186 = eq(state, UInt<4>("h04")) @[NBDcache.scala 591:15]
    when _T_186 : @[NBDcache.scala 591:32]
      node _T_187 = and(tag_matches, is_dirty) @[NBDcache.scala 592:30]
      node _T_188 = mux(_T_187, UInt<4>("h06"), UInt<4>("h05")) @[NBDcache.scala 592:17]
      state <= _T_188 @[NBDcache.scala 592:11]
      skip @[NBDcache.scala 591:32]
    node _T_189 = eq(state, UInt<4>("h05")) @[NBDcache.scala 595:15]
    node _T_190 = and(_T_189, io.rep.ready) @[NBDcache.scala 595:29]
    when _T_190 : @[NBDcache.scala 595:46]
      node _T_191 = mux(tag_matches, UInt<4>("h08"), UInt<4>("h00")) @[NBDcache.scala 596:17]
      state <= _T_191 @[NBDcache.scala 596:11]
      skip @[NBDcache.scala 595:46]
    node _T_192 = and(io.wb_req.ready, io.wb_req.valid) @[Decoupled.scala 30:37]
    when _T_192 : @[NBDcache.scala 600:27]
      state <= UInt<4>("h07") @[NBDcache.scala 601:11]
      skip @[NBDcache.scala 600:27]
    node _T_193 = eq(state, UInt<4>("h07")) @[NBDcache.scala 605:15]
    node _T_194 = and(_T_193, io.wb_req.ready) @[NBDcache.scala 605:36]
    when _T_194 : @[NBDcache.scala 605:56]
      state <= UInt<4>("h08") @[NBDcache.scala 606:11]
      skip @[NBDcache.scala 605:56]
    node _T_195 = and(io.meta_write.ready, io.meta_write.valid) @[Decoupled.scala 30:37]
    when _T_195 : @[NBDcache.scala 609:31]
      state <= UInt<4>("h00") @[NBDcache.scala 610:11]
      skip @[NBDcache.scala 609:31]
    
  module Arbiter : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {idx : UInt<6>, way_en : UInt<4>, tag : UInt<20>}}[2], out : {flip ready : UInt<1>, valid : UInt<1>, bits : {idx : UInt<6>, way_en : UInt<4>, tag : UInt<20>}}, chosen : UInt<1>}
    
    io.chosen <= UInt<1>("h01") @[Arbiter.scala 116:13]
    io.out.bits.tag <= io.in[1].bits.tag @[Arbiter.scala 117:15]
    io.out.bits.way_en <= io.in[1].bits.way_en @[Arbiter.scala 117:15]
    io.out.bits.idx <= io.in[1].bits.idx @[Arbiter.scala 117:15]
    when io.in[0].valid : @[Arbiter.scala 119:27]
      io.chosen <= UInt<1>("h00") @[Arbiter.scala 120:17]
      io.out.bits.tag <= io.in[0].bits.tag @[Arbiter.scala 121:19]
      io.out.bits.way_en <= io.in[0].bits.way_en @[Arbiter.scala 121:19]
      io.out.bits.idx <= io.in[0].bits.idx @[Arbiter.scala 121:19]
      skip @[Arbiter.scala 119:27]
    node _T_47 = eq(io.in[0].valid, UInt<1>("h00")) @[Arbiter.scala 29:78]
    node _T_48 = and(UInt<1>("h01"), io.out.ready) @[Arbiter.scala 127:19]
    io.in[0].ready <= _T_48 @[Arbiter.scala 127:14]
    node _T_49 = and(_T_47, io.out.ready) @[Arbiter.scala 127:19]
    io.in[1].ready <= _T_49 @[Arbiter.scala 127:14]
    node _T_51 = eq(_T_47, UInt<1>("h00")) @[Arbiter.scala 128:19]
    node _T_52 = or(_T_51, io.in[1].valid) @[Arbiter.scala 128:31]
    io.out.valid <= _T_52 @[Arbiter.scala 128:16]
    
  module Arbiter_1 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {idx : UInt<6>, way_en : UInt<4>, tag : UInt<20>, data : {coh : {state : UInt<2>}, tag : UInt<20>}}}[2], out : {flip ready : UInt<1>, valid : UInt<1>, bits : {idx : UInt<6>, way_en : UInt<4>, tag : UInt<20>, data : {coh : {state : UInt<2>}, tag : UInt<20>}}}, chosen : UInt<1>}
    
    io.chosen <= UInt<1>("h01") @[Arbiter.scala 116:13]
    io.out.bits.data.tag <= io.in[1].bits.data.tag @[Arbiter.scala 117:15]
    io.out.bits.data.coh.state <= io.in[1].bits.data.coh.state @[Arbiter.scala 117:15]
    io.out.bits.tag <= io.in[1].bits.tag @[Arbiter.scala 117:15]
    io.out.bits.way_en <= io.in[1].bits.way_en @[Arbiter.scala 117:15]
    io.out.bits.idx <= io.in[1].bits.idx @[Arbiter.scala 117:15]
    when io.in[0].valid : @[Arbiter.scala 119:27]
      io.chosen <= UInt<1>("h00") @[Arbiter.scala 120:17]
      io.out.bits.data.tag <= io.in[0].bits.data.tag @[Arbiter.scala 121:19]
      io.out.bits.data.coh.state <= io.in[0].bits.data.coh.state @[Arbiter.scala 121:19]
      io.out.bits.tag <= io.in[0].bits.tag @[Arbiter.scala 121:19]
      io.out.bits.way_en <= io.in[0].bits.way_en @[Arbiter.scala 121:19]
      io.out.bits.idx <= io.in[0].bits.idx @[Arbiter.scala 121:19]
      skip @[Arbiter.scala 119:27]
    node _T_47 = eq(io.in[0].valid, UInt<1>("h00")) @[Arbiter.scala 29:78]
    node _T_48 = and(UInt<1>("h01"), io.out.ready) @[Arbiter.scala 127:19]
    io.in[0].ready <= _T_48 @[Arbiter.scala 127:14]
    node _T_49 = and(_T_47, io.out.ready) @[Arbiter.scala 127:19]
    io.in[1].ready <= _T_49 @[Arbiter.scala 127:14]
    node _T_51 = eq(_T_47, UInt<1>("h00")) @[Arbiter.scala 128:19]
    node _T_52 = or(_T_51, io.in[1].valid) @[Arbiter.scala 128:31]
    io.out.valid <= _T_52 @[Arbiter.scala 128:16]
    
  module Arbiter_2 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {tag : UInt<20>, idx : UInt<6>, source : UInt<2>, param : UInt<3>, way_en : UInt<4>, voluntary : UInt<1>}}[2], out : {flip ready : UInt<1>, valid : UInt<1>, bits : {tag : UInt<20>, idx : UInt<6>, source : UInt<2>, param : UInt<3>, way_en : UInt<4>, voluntary : UInt<1>}}, chosen : UInt<1>}
    
    io.chosen <= UInt<1>("h01") @[Arbiter.scala 116:13]
    io.out.bits.voluntary <= io.in[1].bits.voluntary @[Arbiter.scala 117:15]
    io.out.bits.way_en <= io.in[1].bits.way_en @[Arbiter.scala 117:15]
    io.out.bits.param <= io.in[1].bits.param @[Arbiter.scala 117:15]
    io.out.bits.source <= io.in[1].bits.source @[Arbiter.scala 117:15]
    io.out.bits.idx <= io.in[1].bits.idx @[Arbiter.scala 117:15]
    io.out.bits.tag <= io.in[1].bits.tag @[Arbiter.scala 117:15]
    when io.in[0].valid : @[Arbiter.scala 119:27]
      io.chosen <= UInt<1>("h00") @[Arbiter.scala 120:17]
      io.out.bits.voluntary <= io.in[0].bits.voluntary @[Arbiter.scala 121:19]
      io.out.bits.way_en <= io.in[0].bits.way_en @[Arbiter.scala 121:19]
      io.out.bits.param <= io.in[0].bits.param @[Arbiter.scala 121:19]
      io.out.bits.source <= io.in[0].bits.source @[Arbiter.scala 121:19]
      io.out.bits.idx <= io.in[0].bits.idx @[Arbiter.scala 121:19]
      io.out.bits.tag <= io.in[0].bits.tag @[Arbiter.scala 121:19]
      skip @[Arbiter.scala 119:27]
    node _T_47 = eq(io.in[0].valid, UInt<1>("h00")) @[Arbiter.scala 29:78]
    node _T_48 = and(UInt<1>("h01"), io.out.ready) @[Arbiter.scala 127:19]
    io.in[0].ready <= _T_48 @[Arbiter.scala 127:14]
    node _T_49 = and(_T_47, io.out.ready) @[Arbiter.scala 127:19]
    io.in[1].ready <= _T_49 @[Arbiter.scala 127:14]
    node _T_51 = eq(_T_47, UInt<1>("h00")) @[Arbiter.scala 128:19]
    node _T_52 = or(_T_51, io.in[1].valid) @[Arbiter.scala 128:31]
    io.out.valid <= _T_52 @[Arbiter.scala 128:16]
    
  module Arbiter_3 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<40>, tag : UInt<7>, cmd : UInt<5>, typ : UInt<3>, phys : UInt<1>, sdq_id : UInt<5>}}[2], out : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<40>, tag : UInt<7>, cmd : UInt<5>, typ : UInt<3>, phys : UInt<1>, sdq_id : UInt<5>}}, chosen : UInt<1>}
    
    io.chosen <= UInt<1>("h01") @[Arbiter.scala 116:13]
    io.out.bits.sdq_id <= io.in[1].bits.sdq_id @[Arbiter.scala 117:15]
    io.out.bits.phys <= io.in[1].bits.phys @[Arbiter.scala 117:15]
    io.out.bits.typ <= io.in[1].bits.typ @[Arbiter.scala 117:15]
    io.out.bits.cmd <= io.in[1].bits.cmd @[Arbiter.scala 117:15]
    io.out.bits.tag <= io.in[1].bits.tag @[Arbiter.scala 117:15]
    io.out.bits.addr <= io.in[1].bits.addr @[Arbiter.scala 117:15]
    when io.in[0].valid : @[Arbiter.scala 119:27]
      io.chosen <= UInt<1>("h00") @[Arbiter.scala 120:17]
      io.out.bits.sdq_id <= io.in[0].bits.sdq_id @[Arbiter.scala 121:19]
      io.out.bits.phys <= io.in[0].bits.phys @[Arbiter.scala 121:19]
      io.out.bits.typ <= io.in[0].bits.typ @[Arbiter.scala 121:19]
      io.out.bits.cmd <= io.in[0].bits.cmd @[Arbiter.scala 121:19]
      io.out.bits.tag <= io.in[0].bits.tag @[Arbiter.scala 121:19]
      io.out.bits.addr <= io.in[0].bits.addr @[Arbiter.scala 121:19]
      skip @[Arbiter.scala 119:27]
    node _T_47 = eq(io.in[0].valid, UInt<1>("h00")) @[Arbiter.scala 29:78]
    node _T_48 = and(UInt<1>("h01"), io.out.ready) @[Arbiter.scala 127:19]
    io.in[0].ready <= _T_48 @[Arbiter.scala 127:14]
    node _T_49 = and(_T_47, io.out.ready) @[Arbiter.scala 127:19]
    io.in[1].ready <= _T_49 @[Arbiter.scala 127:14]
    node _T_51 = eq(_T_47, UInt<1>("h00")) @[Arbiter.scala 128:19]
    node _T_52 = or(_T_51, io.in[1].valid) @[Arbiter.scala 128:31]
    io.out.valid <= _T_52 @[Arbiter.scala 128:16]
    
  module Arbiter_4 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<1>}[2], out : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<1>}, chosen : UInt<1>}
    
    io.chosen <= UInt<1>("h01") @[Arbiter.scala 116:13]
    io.out.bits <= io.in[1].bits @[Arbiter.scala 117:15]
    when io.in[0].valid : @[Arbiter.scala 119:27]
      io.chosen <= UInt<1>("h00") @[Arbiter.scala 120:17]
      io.out.bits <= io.in[0].bits @[Arbiter.scala 121:19]
      skip @[Arbiter.scala 119:27]
    node _T_47 = eq(io.in[0].valid, UInt<1>("h00")) @[Arbiter.scala 29:78]
    node _T_48 = and(UInt<1>("h01"), io.out.ready) @[Arbiter.scala 127:19]
    io.in[0].ready <= _T_48 @[Arbiter.scala 127:14]
    node _T_49 = and(_T_47, io.out.ready) @[Arbiter.scala 127:19]
    io.in[1].ready <= _T_49 @[Arbiter.scala 127:14]
    node _T_51 = eq(_T_47, UInt<1>("h00")) @[Arbiter.scala 128:19]
    node _T_52 = or(_T_51, io.in[1].valid) @[Arbiter.scala 128:31]
    io.out.valid <= _T_52 @[Arbiter.scala 128:16]
    
  module Queue_14 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enq : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<40>, tag : UInt<7>, cmd : UInt<5>, typ : UInt<3>, phys : UInt<1>, sdq_id : UInt<5>}}, deq : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<40>, tag : UInt<7>, cmd : UInt<5>, typ : UInt<3>, phys : UInt<1>, sdq_id : UInt<5>}}, count : UInt<5>}
    
    clock is invalid
    reset is invalid
    io is invalid
    cmem ram : {addr : UInt<40>, tag : UInt<7>, cmd : UInt<5>, typ : UInt<3>, phys : UInt<1>, sdq_id : UInt<5>}[16] @[Decoupled.scala 211:24]
    reg value : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[Counter.scala 26:33]
    reg value_1 : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[Counter.scala 26:33]
    reg maybe_full : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Decoupled.scala 214:35]
    node _T_28 = eq(value, value_1) @[Decoupled.scala 216:41]
    node _T_30 = eq(maybe_full, UInt<1>("h00")) @[Decoupled.scala 217:36]
    node empty = and(_T_28, _T_30) @[Decoupled.scala 217:33]
    node _T_31 = and(_T_28, maybe_full) @[Decoupled.scala 218:32]
    node _T_32 = and(io.enq.ready, io.enq.valid) @[Decoupled.scala 30:37]
    wire do_enq : UInt<1>
    do_enq is invalid
    do_enq <= _T_32
    node _T_34 = and(io.deq.ready, io.deq.valid) @[Decoupled.scala 30:37]
    wire do_deq : UInt<1>
    do_deq is invalid
    do_deq <= _T_34
    when do_enq : @[Decoupled.scala 222:17]
      infer mport _T_36 = ram[value], clock @[Decoupled.scala 223:8]
      _T_36 <- io.enq.bits @[Decoupled.scala 223:24]
      node wrap = eq(value, UInt<4>("h0f")) @[Counter.scala 34:24]
      node _T_39 = add(value, UInt<1>("h01")) @[Counter.scala 35:22]
      node _T_40 = tail(_T_39, 1) @[Counter.scala 35:22]
      value <= _T_40 @[Counter.scala 35:13]
      skip @[Decoupled.scala 222:17]
    when do_deq : @[Decoupled.scala 226:17]
      node wrap_1 = eq(value_1, UInt<4>("h0f")) @[Counter.scala 34:24]
      node _T_43 = add(value_1, UInt<1>("h01")) @[Counter.scala 35:22]
      node _T_44 = tail(_T_43, 1) @[Counter.scala 35:22]
      value_1 <= _T_44 @[Counter.scala 35:13]
      skip @[Decoupled.scala 226:17]
    node _T_45 = neq(do_enq, do_deq) @[Decoupled.scala 229:16]
    when _T_45 : @[Decoupled.scala 229:27]
      maybe_full <= do_enq @[Decoupled.scala 230:16]
      skip @[Decoupled.scala 229:27]
    node _T_47 = eq(empty, UInt<1>("h00")) @[Decoupled.scala 233:19]
    io.deq.valid <= _T_47 @[Decoupled.scala 233:16]
    node _T_49 = eq(_T_31, UInt<1>("h00")) @[Decoupled.scala 234:19]
    io.enq.ready <= _T_49 @[Decoupled.scala 234:16]
    infer mport _T_50 = ram[value_1], clock @[Decoupled.scala 235:21]
    io.deq.bits <- _T_50 @[Decoupled.scala 235:15]
    node _T_51 = sub(value, value_1) @[Decoupled.scala 250:40]
    node _T_52 = asUInt(_T_51) @[Decoupled.scala 250:40]
    node _T_53 = tail(_T_52, 1) @[Decoupled.scala 250:40]
    node _T_54 = and(maybe_full, _T_28) @[Decoupled.scala 252:32]
    node _T_55 = cat(_T_54, _T_53) @[Cat.scala 30:58]
    io.count <= _T_55 @[Decoupled.scala 252:14]
    
  module Queue_15 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enq : {flip ready : UInt<1>, valid : UInt<1>, bits : {sink : UInt<3>}}, deq : {flip ready : UInt<1>, valid : UInt<1>, bits : {sink : UInt<3>}}, count : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    cmem ram : {sink : UInt<3>}[1] @[Decoupled.scala 211:24]
    reg maybe_full : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Decoupled.scala 214:35]
    node _T_24 = eq(UInt<1>("h00"), UInt<1>("h00")) @[Decoupled.scala 216:41]
    node _T_26 = eq(maybe_full, UInt<1>("h00")) @[Decoupled.scala 217:36]
    node empty = and(_T_24, _T_26) @[Decoupled.scala 217:33]
    node _T_27 = and(_T_24, maybe_full) @[Decoupled.scala 218:32]
    node _T_28 = and(io.enq.ready, io.enq.valid) @[Decoupled.scala 30:37]
    wire do_enq : UInt<1>
    do_enq is invalid
    do_enq <= _T_28
    node _T_30 = and(io.deq.ready, io.deq.valid) @[Decoupled.scala 30:37]
    wire do_deq : UInt<1>
    do_deq is invalid
    do_deq <= _T_30
    when do_enq : @[Decoupled.scala 222:17]
      infer mport _T_33 = ram[UInt<1>("h00")], clock @[Decoupled.scala 223:8]
      _T_33 <- io.enq.bits @[Decoupled.scala 223:24]
      skip @[Decoupled.scala 222:17]
    when do_deq : @[Decoupled.scala 226:17]
      skip @[Decoupled.scala 226:17]
    node _T_36 = neq(do_enq, do_deq) @[Decoupled.scala 229:16]
    when _T_36 : @[Decoupled.scala 229:27]
      maybe_full <= do_enq @[Decoupled.scala 230:16]
      skip @[Decoupled.scala 229:27]
    node _T_38 = eq(empty, UInt<1>("h00")) @[Decoupled.scala 233:19]
    io.deq.valid <= _T_38 @[Decoupled.scala 233:16]
    node _T_40 = eq(_T_27, UInt<1>("h00")) @[Decoupled.scala 234:19]
    io.enq.ready <= _T_40 @[Decoupled.scala 234:16]
    infer mport _T_42 = ram[UInt<1>("h00")], clock @[Decoupled.scala 235:21]
    io.deq.bits <- _T_42 @[Decoupled.scala 235:15]
    node _T_43 = sub(UInt<1>("h00"), UInt<1>("h00")) @[Decoupled.scala 250:40]
    node _T_44 = asUInt(_T_43) @[Decoupled.scala 250:40]
    node _T_45 = tail(_T_44, 1) @[Decoupled.scala 250:40]
    node _T_46 = and(maybe_full, _T_24) @[Decoupled.scala 252:32]
    node _T_47 = cat(_T_46, _T_45) @[Cat.scala 30:58]
    io.count <= _T_47 @[Decoupled.scala 252:14]
    
  module MSHR : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip req_pri_val : UInt<1>, req_pri_rdy : UInt<1>, flip req_sec_val : UInt<1>, req_sec_rdy : UInt<1>, flip req_bits : {addr : UInt<40>, tag : UInt<7>, cmd : UInt<5>, typ : UInt<3>, phys : UInt<1>, sdq_id : UInt<5>, tag_match : UInt<1>, old_meta : {coh : {state : UInt<2>}, tag : UInt<20>}, way_en : UInt<4>}, idx_match : UInt<1>, tag : UInt<20>, mem_acquire : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<2>, address : UInt<32>, mask : UInt<8>, data : UInt<64>}}, flip mem_grant : {valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<2>, sink : UInt<3>, data : UInt<64>, error : UInt<1>}}, mem_finish : {flip ready : UInt<1>, valid : UInt<1>, bits : {sink : UInt<3>}}, refill : {way_en : UInt<4>, addr : UInt<12>}, meta_read : {flip ready : UInt<1>, valid : UInt<1>, bits : {idx : UInt<6>, way_en : UInt<4>, tag : UInt<20>}}, meta_write : {flip ready : UInt<1>, valid : UInt<1>, bits : {idx : UInt<6>, way_en : UInt<4>, tag : UInt<20>, data : {coh : {state : UInt<2>}, tag : UInt<20>}}}, replay : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<40>, tag : UInt<7>, cmd : UInt<5>, typ : UInt<3>, phys : UInt<1>, sdq_id : UInt<5>}}, wb_req : {flip ready : UInt<1>, valid : UInt<1>, bits : {tag : UInt<20>, idx : UInt<6>, source : UInt<2>, param : UInt<3>, way_en : UInt<4>, voluntary : UInt<1>}}, probe_rdy : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    reg state : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[NBDcache.scala 159:18]
    reg req : {addr : UInt<40>, tag : UInt<7>, cmd : UInt<5>, typ : UInt<3>, phys : UInt<1>, sdq_id : UInt<5>, tag_match : UInt<1>, old_meta : {coh : {state : UInt<2>}, tag : UInt<20>}, way_en : UInt<4>}, clock @[NBDcache.scala 161:16]
    node req_idx = bits(req.addr, 11, 6) @[NBDcache.scala 162:25]
    node req_tag = shr(req.addr, 12) @[NBDcache.scala 163:26]
    node _T_44 = shr(req.addr, 6) @[NBDcache.scala 164:34]
    node req_block_addr = shl(_T_44, 6) @[NBDcache.scala 164:51]
    node _T_45 = bits(io.req_bits.addr, 11, 6) @[NBDcache.scala 165:47]
    node idx_match = eq(req_idx, _T_45) @[NBDcache.scala 165:27]
    wire _T_48 : {state : UInt<2>} @[Metadata.scala 160:20]
    _T_48 is invalid @[Metadata.scala 160:20]
    _T_48.state <= UInt<2>("h00") @[Metadata.scala 161:16]
    reg new_coh : {state : UInt<2>}, clock with : (reset => (reset, _T_48)) @[NBDcache.scala 167:20]
    node _T_58 = eq(UInt<5>("h013"), UInt<5>("h010")) @[Mux.scala 46:19]
    node _T_59 = mux(_T_58, UInt<2>("h00"), UInt<2>("h02")) @[Mux.scala 46:16]
    node _T_60 = eq(UInt<5>("h012"), UInt<5>("h010")) @[Mux.scala 46:19]
    node _T_61 = mux(_T_60, UInt<2>("h01"), _T_59) @[Mux.scala 46:16]
    node _T_62 = eq(UInt<5>("h010"), UInt<5>("h010")) @[Mux.scala 46:19]
    node _T_63 = mux(_T_62, UInt<2>("h02"), _T_61) @[Mux.scala 46:16]
    node _T_64 = cat(_T_63, req.old_meta.coh.state) @[Cat.scala 30:58]
    node _T_70 = cat(UInt<2>("h00"), UInt<2>("h03")) @[Cat.scala 30:58]
    node _T_76 = cat(UInt<2>("h00"), UInt<2>("h02")) @[Cat.scala 30:58]
    node _T_82 = cat(UInt<2>("h00"), UInt<2>("h01")) @[Cat.scala 30:58]
    node _T_88 = cat(UInt<2>("h00"), UInt<2>("h00")) @[Cat.scala 30:58]
    node _T_94 = cat(UInt<2>("h01"), UInt<2>("h03")) @[Cat.scala 30:58]
    node _T_100 = cat(UInt<2>("h01"), UInt<2>("h02")) @[Cat.scala 30:58]
    node _T_106 = cat(UInt<2>("h01"), UInt<2>("h01")) @[Cat.scala 30:58]
    node _T_112 = cat(UInt<2>("h01"), UInt<2>("h00")) @[Cat.scala 30:58]
    node _T_118 = cat(UInt<2>("h02"), UInt<2>("h03")) @[Cat.scala 30:58]
    node _T_124 = cat(UInt<2>("h02"), UInt<2>("h02")) @[Cat.scala 30:58]
    node _T_130 = cat(UInt<2>("h02"), UInt<2>("h01")) @[Cat.scala 30:58]
    node _T_136 = cat(UInt<2>("h02"), UInt<2>("h00")) @[Cat.scala 30:58]
    node _T_140 = eq(_T_136, _T_64) @[Misc.scala 94:20]
    node _T_141 = mux(_T_140, UInt<1>("h00"), UInt<1>("h00")) @[Misc.scala 76:9]
    node _T_142 = mux(_T_140, UInt<3>("h05"), UInt<1>("h00")) @[Misc.scala 76:36]
    node _T_143 = mux(_T_140, UInt<2>("h00"), UInt<1>("h00")) @[Misc.scala 76:63]
    node _T_144 = eq(_T_130, _T_64) @[Misc.scala 94:20]
    node _T_145 = mux(_T_144, UInt<1>("h00"), _T_141) @[Misc.scala 76:9]
    node _T_146 = mux(_T_144, UInt<3>("h02"), _T_142) @[Misc.scala 76:36]
    node _T_147 = mux(_T_144, UInt<2>("h00"), _T_143) @[Misc.scala 76:63]
    node _T_148 = eq(_T_124, _T_64) @[Misc.scala 94:20]
    node _T_149 = mux(_T_148, UInt<1>("h00"), _T_145) @[Misc.scala 76:9]
    node _T_150 = mux(_T_148, UInt<3>("h01"), _T_146) @[Misc.scala 76:36]
    node _T_151 = mux(_T_148, UInt<2>("h00"), _T_147) @[Misc.scala 76:63]
    node _T_152 = eq(_T_118, _T_64) @[Misc.scala 94:20]
    node _T_153 = mux(_T_152, UInt<1>("h01"), _T_149) @[Misc.scala 76:9]
    node _T_154 = mux(_T_152, UInt<3>("h01"), _T_150) @[Misc.scala 76:36]
    node _T_155 = mux(_T_152, UInt<2>("h00"), _T_151) @[Misc.scala 76:63]
    node _T_156 = eq(_T_112, _T_64) @[Misc.scala 94:20]
    node _T_157 = mux(_T_156, UInt<1>("h00"), _T_153) @[Misc.scala 76:9]
    node _T_158 = mux(_T_156, UInt<3>("h02"), _T_154) @[Misc.scala 76:36]
    node _T_159 = mux(_T_156, UInt<2>("h00"), _T_155) @[Misc.scala 76:63]
    node _T_160 = eq(_T_106, _T_64) @[Misc.scala 94:20]
    node _T_161 = mux(_T_160, UInt<1>("h00"), _T_157) @[Misc.scala 76:9]
    node _T_162 = mux(_T_160, UInt<3>("h04"), _T_158) @[Misc.scala 76:36]
    node _T_163 = mux(_T_160, UInt<2>("h01"), _T_159) @[Misc.scala 76:63]
    node _T_164 = eq(_T_100, _T_64) @[Misc.scala 94:20]
    node _T_165 = mux(_T_164, UInt<1>("h00"), _T_161) @[Misc.scala 76:9]
    node _T_166 = mux(_T_164, UInt<3>("h00"), _T_162) @[Misc.scala 76:36]
    node _T_167 = mux(_T_164, UInt<2>("h01"), _T_163) @[Misc.scala 76:63]
    node _T_168 = eq(_T_94, _T_64) @[Misc.scala 94:20]
    node _T_169 = mux(_T_168, UInt<1>("h01"), _T_165) @[Misc.scala 76:9]
    node _T_170 = mux(_T_168, UInt<3>("h00"), _T_166) @[Misc.scala 76:36]
    node _T_171 = mux(_T_168, UInt<2>("h01"), _T_167) @[Misc.scala 76:63]
    node _T_172 = eq(_T_88, _T_64) @[Misc.scala 94:20]
    node _T_173 = mux(_T_172, UInt<1>("h00"), _T_169) @[Misc.scala 76:9]
    node _T_174 = mux(_T_172, UInt<3>("h05"), _T_170) @[Misc.scala 76:36]
    node _T_175 = mux(_T_172, UInt<2>("h00"), _T_171) @[Misc.scala 76:63]
    node _T_176 = eq(_T_82, _T_64) @[Misc.scala 94:20]
    node _T_177 = mux(_T_176, UInt<1>("h00"), _T_173) @[Misc.scala 76:9]
    node _T_178 = mux(_T_176, UInt<3>("h04"), _T_174) @[Misc.scala 76:36]
    node _T_179 = mux(_T_176, UInt<2>("h01"), _T_175) @[Misc.scala 76:63]
    node _T_180 = eq(_T_76, _T_64) @[Misc.scala 94:20]
    node _T_181 = mux(_T_180, UInt<1>("h00"), _T_177) @[Misc.scala 76:9]
    node _T_182 = mux(_T_180, UInt<3>("h03"), _T_178) @[Misc.scala 76:36]
    node _T_183 = mux(_T_180, UInt<2>("h02"), _T_179) @[Misc.scala 76:63]
    node _T_184 = eq(_T_70, _T_64) @[Misc.scala 94:20]
    node _T_185 = mux(_T_184, UInt<1>("h01"), _T_181) @[Misc.scala 76:9]
    node shrink_param = mux(_T_184, UInt<3>("h03"), _T_182) @[Misc.scala 76:36]
    node _T_186 = mux(_T_184, UInt<2>("h02"), _T_183) @[Misc.scala 76:63]
    wire coh_on_clear : {state : UInt<2>} @[Metadata.scala 160:20]
    coh_on_clear is invalid @[Metadata.scala 160:20]
    coh_on_clear.state <= _T_186 @[Metadata.scala 161:16]
    node _T_189 = eq(req.cmd, UInt<1>("h01")) @[Consts.scala 94:32]
    node _T_191 = eq(req.cmd, UInt<5>("h011")) @[Consts.scala 94:49]
    node _T_192 = or(_T_189, _T_191) @[Consts.scala 94:42]
    node _T_194 = eq(req.cmd, UInt<3>("h07")) @[Consts.scala 94:66]
    node _T_195 = or(_T_192, _T_194) @[Consts.scala 94:59]
    node _T_200 = eq(req.cmd, UInt<3>("h04")) @[package.scala 14:47]
    node _T_201 = eq(req.cmd, UInt<4>("h09")) @[package.scala 14:47]
    node _T_202 = eq(req.cmd, UInt<4>("h0a")) @[package.scala 14:47]
    node _T_203 = eq(req.cmd, UInt<4>("h0b")) @[package.scala 14:47]
    node _T_204 = or(_T_200, _T_201) @[package.scala 14:62]
    node _T_205 = or(_T_204, _T_202) @[package.scala 14:62]
    node _T_206 = or(_T_205, _T_203) @[package.scala 14:62]
    node _T_212 = eq(req.cmd, UInt<4>("h08")) @[package.scala 14:47]
    node _T_213 = eq(req.cmd, UInt<4>("h0c")) @[package.scala 14:47]
    node _T_214 = eq(req.cmd, UInt<4>("h0d")) @[package.scala 14:47]
    node _T_215 = eq(req.cmd, UInt<4>("h0e")) @[package.scala 14:47]
    node _T_216 = eq(req.cmd, UInt<4>("h0f")) @[package.scala 14:47]
    node _T_217 = or(_T_212, _T_213) @[package.scala 14:62]
    node _T_218 = or(_T_217, _T_214) @[package.scala 14:62]
    node _T_219 = or(_T_218, _T_215) @[package.scala 14:62]
    node _T_220 = or(_T_219, _T_216) @[package.scala 14:62]
    node _T_221 = or(_T_206, _T_220) @[Consts.scala 91:44]
    node _T_222 = or(_T_195, _T_221) @[Consts.scala 94:76]
    node _T_224 = eq(req.cmd, UInt<1>("h01")) @[Consts.scala 94:32]
    node _T_226 = eq(req.cmd, UInt<5>("h011")) @[Consts.scala 94:49]
    node _T_227 = or(_T_224, _T_226) @[Consts.scala 94:42]
    node _T_229 = eq(req.cmd, UInt<3>("h07")) @[Consts.scala 94:66]
    node _T_230 = or(_T_227, _T_229) @[Consts.scala 94:59]
    node _T_235 = eq(req.cmd, UInt<3>("h04")) @[package.scala 14:47]
    node _T_236 = eq(req.cmd, UInt<4>("h09")) @[package.scala 14:47]
    node _T_237 = eq(req.cmd, UInt<4>("h0a")) @[package.scala 14:47]
    node _T_238 = eq(req.cmd, UInt<4>("h0b")) @[package.scala 14:47]
    node _T_239 = or(_T_235, _T_236) @[package.scala 14:62]
    node _T_240 = or(_T_239, _T_237) @[package.scala 14:62]
    node _T_241 = or(_T_240, _T_238) @[package.scala 14:62]
    node _T_247 = eq(req.cmd, UInt<4>("h08")) @[package.scala 14:47]
    node _T_248 = eq(req.cmd, UInt<4>("h0c")) @[package.scala 14:47]
    node _T_249 = eq(req.cmd, UInt<4>("h0d")) @[package.scala 14:47]
    node _T_250 = eq(req.cmd, UInt<4>("h0e")) @[package.scala 14:47]
    node _T_251 = eq(req.cmd, UInt<4>("h0f")) @[package.scala 14:47]
    node _T_252 = or(_T_247, _T_248) @[package.scala 14:62]
    node _T_253 = or(_T_252, _T_249) @[package.scala 14:62]
    node _T_254 = or(_T_253, _T_250) @[package.scala 14:62]
    node _T_255 = or(_T_254, _T_251) @[package.scala 14:62]
    node _T_256 = or(_T_241, _T_255) @[Consts.scala 91:44]
    node _T_257 = or(_T_230, _T_256) @[Consts.scala 94:76]
    node _T_259 = eq(req.cmd, UInt<2>("h03")) @[Consts.scala 95:54]
    node _T_260 = or(_T_257, _T_259) @[Consts.scala 95:47]
    node _T_262 = eq(req.cmd, UInt<3>("h06")) @[Consts.scala 95:71]
    node _T_263 = or(_T_260, _T_262) @[Consts.scala 95:64]
    node _T_264 = cat(_T_222, _T_263) @[Cat.scala 30:58]
    node _T_265 = cat(_T_264, new_coh.state) @[Cat.scala 30:58]
    node _T_270 = cat(UInt<1>("h00"), UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_272 = cat(_T_270, UInt<2>("h03")) @[Cat.scala 30:58]
    node _T_277 = cat(UInt<1>("h00"), UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_279 = cat(_T_277, UInt<2>("h02")) @[Cat.scala 30:58]
    node _T_284 = cat(UInt<1>("h00"), UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_286 = cat(_T_284, UInt<2>("h01")) @[Cat.scala 30:58]
    node _T_291 = cat(UInt<1>("h00"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_293 = cat(_T_291, UInt<2>("h03")) @[Cat.scala 30:58]
    node _T_298 = cat(UInt<1>("h00"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_300 = cat(_T_298, UInt<2>("h02")) @[Cat.scala 30:58]
    node _T_305 = cat(UInt<1>("h01"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_307 = cat(_T_305, UInt<2>("h03")) @[Cat.scala 30:58]
    node _T_312 = cat(UInt<1>("h01"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_314 = cat(_T_312, UInt<2>("h02")) @[Cat.scala 30:58]
    node _T_319 = cat(UInt<1>("h00"), UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_321 = cat(_T_319, UInt<2>("h00")) @[Cat.scala 30:58]
    node _T_326 = cat(UInt<1>("h00"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_328 = cat(_T_326, UInt<2>("h01")) @[Cat.scala 30:58]
    node _T_333 = cat(UInt<1>("h00"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_335 = cat(_T_333, UInt<2>("h00")) @[Cat.scala 30:58]
    node _T_340 = cat(UInt<1>("h01"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_342 = cat(_T_340, UInt<2>("h01")) @[Cat.scala 30:58]
    node _T_347 = cat(UInt<1>("h01"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_349 = cat(_T_347, UInt<2>("h00")) @[Cat.scala 30:58]
    node _T_352 = eq(_T_349, _T_265) @[Misc.scala 87:20]
    node _T_353 = mux(_T_352, UInt<1>("h00"), UInt<1>("h00")) @[Misc.scala 73:9]
    node _T_354 = mux(_T_352, UInt<2>("h01"), UInt<1>("h00")) @[Misc.scala 73:36]
    node _T_355 = eq(_T_342, _T_265) @[Misc.scala 87:20]
    node _T_356 = mux(_T_355, UInt<1>("h00"), _T_353) @[Misc.scala 73:9]
    node _T_357 = mux(_T_355, UInt<2>("h02"), _T_354) @[Misc.scala 73:36]
    node _T_358 = eq(_T_335, _T_265) @[Misc.scala 87:20]
    node _T_359 = mux(_T_358, UInt<1>("h00"), _T_356) @[Misc.scala 73:9]
    node _T_360 = mux(_T_358, UInt<2>("h01"), _T_357) @[Misc.scala 73:36]
    node _T_361 = eq(_T_328, _T_265) @[Misc.scala 87:20]
    node _T_362 = mux(_T_361, UInt<1>("h00"), _T_359) @[Misc.scala 73:9]
    node _T_363 = mux(_T_361, UInt<2>("h02"), _T_360) @[Misc.scala 73:36]
    node _T_364 = eq(_T_321, _T_265) @[Misc.scala 87:20]
    node _T_365 = mux(_T_364, UInt<1>("h00"), _T_362) @[Misc.scala 73:9]
    node _T_366 = mux(_T_364, UInt<2>("h00"), _T_363) @[Misc.scala 73:36]
    node _T_367 = eq(_T_314, _T_265) @[Misc.scala 87:20]
    node _T_368 = mux(_T_367, UInt<1>("h01"), _T_365) @[Misc.scala 73:9]
    node _T_369 = mux(_T_367, UInt<2>("h03"), _T_366) @[Misc.scala 73:36]
    node _T_370 = eq(_T_307, _T_265) @[Misc.scala 87:20]
    node _T_371 = mux(_T_370, UInt<1>("h01"), _T_368) @[Misc.scala 73:9]
    node _T_372 = mux(_T_370, UInt<2>("h03"), _T_369) @[Misc.scala 73:36]
    node _T_373 = eq(_T_300, _T_265) @[Misc.scala 87:20]
    node _T_374 = mux(_T_373, UInt<1>("h01"), _T_371) @[Misc.scala 73:9]
    node _T_375 = mux(_T_373, UInt<2>("h02"), _T_372) @[Misc.scala 73:36]
    node _T_376 = eq(_T_293, _T_265) @[Misc.scala 87:20]
    node _T_377 = mux(_T_376, UInt<1>("h01"), _T_374) @[Misc.scala 73:9]
    node _T_378 = mux(_T_376, UInt<2>("h03"), _T_375) @[Misc.scala 73:36]
    node _T_379 = eq(_T_286, _T_265) @[Misc.scala 87:20]
    node _T_380 = mux(_T_379, UInt<1>("h01"), _T_377) @[Misc.scala 73:9]
    node _T_381 = mux(_T_379, UInt<2>("h01"), _T_378) @[Misc.scala 73:36]
    node _T_382 = eq(_T_279, _T_265) @[Misc.scala 87:20]
    node _T_383 = mux(_T_382, UInt<1>("h01"), _T_380) @[Misc.scala 73:9]
    node _T_384 = mux(_T_382, UInt<2>("h02"), _T_381) @[Misc.scala 73:36]
    node _T_385 = eq(_T_272, _T_265) @[Misc.scala 87:20]
    node _T_386 = mux(_T_385, UInt<1>("h01"), _T_383) @[Misc.scala 73:9]
    node grow_param = mux(_T_385, UInt<2>("h03"), _T_384) @[Misc.scala 73:36]
    wire _T_388 : {state : UInt<2>} @[Metadata.scala 160:20]
    _T_388 is invalid @[Metadata.scala 160:20]
    _T_388.state <= grow_param @[Metadata.scala 161:16]
    node _T_390 = eq(req.cmd, UInt<1>("h01")) @[Consts.scala 94:32]
    node _T_392 = eq(req.cmd, UInt<5>("h011")) @[Consts.scala 94:49]
    node _T_393 = or(_T_390, _T_392) @[Consts.scala 94:42]
    node _T_395 = eq(req.cmd, UInt<3>("h07")) @[Consts.scala 94:66]
    node _T_396 = or(_T_393, _T_395) @[Consts.scala 94:59]
    node _T_401 = eq(req.cmd, UInt<3>("h04")) @[package.scala 14:47]
    node _T_402 = eq(req.cmd, UInt<4>("h09")) @[package.scala 14:47]
    node _T_403 = eq(req.cmd, UInt<4>("h0a")) @[package.scala 14:47]
    node _T_404 = eq(req.cmd, UInt<4>("h0b")) @[package.scala 14:47]
    node _T_405 = or(_T_401, _T_402) @[package.scala 14:62]
    node _T_406 = or(_T_405, _T_403) @[package.scala 14:62]
    node _T_407 = or(_T_406, _T_404) @[package.scala 14:62]
    node _T_413 = eq(req.cmd, UInt<4>("h08")) @[package.scala 14:47]
    node _T_414 = eq(req.cmd, UInt<4>("h0c")) @[package.scala 14:47]
    node _T_415 = eq(req.cmd, UInt<4>("h0d")) @[package.scala 14:47]
    node _T_416 = eq(req.cmd, UInt<4>("h0e")) @[package.scala 14:47]
    node _T_417 = eq(req.cmd, UInt<4>("h0f")) @[package.scala 14:47]
    node _T_418 = or(_T_413, _T_414) @[package.scala 14:62]
    node _T_419 = or(_T_418, _T_415) @[package.scala 14:62]
    node _T_420 = or(_T_419, _T_416) @[package.scala 14:62]
    node _T_421 = or(_T_420, _T_417) @[package.scala 14:62]
    node _T_422 = or(_T_407, _T_421) @[Consts.scala 91:44]
    node _T_423 = or(_T_396, _T_422) @[Consts.scala 94:76]
    node _T_425 = eq(req.cmd, UInt<1>("h01")) @[Consts.scala 94:32]
    node _T_427 = eq(req.cmd, UInt<5>("h011")) @[Consts.scala 94:49]
    node _T_428 = or(_T_425, _T_427) @[Consts.scala 94:42]
    node _T_430 = eq(req.cmd, UInt<3>("h07")) @[Consts.scala 94:66]
    node _T_431 = or(_T_428, _T_430) @[Consts.scala 94:59]
    node _T_436 = eq(req.cmd, UInt<3>("h04")) @[package.scala 14:47]
    node _T_437 = eq(req.cmd, UInt<4>("h09")) @[package.scala 14:47]
    node _T_438 = eq(req.cmd, UInt<4>("h0a")) @[package.scala 14:47]
    node _T_439 = eq(req.cmd, UInt<4>("h0b")) @[package.scala 14:47]
    node _T_440 = or(_T_436, _T_437) @[package.scala 14:62]
    node _T_441 = or(_T_440, _T_438) @[package.scala 14:62]
    node _T_442 = or(_T_441, _T_439) @[package.scala 14:62]
    node _T_448 = eq(req.cmd, UInt<4>("h08")) @[package.scala 14:47]
    node _T_449 = eq(req.cmd, UInt<4>("h0c")) @[package.scala 14:47]
    node _T_450 = eq(req.cmd, UInt<4>("h0d")) @[package.scala 14:47]
    node _T_451 = eq(req.cmd, UInt<4>("h0e")) @[package.scala 14:47]
    node _T_452 = eq(req.cmd, UInt<4>("h0f")) @[package.scala 14:47]
    node _T_453 = or(_T_448, _T_449) @[package.scala 14:62]
    node _T_454 = or(_T_453, _T_450) @[package.scala 14:62]
    node _T_455 = or(_T_454, _T_451) @[package.scala 14:62]
    node _T_456 = or(_T_455, _T_452) @[package.scala 14:62]
    node _T_457 = or(_T_442, _T_456) @[Consts.scala 91:44]
    node _T_458 = or(_T_431, _T_457) @[Consts.scala 94:76]
    node _T_460 = eq(req.cmd, UInt<2>("h03")) @[Consts.scala 95:54]
    node _T_461 = or(_T_458, _T_460) @[Consts.scala 95:47]
    node _T_463 = eq(req.cmd, UInt<3>("h06")) @[Consts.scala 95:71]
    node _T_464 = or(_T_461, _T_463) @[Consts.scala 95:64]
    node _T_465 = cat(_T_423, _T_464) @[Cat.scala 30:58]
    node _T_466 = cat(_T_465, io.mem_grant.bits.param) @[Cat.scala 30:58]
    node _T_470 = cat(UInt<1>("h00"), UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_472 = cat(_T_470, UInt<2>("h01")) @[Cat.scala 30:58]
    node _T_476 = cat(UInt<1>("h00"), UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_478 = cat(_T_476, UInt<2>("h00")) @[Cat.scala 30:58]
    node _T_482 = cat(UInt<1>("h00"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_484 = cat(_T_482, UInt<2>("h00")) @[Cat.scala 30:58]
    node _T_488 = cat(UInt<1>("h01"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_490 = cat(_T_488, UInt<2>("h00")) @[Cat.scala 30:58]
    node _T_492 = eq(_T_490, _T_466) @[Mux.scala 46:19]
    node _T_493 = mux(_T_492, UInt<2>("h03"), UInt<2>("h00")) @[Mux.scala 46:16]
    node _T_494 = eq(_T_484, _T_466) @[Mux.scala 46:19]
    node _T_495 = mux(_T_494, UInt<2>("h02"), _T_493) @[Mux.scala 46:16]
    node _T_496 = eq(_T_478, _T_466) @[Mux.scala 46:19]
    node _T_497 = mux(_T_496, UInt<2>("h02"), _T_495) @[Mux.scala 46:16]
    node _T_498 = eq(_T_472, _T_466) @[Mux.scala 46:19]
    node _T_499 = mux(_T_498, UInt<2>("h01"), _T_497) @[Mux.scala 46:16]
    wire coh_on_grant : {state : UInt<2>} @[Metadata.scala 160:20]
    coh_on_grant is invalid @[Metadata.scala 160:20]
    coh_on_grant.state <= _T_499 @[Metadata.scala 161:16]
    node _T_502 = eq(req.cmd, UInt<1>("h01")) @[Consts.scala 94:32]
    node _T_504 = eq(req.cmd, UInt<5>("h011")) @[Consts.scala 94:49]
    node _T_505 = or(_T_502, _T_504) @[Consts.scala 94:42]
    node _T_507 = eq(req.cmd, UInt<3>("h07")) @[Consts.scala 94:66]
    node _T_508 = or(_T_505, _T_507) @[Consts.scala 94:59]
    node _T_513 = eq(req.cmd, UInt<3>("h04")) @[package.scala 14:47]
    node _T_514 = eq(req.cmd, UInt<4>("h09")) @[package.scala 14:47]
    node _T_515 = eq(req.cmd, UInt<4>("h0a")) @[package.scala 14:47]
    node _T_516 = eq(req.cmd, UInt<4>("h0b")) @[package.scala 14:47]
    node _T_517 = or(_T_513, _T_514) @[package.scala 14:62]
    node _T_518 = or(_T_517, _T_515) @[package.scala 14:62]
    node _T_519 = or(_T_518, _T_516) @[package.scala 14:62]
    node _T_525 = eq(req.cmd, UInt<4>("h08")) @[package.scala 14:47]
    node _T_526 = eq(req.cmd, UInt<4>("h0c")) @[package.scala 14:47]
    node _T_527 = eq(req.cmd, UInt<4>("h0d")) @[package.scala 14:47]
    node _T_528 = eq(req.cmd, UInt<4>("h0e")) @[package.scala 14:47]
    node _T_529 = eq(req.cmd, UInt<4>("h0f")) @[package.scala 14:47]
    node _T_530 = or(_T_525, _T_526) @[package.scala 14:62]
    node _T_531 = or(_T_530, _T_527) @[package.scala 14:62]
    node _T_532 = or(_T_531, _T_528) @[package.scala 14:62]
    node _T_533 = or(_T_532, _T_529) @[package.scala 14:62]
    node _T_534 = or(_T_519, _T_533) @[Consts.scala 91:44]
    node _T_535 = or(_T_508, _T_534) @[Consts.scala 94:76]
    node _T_537 = eq(req.cmd, UInt<1>("h01")) @[Consts.scala 94:32]
    node _T_539 = eq(req.cmd, UInt<5>("h011")) @[Consts.scala 94:49]
    node _T_540 = or(_T_537, _T_539) @[Consts.scala 94:42]
    node _T_542 = eq(req.cmd, UInt<3>("h07")) @[Consts.scala 94:66]
    node _T_543 = or(_T_540, _T_542) @[Consts.scala 94:59]
    node _T_548 = eq(req.cmd, UInt<3>("h04")) @[package.scala 14:47]
    node _T_549 = eq(req.cmd, UInt<4>("h09")) @[package.scala 14:47]
    node _T_550 = eq(req.cmd, UInt<4>("h0a")) @[package.scala 14:47]
    node _T_551 = eq(req.cmd, UInt<4>("h0b")) @[package.scala 14:47]
    node _T_552 = or(_T_548, _T_549) @[package.scala 14:62]
    node _T_553 = or(_T_552, _T_550) @[package.scala 14:62]
    node _T_554 = or(_T_553, _T_551) @[package.scala 14:62]
    node _T_560 = eq(req.cmd, UInt<4>("h08")) @[package.scala 14:47]
    node _T_561 = eq(req.cmd, UInt<4>("h0c")) @[package.scala 14:47]
    node _T_562 = eq(req.cmd, UInt<4>("h0d")) @[package.scala 14:47]
    node _T_563 = eq(req.cmd, UInt<4>("h0e")) @[package.scala 14:47]
    node _T_564 = eq(req.cmd, UInt<4>("h0f")) @[package.scala 14:47]
    node _T_565 = or(_T_560, _T_561) @[package.scala 14:62]
    node _T_566 = or(_T_565, _T_562) @[package.scala 14:62]
    node _T_567 = or(_T_566, _T_563) @[package.scala 14:62]
    node _T_568 = or(_T_567, _T_564) @[package.scala 14:62]
    node _T_569 = or(_T_554, _T_568) @[Consts.scala 91:44]
    node _T_570 = or(_T_543, _T_569) @[Consts.scala 94:76]
    node _T_572 = eq(req.cmd, UInt<2>("h03")) @[Consts.scala 95:54]
    node _T_573 = or(_T_570, _T_572) @[Consts.scala 95:47]
    node _T_575 = eq(req.cmd, UInt<3>("h06")) @[Consts.scala 95:71]
    node _T_576 = or(_T_573, _T_575) @[Consts.scala 95:64]
    node _T_577 = cat(_T_535, _T_576) @[Cat.scala 30:58]
    node _T_578 = cat(_T_577, new_coh.state) @[Cat.scala 30:58]
    node _T_583 = cat(UInt<1>("h00"), UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_585 = cat(_T_583, UInt<2>("h03")) @[Cat.scala 30:58]
    node _T_590 = cat(UInt<1>("h00"), UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_592 = cat(_T_590, UInt<2>("h02")) @[Cat.scala 30:58]
    node _T_597 = cat(UInt<1>("h00"), UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_599 = cat(_T_597, UInt<2>("h01")) @[Cat.scala 30:58]
    node _T_604 = cat(UInt<1>("h00"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_606 = cat(_T_604, UInt<2>("h03")) @[Cat.scala 30:58]
    node _T_611 = cat(UInt<1>("h00"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_613 = cat(_T_611, UInt<2>("h02")) @[Cat.scala 30:58]
    node _T_618 = cat(UInt<1>("h01"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_620 = cat(_T_618, UInt<2>("h03")) @[Cat.scala 30:58]
    node _T_625 = cat(UInt<1>("h01"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_627 = cat(_T_625, UInt<2>("h02")) @[Cat.scala 30:58]
    node _T_632 = cat(UInt<1>("h00"), UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_634 = cat(_T_632, UInt<2>("h00")) @[Cat.scala 30:58]
    node _T_639 = cat(UInt<1>("h00"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_641 = cat(_T_639, UInt<2>("h01")) @[Cat.scala 30:58]
    node _T_646 = cat(UInt<1>("h00"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_648 = cat(_T_646, UInt<2>("h00")) @[Cat.scala 30:58]
    node _T_653 = cat(UInt<1>("h01"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_655 = cat(_T_653, UInt<2>("h01")) @[Cat.scala 30:58]
    node _T_660 = cat(UInt<1>("h01"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_662 = cat(_T_660, UInt<2>("h00")) @[Cat.scala 30:58]
    node _T_665 = eq(_T_662, _T_578) @[Misc.scala 87:20]
    node _T_666 = mux(_T_665, UInt<1>("h00"), UInt<1>("h00")) @[Misc.scala 73:9]
    node _T_667 = mux(_T_665, UInt<2>("h01"), UInt<1>("h00")) @[Misc.scala 73:36]
    node _T_668 = eq(_T_655, _T_578) @[Misc.scala 87:20]
    node _T_669 = mux(_T_668, UInt<1>("h00"), _T_666) @[Misc.scala 73:9]
    node _T_670 = mux(_T_668, UInt<2>("h02"), _T_667) @[Misc.scala 73:36]
    node _T_671 = eq(_T_648, _T_578) @[Misc.scala 87:20]
    node _T_672 = mux(_T_671, UInt<1>("h00"), _T_669) @[Misc.scala 73:9]
    node _T_673 = mux(_T_671, UInt<2>("h01"), _T_670) @[Misc.scala 73:36]
    node _T_674 = eq(_T_641, _T_578) @[Misc.scala 87:20]
    node _T_675 = mux(_T_674, UInt<1>("h00"), _T_672) @[Misc.scala 73:9]
    node _T_676 = mux(_T_674, UInt<2>("h02"), _T_673) @[Misc.scala 73:36]
    node _T_677 = eq(_T_634, _T_578) @[Misc.scala 87:20]
    node _T_678 = mux(_T_677, UInt<1>("h00"), _T_675) @[Misc.scala 73:9]
    node _T_679 = mux(_T_677, UInt<2>("h00"), _T_676) @[Misc.scala 73:36]
    node _T_680 = eq(_T_627, _T_578) @[Misc.scala 87:20]
    node _T_681 = mux(_T_680, UInt<1>("h01"), _T_678) @[Misc.scala 73:9]
    node _T_682 = mux(_T_680, UInt<2>("h03"), _T_679) @[Misc.scala 73:36]
    node _T_683 = eq(_T_620, _T_578) @[Misc.scala 87:20]
    node _T_684 = mux(_T_683, UInt<1>("h01"), _T_681) @[Misc.scala 73:9]
    node _T_685 = mux(_T_683, UInt<2>("h03"), _T_682) @[Misc.scala 73:36]
    node _T_686 = eq(_T_613, _T_578) @[Misc.scala 87:20]
    node _T_687 = mux(_T_686, UInt<1>("h01"), _T_684) @[Misc.scala 73:9]
    node _T_688 = mux(_T_686, UInt<2>("h02"), _T_685) @[Misc.scala 73:36]
    node _T_689 = eq(_T_606, _T_578) @[Misc.scala 87:20]
    node _T_690 = mux(_T_689, UInt<1>("h01"), _T_687) @[Misc.scala 73:9]
    node _T_691 = mux(_T_689, UInt<2>("h03"), _T_688) @[Misc.scala 73:36]
    node _T_692 = eq(_T_599, _T_578) @[Misc.scala 87:20]
    node _T_693 = mux(_T_692, UInt<1>("h01"), _T_690) @[Misc.scala 73:9]
    node _T_694 = mux(_T_692, UInt<2>("h01"), _T_691) @[Misc.scala 73:36]
    node _T_695 = eq(_T_592, _T_578) @[Misc.scala 87:20]
    node _T_696 = mux(_T_695, UInt<1>("h01"), _T_693) @[Misc.scala 73:9]
    node _T_697 = mux(_T_695, UInt<2>("h02"), _T_694) @[Misc.scala 73:36]
    node _T_698 = eq(_T_585, _T_578) @[Misc.scala 87:20]
    node _T_699 = mux(_T_698, UInt<1>("h01"), _T_696) @[Misc.scala 73:9]
    node _T_700 = mux(_T_698, UInt<2>("h03"), _T_697) @[Misc.scala 73:36]
    node _T_702 = eq(io.req_bits.cmd, UInt<1>("h01")) @[Consts.scala 94:32]
    node _T_704 = eq(io.req_bits.cmd, UInt<5>("h011")) @[Consts.scala 94:49]
    node _T_705 = or(_T_702, _T_704) @[Consts.scala 94:42]
    node _T_707 = eq(io.req_bits.cmd, UInt<3>("h07")) @[Consts.scala 94:66]
    node _T_708 = or(_T_705, _T_707) @[Consts.scala 94:59]
    node _T_713 = eq(io.req_bits.cmd, UInt<3>("h04")) @[package.scala 14:47]
    node _T_714 = eq(io.req_bits.cmd, UInt<4>("h09")) @[package.scala 14:47]
    node _T_715 = eq(io.req_bits.cmd, UInt<4>("h0a")) @[package.scala 14:47]
    node _T_716 = eq(io.req_bits.cmd, UInt<4>("h0b")) @[package.scala 14:47]
    node _T_717 = or(_T_713, _T_714) @[package.scala 14:62]
    node _T_718 = or(_T_717, _T_715) @[package.scala 14:62]
    node _T_719 = or(_T_718, _T_716) @[package.scala 14:62]
    node _T_725 = eq(io.req_bits.cmd, UInt<4>("h08")) @[package.scala 14:47]
    node _T_726 = eq(io.req_bits.cmd, UInt<4>("h0c")) @[package.scala 14:47]
    node _T_727 = eq(io.req_bits.cmd, UInt<4>("h0d")) @[package.scala 14:47]
    node _T_728 = eq(io.req_bits.cmd, UInt<4>("h0e")) @[package.scala 14:47]
    node _T_729 = eq(io.req_bits.cmd, UInt<4>("h0f")) @[package.scala 14:47]
    node _T_730 = or(_T_725, _T_726) @[package.scala 14:62]
    node _T_731 = or(_T_730, _T_727) @[package.scala 14:62]
    node _T_732 = or(_T_731, _T_728) @[package.scala 14:62]
    node _T_733 = or(_T_732, _T_729) @[package.scala 14:62]
    node _T_734 = or(_T_719, _T_733) @[Consts.scala 91:44]
    node _T_735 = or(_T_708, _T_734) @[Consts.scala 94:76]
    node _T_737 = eq(io.req_bits.cmd, UInt<1>("h01")) @[Consts.scala 94:32]
    node _T_739 = eq(io.req_bits.cmd, UInt<5>("h011")) @[Consts.scala 94:49]
    node _T_740 = or(_T_737, _T_739) @[Consts.scala 94:42]
    node _T_742 = eq(io.req_bits.cmd, UInt<3>("h07")) @[Consts.scala 94:66]
    node _T_743 = or(_T_740, _T_742) @[Consts.scala 94:59]
    node _T_748 = eq(io.req_bits.cmd, UInt<3>("h04")) @[package.scala 14:47]
    node _T_749 = eq(io.req_bits.cmd, UInt<4>("h09")) @[package.scala 14:47]
    node _T_750 = eq(io.req_bits.cmd, UInt<4>("h0a")) @[package.scala 14:47]
    node _T_751 = eq(io.req_bits.cmd, UInt<4>("h0b")) @[package.scala 14:47]
    node _T_752 = or(_T_748, _T_749) @[package.scala 14:62]
    node _T_753 = or(_T_752, _T_750) @[package.scala 14:62]
    node _T_754 = or(_T_753, _T_751) @[package.scala 14:62]
    node _T_760 = eq(io.req_bits.cmd, UInt<4>("h08")) @[package.scala 14:47]
    node _T_761 = eq(io.req_bits.cmd, UInt<4>("h0c")) @[package.scala 14:47]
    node _T_762 = eq(io.req_bits.cmd, UInt<4>("h0d")) @[package.scala 14:47]
    node _T_763 = eq(io.req_bits.cmd, UInt<4>("h0e")) @[package.scala 14:47]
    node _T_764 = eq(io.req_bits.cmd, UInt<4>("h0f")) @[package.scala 14:47]
    node _T_765 = or(_T_760, _T_761) @[package.scala 14:62]
    node _T_766 = or(_T_765, _T_762) @[package.scala 14:62]
    node _T_767 = or(_T_766, _T_763) @[package.scala 14:62]
    node _T_768 = or(_T_767, _T_764) @[package.scala 14:62]
    node _T_769 = or(_T_754, _T_768) @[Consts.scala 91:44]
    node _T_770 = or(_T_743, _T_769) @[Consts.scala 94:76]
    node _T_772 = eq(io.req_bits.cmd, UInt<2>("h03")) @[Consts.scala 95:54]
    node _T_773 = or(_T_770, _T_772) @[Consts.scala 95:47]
    node _T_775 = eq(io.req_bits.cmd, UInt<3>("h06")) @[Consts.scala 95:71]
    node _T_776 = or(_T_773, _T_775) @[Consts.scala 95:64]
    node _T_777 = cat(_T_735, _T_776) @[Cat.scala 30:58]
    node _T_778 = cat(_T_777, new_coh.state) @[Cat.scala 30:58]
    node _T_783 = cat(UInt<1>("h00"), UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_785 = cat(_T_783, UInt<2>("h03")) @[Cat.scala 30:58]
    node _T_790 = cat(UInt<1>("h00"), UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_792 = cat(_T_790, UInt<2>("h02")) @[Cat.scala 30:58]
    node _T_797 = cat(UInt<1>("h00"), UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_799 = cat(_T_797, UInt<2>("h01")) @[Cat.scala 30:58]
    node _T_804 = cat(UInt<1>("h00"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_806 = cat(_T_804, UInt<2>("h03")) @[Cat.scala 30:58]
    node _T_811 = cat(UInt<1>("h00"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_813 = cat(_T_811, UInt<2>("h02")) @[Cat.scala 30:58]
    node _T_818 = cat(UInt<1>("h01"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_820 = cat(_T_818, UInt<2>("h03")) @[Cat.scala 30:58]
    node _T_825 = cat(UInt<1>("h01"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_827 = cat(_T_825, UInt<2>("h02")) @[Cat.scala 30:58]
    node _T_832 = cat(UInt<1>("h00"), UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_834 = cat(_T_832, UInt<2>("h00")) @[Cat.scala 30:58]
    node _T_839 = cat(UInt<1>("h00"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_841 = cat(_T_839, UInt<2>("h01")) @[Cat.scala 30:58]
    node _T_846 = cat(UInt<1>("h00"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_848 = cat(_T_846, UInt<2>("h00")) @[Cat.scala 30:58]
    node _T_853 = cat(UInt<1>("h01"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_855 = cat(_T_853, UInt<2>("h01")) @[Cat.scala 30:58]
    node _T_860 = cat(UInt<1>("h01"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_862 = cat(_T_860, UInt<2>("h00")) @[Cat.scala 30:58]
    node _T_865 = eq(_T_862, _T_778) @[Misc.scala 87:20]
    node _T_866 = mux(_T_865, UInt<1>("h00"), UInt<1>("h00")) @[Misc.scala 73:9]
    node _T_867 = mux(_T_865, UInt<2>("h01"), UInt<1>("h00")) @[Misc.scala 73:36]
    node _T_868 = eq(_T_855, _T_778) @[Misc.scala 87:20]
    node _T_869 = mux(_T_868, UInt<1>("h00"), _T_866) @[Misc.scala 73:9]
    node _T_870 = mux(_T_868, UInt<2>("h02"), _T_867) @[Misc.scala 73:36]
    node _T_871 = eq(_T_848, _T_778) @[Misc.scala 87:20]
    node _T_872 = mux(_T_871, UInt<1>("h00"), _T_869) @[Misc.scala 73:9]
    node _T_873 = mux(_T_871, UInt<2>("h01"), _T_870) @[Misc.scala 73:36]
    node _T_874 = eq(_T_841, _T_778) @[Misc.scala 87:20]
    node _T_875 = mux(_T_874, UInt<1>("h00"), _T_872) @[Misc.scala 73:9]
    node _T_876 = mux(_T_874, UInt<2>("h02"), _T_873) @[Misc.scala 73:36]
    node _T_877 = eq(_T_834, _T_778) @[Misc.scala 87:20]
    node _T_878 = mux(_T_877, UInt<1>("h00"), _T_875) @[Misc.scala 73:9]
    node _T_879 = mux(_T_877, UInt<2>("h00"), _T_876) @[Misc.scala 73:36]
    node _T_880 = eq(_T_827, _T_778) @[Misc.scala 87:20]
    node _T_881 = mux(_T_880, UInt<1>("h01"), _T_878) @[Misc.scala 73:9]
    node _T_882 = mux(_T_880, UInt<2>("h03"), _T_879) @[Misc.scala 73:36]
    node _T_883 = eq(_T_820, _T_778) @[Misc.scala 87:20]
    node _T_884 = mux(_T_883, UInt<1>("h01"), _T_881) @[Misc.scala 73:9]
    node _T_885 = mux(_T_883, UInt<2>("h03"), _T_882) @[Misc.scala 73:36]
    node _T_886 = eq(_T_813, _T_778) @[Misc.scala 87:20]
    node _T_887 = mux(_T_886, UInt<1>("h01"), _T_884) @[Misc.scala 73:9]
    node _T_888 = mux(_T_886, UInt<2>("h02"), _T_885) @[Misc.scala 73:36]
    node _T_889 = eq(_T_806, _T_778) @[Misc.scala 87:20]
    node _T_890 = mux(_T_889, UInt<1>("h01"), _T_887) @[Misc.scala 73:9]
    node _T_891 = mux(_T_889, UInt<2>("h03"), _T_888) @[Misc.scala 73:36]
    node _T_892 = eq(_T_799, _T_778) @[Misc.scala 87:20]
    node _T_893 = mux(_T_892, UInt<1>("h01"), _T_890) @[Misc.scala 73:9]
    node _T_894 = mux(_T_892, UInt<2>("h01"), _T_891) @[Misc.scala 73:36]
    node _T_895 = eq(_T_792, _T_778) @[Misc.scala 87:20]
    node _T_896 = mux(_T_895, UInt<1>("h01"), _T_893) @[Misc.scala 73:9]
    node _T_897 = mux(_T_895, UInt<2>("h02"), _T_894) @[Misc.scala 73:36]
    node _T_898 = eq(_T_785, _T_778) @[Misc.scala 87:20]
    node _T_899 = mux(_T_898, UInt<1>("h01"), _T_896) @[Misc.scala 73:9]
    node _T_900 = mux(_T_898, UInt<2>("h03"), _T_897) @[Misc.scala 73:36]
    node _T_902 = eq(io.req_bits.cmd, UInt<1>("h01")) @[Consts.scala 94:32]
    node _T_904 = eq(io.req_bits.cmd, UInt<5>("h011")) @[Consts.scala 94:49]
    node _T_905 = or(_T_902, _T_904) @[Consts.scala 94:42]
    node _T_907 = eq(io.req_bits.cmd, UInt<3>("h07")) @[Consts.scala 94:66]
    node _T_908 = or(_T_905, _T_907) @[Consts.scala 94:59]
    node _T_913 = eq(io.req_bits.cmd, UInt<3>("h04")) @[package.scala 14:47]
    node _T_914 = eq(io.req_bits.cmd, UInt<4>("h09")) @[package.scala 14:47]
    node _T_915 = eq(io.req_bits.cmd, UInt<4>("h0a")) @[package.scala 14:47]
    node _T_916 = eq(io.req_bits.cmd, UInt<4>("h0b")) @[package.scala 14:47]
    node _T_917 = or(_T_913, _T_914) @[package.scala 14:62]
    node _T_918 = or(_T_917, _T_915) @[package.scala 14:62]
    node _T_919 = or(_T_918, _T_916) @[package.scala 14:62]
    node _T_925 = eq(io.req_bits.cmd, UInt<4>("h08")) @[package.scala 14:47]
    node _T_926 = eq(io.req_bits.cmd, UInt<4>("h0c")) @[package.scala 14:47]
    node _T_927 = eq(io.req_bits.cmd, UInt<4>("h0d")) @[package.scala 14:47]
    node _T_928 = eq(io.req_bits.cmd, UInt<4>("h0e")) @[package.scala 14:47]
    node _T_929 = eq(io.req_bits.cmd, UInt<4>("h0f")) @[package.scala 14:47]
    node _T_930 = or(_T_925, _T_926) @[package.scala 14:62]
    node _T_931 = or(_T_930, _T_927) @[package.scala 14:62]
    node _T_932 = or(_T_931, _T_928) @[package.scala 14:62]
    node _T_933 = or(_T_932, _T_929) @[package.scala 14:62]
    node _T_934 = or(_T_919, _T_933) @[Consts.scala 91:44]
    node _T_935 = or(_T_908, _T_934) @[Consts.scala 94:76]
    node _T_937 = eq(io.req_bits.cmd, UInt<2>("h03")) @[Consts.scala 95:54]
    node _T_938 = or(_T_935, _T_937) @[Consts.scala 95:47]
    node _T_940 = eq(io.req_bits.cmd, UInt<3>("h06")) @[Consts.scala 95:71]
    node _T_941 = or(_T_938, _T_940) @[Consts.scala 95:64]
    node _T_943 = eq(req.cmd, UInt<1>("h01")) @[Consts.scala 94:32]
    node _T_945 = eq(req.cmd, UInt<5>("h011")) @[Consts.scala 94:49]
    node _T_946 = or(_T_943, _T_945) @[Consts.scala 94:42]
    node _T_948 = eq(req.cmd, UInt<3>("h07")) @[Consts.scala 94:66]
    node _T_949 = or(_T_946, _T_948) @[Consts.scala 94:59]
    node _T_954 = eq(req.cmd, UInt<3>("h04")) @[package.scala 14:47]
    node _T_955 = eq(req.cmd, UInt<4>("h09")) @[package.scala 14:47]
    node _T_956 = eq(req.cmd, UInt<4>("h0a")) @[package.scala 14:47]
    node _T_957 = eq(req.cmd, UInt<4>("h0b")) @[package.scala 14:47]
    node _T_958 = or(_T_954, _T_955) @[package.scala 14:62]
    node _T_959 = or(_T_958, _T_956) @[package.scala 14:62]
    node _T_960 = or(_T_959, _T_957) @[package.scala 14:62]
    node _T_966 = eq(req.cmd, UInt<4>("h08")) @[package.scala 14:47]
    node _T_967 = eq(req.cmd, UInt<4>("h0c")) @[package.scala 14:47]
    node _T_968 = eq(req.cmd, UInt<4>("h0d")) @[package.scala 14:47]
    node _T_969 = eq(req.cmd, UInt<4>("h0e")) @[package.scala 14:47]
    node _T_970 = eq(req.cmd, UInt<4>("h0f")) @[package.scala 14:47]
    node _T_971 = or(_T_966, _T_967) @[package.scala 14:62]
    node _T_972 = or(_T_971, _T_968) @[package.scala 14:62]
    node _T_973 = or(_T_972, _T_969) @[package.scala 14:62]
    node _T_974 = or(_T_973, _T_970) @[package.scala 14:62]
    node _T_975 = or(_T_960, _T_974) @[Consts.scala 91:44]
    node _T_976 = or(_T_949, _T_975) @[Consts.scala 94:76]
    node _T_978 = eq(req.cmd, UInt<2>("h03")) @[Consts.scala 95:54]
    node _T_979 = or(_T_976, _T_978) @[Consts.scala 95:47]
    node _T_981 = eq(req.cmd, UInt<3>("h06")) @[Consts.scala 95:71]
    node _T_982 = or(_T_979, _T_981) @[Consts.scala 95:64]
    node _T_984 = eq(_T_982, UInt<1>("h00")) @[Metadata.scala 104:57]
    node cmd_requires_second_acquire = and(_T_941, _T_984) @[Metadata.scala 104:54]
    node is_hit_again = and(_T_699, _T_899) @[Metadata.scala 105:27]
    node _T_986 = eq(io.req_bits.cmd, UInt<1>("h01")) @[Consts.scala 94:32]
    node _T_988 = eq(io.req_bits.cmd, UInt<5>("h011")) @[Consts.scala 94:49]
    node _T_989 = or(_T_986, _T_988) @[Consts.scala 94:42]
    node _T_991 = eq(io.req_bits.cmd, UInt<3>("h07")) @[Consts.scala 94:66]
    node _T_992 = or(_T_989, _T_991) @[Consts.scala 94:59]
    node _T_997 = eq(io.req_bits.cmd, UInt<3>("h04")) @[package.scala 14:47]
    node _T_998 = eq(io.req_bits.cmd, UInt<4>("h09")) @[package.scala 14:47]
    node _T_999 = eq(io.req_bits.cmd, UInt<4>("h0a")) @[package.scala 14:47]
    node _T_1000 = eq(io.req_bits.cmd, UInt<4>("h0b")) @[package.scala 14:47]
    node _T_1001 = or(_T_997, _T_998) @[package.scala 14:62]
    node _T_1002 = or(_T_1001, _T_999) @[package.scala 14:62]
    node _T_1003 = or(_T_1002, _T_1000) @[package.scala 14:62]
    node _T_1009 = eq(io.req_bits.cmd, UInt<4>("h08")) @[package.scala 14:47]
    node _T_1010 = eq(io.req_bits.cmd, UInt<4>("h0c")) @[package.scala 14:47]
    node _T_1011 = eq(io.req_bits.cmd, UInt<4>("h0d")) @[package.scala 14:47]
    node _T_1012 = eq(io.req_bits.cmd, UInt<4>("h0e")) @[package.scala 14:47]
    node _T_1013 = eq(io.req_bits.cmd, UInt<4>("h0f")) @[package.scala 14:47]
    node _T_1014 = or(_T_1009, _T_1010) @[package.scala 14:62]
    node _T_1015 = or(_T_1014, _T_1011) @[package.scala 14:62]
    node _T_1016 = or(_T_1015, _T_1012) @[package.scala 14:62]
    node _T_1017 = or(_T_1016, _T_1013) @[package.scala 14:62]
    node _T_1018 = or(_T_1003, _T_1017) @[Consts.scala 91:44]
    node _T_1019 = or(_T_992, _T_1018) @[Consts.scala 94:76]
    node _T_1021 = eq(io.req_bits.cmd, UInt<1>("h01")) @[Consts.scala 94:32]
    node _T_1023 = eq(io.req_bits.cmd, UInt<5>("h011")) @[Consts.scala 94:49]
    node _T_1024 = or(_T_1021, _T_1023) @[Consts.scala 94:42]
    node _T_1026 = eq(io.req_bits.cmd, UInt<3>("h07")) @[Consts.scala 94:66]
    node _T_1027 = or(_T_1024, _T_1026) @[Consts.scala 94:59]
    node _T_1032 = eq(io.req_bits.cmd, UInt<3>("h04")) @[package.scala 14:47]
    node _T_1033 = eq(io.req_bits.cmd, UInt<4>("h09")) @[package.scala 14:47]
    node _T_1034 = eq(io.req_bits.cmd, UInt<4>("h0a")) @[package.scala 14:47]
    node _T_1035 = eq(io.req_bits.cmd, UInt<4>("h0b")) @[package.scala 14:47]
    node _T_1036 = or(_T_1032, _T_1033) @[package.scala 14:62]
    node _T_1037 = or(_T_1036, _T_1034) @[package.scala 14:62]
    node _T_1038 = or(_T_1037, _T_1035) @[package.scala 14:62]
    node _T_1044 = eq(io.req_bits.cmd, UInt<4>("h08")) @[package.scala 14:47]
    node _T_1045 = eq(io.req_bits.cmd, UInt<4>("h0c")) @[package.scala 14:47]
    node _T_1046 = eq(io.req_bits.cmd, UInt<4>("h0d")) @[package.scala 14:47]
    node _T_1047 = eq(io.req_bits.cmd, UInt<4>("h0e")) @[package.scala 14:47]
    node _T_1048 = eq(io.req_bits.cmd, UInt<4>("h0f")) @[package.scala 14:47]
    node _T_1049 = or(_T_1044, _T_1045) @[package.scala 14:62]
    node _T_1050 = or(_T_1049, _T_1046) @[package.scala 14:62]
    node _T_1051 = or(_T_1050, _T_1047) @[package.scala 14:62]
    node _T_1052 = or(_T_1051, _T_1048) @[package.scala 14:62]
    node _T_1053 = or(_T_1038, _T_1052) @[Consts.scala 91:44]
    node _T_1054 = or(_T_1027, _T_1053) @[Consts.scala 94:76]
    node _T_1056 = eq(io.req_bits.cmd, UInt<2>("h03")) @[Consts.scala 95:54]
    node _T_1057 = or(_T_1054, _T_1056) @[Consts.scala 95:47]
    node _T_1059 = eq(io.req_bits.cmd, UInt<3>("h06")) @[Consts.scala 95:71]
    node _T_1060 = or(_T_1057, _T_1059) @[Consts.scala 95:64]
    node _T_1061 = cat(_T_1019, _T_1060) @[Cat.scala 30:58]
    node _T_1064 = cat(UInt<1>("h01"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_1065 = eq(_T_1061, _T_1064) @[Metadata.scala 106:42]
    node _T_1066 = mux(_T_1065, _T_900, _T_700) @[Metadata.scala 107:33]
    wire dirtier_coh : {state : UInt<2>} @[Metadata.scala 160:20]
    dirtier_coh is invalid @[Metadata.scala 160:20]
    dirtier_coh.state <= _T_1066 @[Metadata.scala 161:16]
    node dirtier_cmd = mux(_T_1065, io.req_bits.cmd, req.cmd) @[Metadata.scala 109:27]
    node _T_1069 = asUInt(asSInt(UInt<12>("h0fff"))) @[package.scala 82:70]
    node _T_1070 = dshl(_T_1069, io.mem_grant.bits.size) @[package.scala 82:77]
    node _T_1071 = bits(_T_1070, 11, 0) @[package.scala 82:82]
    node _T_1072 = not(_T_1071) @[package.scala 82:46]
    node _T_1073 = shr(_T_1072, 3) @[Edges.scala 211:59]
    node _T_1074 = bits(io.mem_grant.bits.opcode, 0, 0) @[Edges.scala 106:36]
    node _T_1076 = mux(_T_1074, _T_1073, UInt<1>("h00")) @[Edges.scala 212:14]
    reg _T_1079 : UInt<9>, clock with : (reset => (reset, UInt<9>("h00"))) @[Edges.scala 220:27]
    node _T_1081 = sub(_T_1079, UInt<1>("h01")) @[Edges.scala 221:28]
    node _T_1082 = asUInt(_T_1081) @[Edges.scala 221:28]
    node _T_1083 = tail(_T_1082, 1) @[Edges.scala 221:28]
    node _T_1085 = eq(_T_1079, UInt<1>("h00")) @[Edges.scala 222:25]
    node _T_1087 = eq(_T_1079, UInt<1>("h01")) @[Edges.scala 223:25]
    node _T_1089 = eq(_T_1076, UInt<1>("h00")) @[Edges.scala 223:47]
    node _T_1090 = or(_T_1087, _T_1089) @[Edges.scala 223:37]
    node refill_done = and(_T_1090, io.mem_grant.valid) @[Edges.scala 224:22]
    node _T_1091 = not(_T_1083) @[Edges.scala 225:27]
    node _T_1092 = and(_T_1076, _T_1091) @[Edges.scala 225:25]
    when io.mem_grant.valid : @[Edges.scala 226:17]
      node _T_1093 = mux(_T_1085, _T_1076, _T_1083) @[Edges.scala 227:21]
      _T_1079 <= _T_1093 @[Edges.scala 227:15]
      skip @[Edges.scala 226:17]
    node refill_address_inc = shl(_T_1092, 3) @[Edges.scala 260:29]
    node _T_1094 = eq(state, UInt<4>("h01")) @[package.scala 14:47]
    node _T_1095 = eq(state, UInt<4>("h02")) @[package.scala 14:47]
    node _T_1096 = eq(state, UInt<4>("h03")) @[package.scala 14:47]
    node _T_1097 = or(_T_1094, _T_1095) @[package.scala 14:62]
    node _T_1098 = or(_T_1097, _T_1096) @[package.scala 14:62]
    node _T_1099 = eq(state, UInt<4>("h04")) @[package.scala 14:47]
    node _T_1100 = eq(state, UInt<4>("h05")) @[package.scala 14:47]
    node _T_1101 = or(_T_1099, _T_1100) @[package.scala 14:62]
    node _T_1103 = eq(cmd_requires_second_acquire, UInt<1>("h00")) @[NBDcache.scala 183:23]
    node _T_1104 = and(_T_1101, _T_1103) @[NBDcache.scala 182:65]
    node _T_1106 = eq(refill_done, UInt<1>("h00")) @[NBDcache.scala 183:55]
    node _T_1107 = and(_T_1104, _T_1106) @[NBDcache.scala 183:52]
    node _T_1108 = or(_T_1098, _T_1107) @[NBDcache.scala 181:56]
    node sec_rdy = and(idx_match, _T_1108) @[NBDcache.scala 180:27]
    inst rpq of Queue_14 @[NBDcache.scala 185:19]
    rpq.io is invalid
    rpq.clock <= clock
    rpq.reset <= reset
    node _T_1109 = and(io.req_pri_val, io.req_pri_rdy) @[NBDcache.scala 186:39]
    node _T_1110 = and(io.req_sec_val, sec_rdy) @[NBDcache.scala 186:75]
    node _T_1111 = or(_T_1109, _T_1110) @[NBDcache.scala 186:57]
    node _T_1113 = eq(io.req_bits.cmd, UInt<2>("h02")) @[Consts.scala 92:35]
    node _T_1115 = eq(io.req_bits.cmd, UInt<2>("h03")) @[Consts.scala 92:52]
    node _T_1116 = or(_T_1113, _T_1115) @[Consts.scala 92:45]
    node _T_1118 = eq(_T_1116, UInt<1>("h00")) @[NBDcache.scala 186:90]
    node _T_1119 = and(_T_1111, _T_1118) @[NBDcache.scala 186:87]
    rpq.io.enq.valid <= _T_1119 @[NBDcache.scala 186:20]
    rpq.io.enq.bits <- io.req_bits @[NBDcache.scala 187:19]
    node _T_1120 = eq(state, UInt<4>("h08")) @[NBDcache.scala 188:49]
    node _T_1121 = and(io.replay.ready, _T_1120) @[NBDcache.scala 188:40]
    node _T_1122 = eq(state, UInt<4>("h00")) @[NBDcache.scala 188:75]
    node _T_1123 = or(_T_1121, _T_1122) @[NBDcache.scala 188:66]
    rpq.io.deq.ready <= _T_1123 @[NBDcache.scala 188:20]
    node _T_1124 = eq(state, UInt<4>("h08")) @[NBDcache.scala 190:15]
    node _T_1126 = eq(rpq.io.deq.valid, UInt<1>("h00")) @[NBDcache.scala 190:34]
    node _T_1127 = and(_T_1124, _T_1126) @[NBDcache.scala 190:31]
    when _T_1127 : @[NBDcache.scala 190:53]
      state <= UInt<4>("h00") @[NBDcache.scala 191:11]
      skip @[NBDcache.scala 190:53]
    node _T_1128 = eq(state, UInt<4>("h07")) @[NBDcache.scala 193:15]
    when _T_1128 : @[NBDcache.scala 193:38]
      state <= UInt<4>("h08") @[NBDcache.scala 195:11]
      skip @[NBDcache.scala 193:38]
    node _T_1129 = eq(state, UInt<4>("h06")) @[NBDcache.scala 197:15]
    node _T_1130 = and(_T_1129, io.meta_write.ready) @[NBDcache.scala 197:36]
    when _T_1130 : @[NBDcache.scala 197:60]
      state <= UInt<4>("h07") @[NBDcache.scala 198:11]
      skip @[NBDcache.scala 197:60]
    node _T_1131 = eq(state, UInt<4>("h05")) @[NBDcache.scala 200:15]
    node _T_1132 = and(_T_1131, refill_done) @[NBDcache.scala 200:33]
    when _T_1132 : @[NBDcache.scala 200:49]
      new_coh <- coh_on_grant @[NBDcache.scala 201:13]
      state <= UInt<4>("h06") @[NBDcache.scala 202:11]
      skip @[NBDcache.scala 200:49]
    node _T_1133 = and(io.mem_acquire.ready, io.mem_acquire.valid) @[Decoupled.scala 30:37]
    when _T_1133 : @[NBDcache.scala 204:32]
      state <= UInt<4>("h05") @[NBDcache.scala 205:11]
      skip @[NBDcache.scala 204:32]
    node _T_1134 = eq(state, UInt<4>("h03")) @[NBDcache.scala 207:15]
    node _T_1135 = and(_T_1134, io.meta_write.ready) @[NBDcache.scala 207:32]
    when _T_1135 : @[NBDcache.scala 207:56]
      state <= UInt<4>("h04") @[NBDcache.scala 208:11]
      skip @[NBDcache.scala 207:56]
    node _T_1136 = eq(state, UInt<4>("h02")) @[NBDcache.scala 210:15]
    node _T_1137 = and(_T_1136, io.mem_grant.valid) @[NBDcache.scala 210:29]
    when _T_1137 : @[NBDcache.scala 210:52]
      state <= UInt<4>("h03") @[NBDcache.scala 211:11]
      skip @[NBDcache.scala 210:52]
    node _T_1138 = and(io.wb_req.ready, io.wb_req.valid) @[Decoupled.scala 30:37]
    when _T_1138 : @[NBDcache.scala 213:27]
      state <= UInt<4>("h02") @[NBDcache.scala 214:11]
      skip @[NBDcache.scala 213:27]
    node _T_1139 = and(io.req_sec_val, io.req_sec_rdy) @[NBDcache.scala 216:24]
    when _T_1139 : @[NBDcache.scala 216:43]
      req.cmd <= dirtier_cmd @[NBDcache.scala 220:13]
      when is_hit_again : @[NBDcache.scala 221:25]
        new_coh <- dirtier_coh @[NBDcache.scala 222:15]
        skip @[NBDcache.scala 221:25]
      skip @[NBDcache.scala 216:43]
    node _T_1140 = and(io.req_pri_val, io.req_pri_rdy) @[NBDcache.scala 225:24]
    when _T_1140 : @[NBDcache.scala 225:43]
      req <- io.req_bits @[NBDcache.scala 226:9]
      node _T_1149 = eq(UInt<5>("h013"), UInt<5>("h010")) @[Mux.scala 46:19]
      node _T_1150 = mux(_T_1149, UInt<2>("h00"), UInt<2>("h02")) @[Mux.scala 46:16]
      node _T_1151 = eq(UInt<5>("h012"), UInt<5>("h010")) @[Mux.scala 46:19]
      node _T_1152 = mux(_T_1151, UInt<2>("h01"), _T_1150) @[Mux.scala 46:16]
      node _T_1153 = eq(UInt<5>("h010"), UInt<5>("h010")) @[Mux.scala 46:19]
      node _T_1154 = mux(_T_1153, UInt<2>("h02"), _T_1152) @[Mux.scala 46:16]
      node _T_1155 = cat(_T_1154, io.req_bits.old_meta.coh.state) @[Cat.scala 30:58]
      node _T_1161 = cat(UInt<2>("h00"), UInt<2>("h03")) @[Cat.scala 30:58]
      node _T_1167 = cat(UInt<2>("h00"), UInt<2>("h02")) @[Cat.scala 30:58]
      node _T_1173 = cat(UInt<2>("h00"), UInt<2>("h01")) @[Cat.scala 30:58]
      node _T_1179 = cat(UInt<2>("h00"), UInt<2>("h00")) @[Cat.scala 30:58]
      node _T_1185 = cat(UInt<2>("h01"), UInt<2>("h03")) @[Cat.scala 30:58]
      node _T_1191 = cat(UInt<2>("h01"), UInt<2>("h02")) @[Cat.scala 30:58]
      node _T_1197 = cat(UInt<2>("h01"), UInt<2>("h01")) @[Cat.scala 30:58]
      node _T_1203 = cat(UInt<2>("h01"), UInt<2>("h00")) @[Cat.scala 30:58]
      node _T_1209 = cat(UInt<2>("h02"), UInt<2>("h03")) @[Cat.scala 30:58]
      node _T_1215 = cat(UInt<2>("h02"), UInt<2>("h02")) @[Cat.scala 30:58]
      node _T_1221 = cat(UInt<2>("h02"), UInt<2>("h01")) @[Cat.scala 30:58]
      node _T_1227 = cat(UInt<2>("h02"), UInt<2>("h00")) @[Cat.scala 30:58]
      node _T_1231 = eq(_T_1227, _T_1155) @[Misc.scala 94:20]
      node _T_1232 = mux(_T_1231, UInt<1>("h00"), UInt<1>("h00")) @[Misc.scala 76:9]
      node _T_1233 = mux(_T_1231, UInt<3>("h05"), UInt<1>("h00")) @[Misc.scala 76:36]
      node _T_1234 = mux(_T_1231, UInt<2>("h00"), UInt<1>("h00")) @[Misc.scala 76:63]
      node _T_1235 = eq(_T_1221, _T_1155) @[Misc.scala 94:20]
      node _T_1236 = mux(_T_1235, UInt<1>("h00"), _T_1232) @[Misc.scala 76:9]
      node _T_1237 = mux(_T_1235, UInt<3>("h02"), _T_1233) @[Misc.scala 76:36]
      node _T_1238 = mux(_T_1235, UInt<2>("h00"), _T_1234) @[Misc.scala 76:63]
      node _T_1239 = eq(_T_1215, _T_1155) @[Misc.scala 94:20]
      node _T_1240 = mux(_T_1239, UInt<1>("h00"), _T_1236) @[Misc.scala 76:9]
      node _T_1241 = mux(_T_1239, UInt<3>("h01"), _T_1237) @[Misc.scala 76:36]
      node _T_1242 = mux(_T_1239, UInt<2>("h00"), _T_1238) @[Misc.scala 76:63]
      node _T_1243 = eq(_T_1209, _T_1155) @[Misc.scala 94:20]
      node _T_1244 = mux(_T_1243, UInt<1>("h01"), _T_1240) @[Misc.scala 76:9]
      node _T_1245 = mux(_T_1243, UInt<3>("h01"), _T_1241) @[Misc.scala 76:36]
      node _T_1246 = mux(_T_1243, UInt<2>("h00"), _T_1242) @[Misc.scala 76:63]
      node _T_1247 = eq(_T_1203, _T_1155) @[Misc.scala 94:20]
      node _T_1248 = mux(_T_1247, UInt<1>("h00"), _T_1244) @[Misc.scala 76:9]
      node _T_1249 = mux(_T_1247, UInt<3>("h02"), _T_1245) @[Misc.scala 76:36]
      node _T_1250 = mux(_T_1247, UInt<2>("h00"), _T_1246) @[Misc.scala 76:63]
      node _T_1251 = eq(_T_1197, _T_1155) @[Misc.scala 94:20]
      node _T_1252 = mux(_T_1251, UInt<1>("h00"), _T_1248) @[Misc.scala 76:9]
      node _T_1253 = mux(_T_1251, UInt<3>("h04"), _T_1249) @[Misc.scala 76:36]
      node _T_1254 = mux(_T_1251, UInt<2>("h01"), _T_1250) @[Misc.scala 76:63]
      node _T_1255 = eq(_T_1191, _T_1155) @[Misc.scala 94:20]
      node _T_1256 = mux(_T_1255, UInt<1>("h00"), _T_1252) @[Misc.scala 76:9]
      node _T_1257 = mux(_T_1255, UInt<3>("h00"), _T_1253) @[Misc.scala 76:36]
      node _T_1258 = mux(_T_1255, UInt<2>("h01"), _T_1254) @[Misc.scala 76:63]
      node _T_1259 = eq(_T_1185, _T_1155) @[Misc.scala 94:20]
      node _T_1260 = mux(_T_1259, UInt<1>("h01"), _T_1256) @[Misc.scala 76:9]
      node _T_1261 = mux(_T_1259, UInt<3>("h00"), _T_1257) @[Misc.scala 76:36]
      node _T_1262 = mux(_T_1259, UInt<2>("h01"), _T_1258) @[Misc.scala 76:63]
      node _T_1263 = eq(_T_1179, _T_1155) @[Misc.scala 94:20]
      node _T_1264 = mux(_T_1263, UInt<1>("h00"), _T_1260) @[Misc.scala 76:9]
      node _T_1265 = mux(_T_1263, UInt<3>("h05"), _T_1261) @[Misc.scala 76:36]
      node _T_1266 = mux(_T_1263, UInt<2>("h00"), _T_1262) @[Misc.scala 76:63]
      node _T_1267 = eq(_T_1173, _T_1155) @[Misc.scala 94:20]
      node _T_1268 = mux(_T_1267, UInt<1>("h00"), _T_1264) @[Misc.scala 76:9]
      node _T_1269 = mux(_T_1267, UInt<3>("h04"), _T_1265) @[Misc.scala 76:36]
      node _T_1270 = mux(_T_1267, UInt<2>("h01"), _T_1266) @[Misc.scala 76:63]
      node _T_1271 = eq(_T_1167, _T_1155) @[Misc.scala 94:20]
      node _T_1272 = mux(_T_1271, UInt<1>("h00"), _T_1268) @[Misc.scala 76:9]
      node _T_1273 = mux(_T_1271, UInt<3>("h03"), _T_1269) @[Misc.scala 76:36]
      node _T_1274 = mux(_T_1271, UInt<2>("h02"), _T_1270) @[Misc.scala 76:63]
      node _T_1275 = eq(_T_1161, _T_1155) @[Misc.scala 94:20]
      node _T_1276 = mux(_T_1275, UInt<1>("h01"), _T_1272) @[Misc.scala 76:9]
      node _T_1277 = mux(_T_1275, UInt<3>("h03"), _T_1273) @[Misc.scala 76:36]
      node _T_1278 = mux(_T_1275, UInt<2>("h02"), _T_1274) @[Misc.scala 76:63]
      wire _T_1280 : {state : UInt<2>} @[Metadata.scala 160:20]
      _T_1280 is invalid @[Metadata.scala 160:20]
      _T_1280.state <= _T_1278 @[Metadata.scala 161:16]
      node _T_1282 = eq(io.req_bits.cmd, UInt<1>("h01")) @[Consts.scala 94:32]
      node _T_1284 = eq(io.req_bits.cmd, UInt<5>("h011")) @[Consts.scala 94:49]
      node _T_1285 = or(_T_1282, _T_1284) @[Consts.scala 94:42]
      node _T_1287 = eq(io.req_bits.cmd, UInt<3>("h07")) @[Consts.scala 94:66]
      node _T_1288 = or(_T_1285, _T_1287) @[Consts.scala 94:59]
      node _T_1293 = eq(io.req_bits.cmd, UInt<3>("h04")) @[package.scala 14:47]
      node _T_1294 = eq(io.req_bits.cmd, UInt<4>("h09")) @[package.scala 14:47]
      node _T_1295 = eq(io.req_bits.cmd, UInt<4>("h0a")) @[package.scala 14:47]
      node _T_1296 = eq(io.req_bits.cmd, UInt<4>("h0b")) @[package.scala 14:47]
      node _T_1297 = or(_T_1293, _T_1294) @[package.scala 14:62]
      node _T_1298 = or(_T_1297, _T_1295) @[package.scala 14:62]
      node _T_1299 = or(_T_1298, _T_1296) @[package.scala 14:62]
      node _T_1305 = eq(io.req_bits.cmd, UInt<4>("h08")) @[package.scala 14:47]
      node _T_1306 = eq(io.req_bits.cmd, UInt<4>("h0c")) @[package.scala 14:47]
      node _T_1307 = eq(io.req_bits.cmd, UInt<4>("h0d")) @[package.scala 14:47]
      node _T_1308 = eq(io.req_bits.cmd, UInt<4>("h0e")) @[package.scala 14:47]
      node _T_1309 = eq(io.req_bits.cmd, UInt<4>("h0f")) @[package.scala 14:47]
      node _T_1310 = or(_T_1305, _T_1306) @[package.scala 14:62]
      node _T_1311 = or(_T_1310, _T_1307) @[package.scala 14:62]
      node _T_1312 = or(_T_1311, _T_1308) @[package.scala 14:62]
      node _T_1313 = or(_T_1312, _T_1309) @[package.scala 14:62]
      node _T_1314 = or(_T_1299, _T_1313) @[Consts.scala 91:44]
      node _T_1315 = or(_T_1288, _T_1314) @[Consts.scala 94:76]
      node _T_1317 = eq(io.req_bits.cmd, UInt<1>("h01")) @[Consts.scala 94:32]
      node _T_1319 = eq(io.req_bits.cmd, UInt<5>("h011")) @[Consts.scala 94:49]
      node _T_1320 = or(_T_1317, _T_1319) @[Consts.scala 94:42]
      node _T_1322 = eq(io.req_bits.cmd, UInt<3>("h07")) @[Consts.scala 94:66]
      node _T_1323 = or(_T_1320, _T_1322) @[Consts.scala 94:59]
      node _T_1328 = eq(io.req_bits.cmd, UInt<3>("h04")) @[package.scala 14:47]
      node _T_1329 = eq(io.req_bits.cmd, UInt<4>("h09")) @[package.scala 14:47]
      node _T_1330 = eq(io.req_bits.cmd, UInt<4>("h0a")) @[package.scala 14:47]
      node _T_1331 = eq(io.req_bits.cmd, UInt<4>("h0b")) @[package.scala 14:47]
      node _T_1332 = or(_T_1328, _T_1329) @[package.scala 14:62]
      node _T_1333 = or(_T_1332, _T_1330) @[package.scala 14:62]
      node _T_1334 = or(_T_1333, _T_1331) @[package.scala 14:62]
      node _T_1340 = eq(io.req_bits.cmd, UInt<4>("h08")) @[package.scala 14:47]
      node _T_1341 = eq(io.req_bits.cmd, UInt<4>("h0c")) @[package.scala 14:47]
      node _T_1342 = eq(io.req_bits.cmd, UInt<4>("h0d")) @[package.scala 14:47]
      node _T_1343 = eq(io.req_bits.cmd, UInt<4>("h0e")) @[package.scala 14:47]
      node _T_1344 = eq(io.req_bits.cmd, UInt<4>("h0f")) @[package.scala 14:47]
      node _T_1345 = or(_T_1340, _T_1341) @[package.scala 14:62]
      node _T_1346 = or(_T_1345, _T_1342) @[package.scala 14:62]
      node _T_1347 = or(_T_1346, _T_1343) @[package.scala 14:62]
      node _T_1348 = or(_T_1347, _T_1344) @[package.scala 14:62]
      node _T_1349 = or(_T_1334, _T_1348) @[Consts.scala 91:44]
      node _T_1350 = or(_T_1323, _T_1349) @[Consts.scala 94:76]
      node _T_1352 = eq(io.req_bits.cmd, UInt<2>("h03")) @[Consts.scala 95:54]
      node _T_1353 = or(_T_1350, _T_1352) @[Consts.scala 95:47]
      node _T_1355 = eq(io.req_bits.cmd, UInt<3>("h06")) @[Consts.scala 95:71]
      node _T_1356 = or(_T_1353, _T_1355) @[Consts.scala 95:64]
      node _T_1357 = cat(_T_1315, _T_1356) @[Cat.scala 30:58]
      node _T_1358 = cat(_T_1357, io.req_bits.old_meta.coh.state) @[Cat.scala 30:58]
      node _T_1363 = cat(UInt<1>("h00"), UInt<1>("h00")) @[Cat.scala 30:58]
      node _T_1365 = cat(_T_1363, UInt<2>("h03")) @[Cat.scala 30:58]
      node _T_1370 = cat(UInt<1>("h00"), UInt<1>("h00")) @[Cat.scala 30:58]
      node _T_1372 = cat(_T_1370, UInt<2>("h02")) @[Cat.scala 30:58]
      node _T_1377 = cat(UInt<1>("h00"), UInt<1>("h00")) @[Cat.scala 30:58]
      node _T_1379 = cat(_T_1377, UInt<2>("h01")) @[Cat.scala 30:58]
      node _T_1384 = cat(UInt<1>("h00"), UInt<1>("h01")) @[Cat.scala 30:58]
      node _T_1386 = cat(_T_1384, UInt<2>("h03")) @[Cat.scala 30:58]
      node _T_1391 = cat(UInt<1>("h00"), UInt<1>("h01")) @[Cat.scala 30:58]
      node _T_1393 = cat(_T_1391, UInt<2>("h02")) @[Cat.scala 30:58]
      node _T_1398 = cat(UInt<1>("h01"), UInt<1>("h01")) @[Cat.scala 30:58]
      node _T_1400 = cat(_T_1398, UInt<2>("h03")) @[Cat.scala 30:58]
      node _T_1405 = cat(UInt<1>("h01"), UInt<1>("h01")) @[Cat.scala 30:58]
      node _T_1407 = cat(_T_1405, UInt<2>("h02")) @[Cat.scala 30:58]
      node _T_1412 = cat(UInt<1>("h00"), UInt<1>("h00")) @[Cat.scala 30:58]
      node _T_1414 = cat(_T_1412, UInt<2>("h00")) @[Cat.scala 30:58]
      node _T_1419 = cat(UInt<1>("h00"), UInt<1>("h01")) @[Cat.scala 30:58]
      node _T_1421 = cat(_T_1419, UInt<2>("h01")) @[Cat.scala 30:58]
      node _T_1426 = cat(UInt<1>("h00"), UInt<1>("h01")) @[Cat.scala 30:58]
      node _T_1428 = cat(_T_1426, UInt<2>("h00")) @[Cat.scala 30:58]
      node _T_1433 = cat(UInt<1>("h01"), UInt<1>("h01")) @[Cat.scala 30:58]
      node _T_1435 = cat(_T_1433, UInt<2>("h01")) @[Cat.scala 30:58]
      node _T_1440 = cat(UInt<1>("h01"), UInt<1>("h01")) @[Cat.scala 30:58]
      node _T_1442 = cat(_T_1440, UInt<2>("h00")) @[Cat.scala 30:58]
      node _T_1445 = eq(_T_1442, _T_1358) @[Misc.scala 87:20]
      node _T_1446 = mux(_T_1445, UInt<1>("h00"), UInt<1>("h00")) @[Misc.scala 73:9]
      node _T_1447 = mux(_T_1445, UInt<2>("h01"), UInt<1>("h00")) @[Misc.scala 73:36]
      node _T_1448 = eq(_T_1435, _T_1358) @[Misc.scala 87:20]
      node _T_1449 = mux(_T_1448, UInt<1>("h00"), _T_1446) @[Misc.scala 73:9]
      node _T_1450 = mux(_T_1448, UInt<2>("h02"), _T_1447) @[Misc.scala 73:36]
      node _T_1451 = eq(_T_1428, _T_1358) @[Misc.scala 87:20]
      node _T_1452 = mux(_T_1451, UInt<1>("h00"), _T_1449) @[Misc.scala 73:9]
      node _T_1453 = mux(_T_1451, UInt<2>("h01"), _T_1450) @[Misc.scala 73:36]
      node _T_1454 = eq(_T_1421, _T_1358) @[Misc.scala 87:20]
      node _T_1455 = mux(_T_1454, UInt<1>("h00"), _T_1452) @[Misc.scala 73:9]
      node _T_1456 = mux(_T_1454, UInt<2>("h02"), _T_1453) @[Misc.scala 73:36]
      node _T_1457 = eq(_T_1414, _T_1358) @[Misc.scala 87:20]
      node _T_1458 = mux(_T_1457, UInt<1>("h00"), _T_1455) @[Misc.scala 73:9]
      node _T_1459 = mux(_T_1457, UInt<2>("h00"), _T_1456) @[Misc.scala 73:36]
      node _T_1460 = eq(_T_1407, _T_1358) @[Misc.scala 87:20]
      node _T_1461 = mux(_T_1460, UInt<1>("h01"), _T_1458) @[Misc.scala 73:9]
      node _T_1462 = mux(_T_1460, UInt<2>("h03"), _T_1459) @[Misc.scala 73:36]
      node _T_1463 = eq(_T_1400, _T_1358) @[Misc.scala 87:20]
      node _T_1464 = mux(_T_1463, UInt<1>("h01"), _T_1461) @[Misc.scala 73:9]
      node _T_1465 = mux(_T_1463, UInt<2>("h03"), _T_1462) @[Misc.scala 73:36]
      node _T_1466 = eq(_T_1393, _T_1358) @[Misc.scala 87:20]
      node _T_1467 = mux(_T_1466, UInt<1>("h01"), _T_1464) @[Misc.scala 73:9]
      node _T_1468 = mux(_T_1466, UInt<2>("h02"), _T_1465) @[Misc.scala 73:36]
      node _T_1469 = eq(_T_1386, _T_1358) @[Misc.scala 87:20]
      node _T_1470 = mux(_T_1469, UInt<1>("h01"), _T_1467) @[Misc.scala 73:9]
      node _T_1471 = mux(_T_1469, UInt<2>("h03"), _T_1468) @[Misc.scala 73:36]
      node _T_1472 = eq(_T_1379, _T_1358) @[Misc.scala 87:20]
      node _T_1473 = mux(_T_1472, UInt<1>("h01"), _T_1470) @[Misc.scala 73:9]
      node _T_1474 = mux(_T_1472, UInt<2>("h01"), _T_1471) @[Misc.scala 73:36]
      node _T_1475 = eq(_T_1372, _T_1358) @[Misc.scala 87:20]
      node _T_1476 = mux(_T_1475, UInt<1>("h01"), _T_1473) @[Misc.scala 73:9]
      node _T_1477 = mux(_T_1475, UInt<2>("h02"), _T_1474) @[Misc.scala 73:36]
      node _T_1478 = eq(_T_1365, _T_1358) @[Misc.scala 87:20]
      node _T_1479 = mux(_T_1478, UInt<1>("h01"), _T_1476) @[Misc.scala 73:9]
      node _T_1480 = mux(_T_1478, UInt<2>("h03"), _T_1477) @[Misc.scala 73:36]
      wire _T_1482 : {state : UInt<2>} @[Metadata.scala 160:20]
      _T_1482 is invalid @[Metadata.scala 160:20]
      _T_1482.state <= _T_1480 @[Metadata.scala 161:16]
      when io.req_bits.tag_match : @[NBDcache.scala 230:34]
        when _T_1479 : @[NBDcache.scala 231:21]
          new_coh <- _T_1482 @[NBDcache.scala 232:17]
          state <= UInt<4>("h06") @[NBDcache.scala 233:15]
          skip @[NBDcache.scala 231:21]
        else : @[NBDcache.scala 234:19]
          new_coh <- io.req_bits.old_meta.coh @[NBDcache.scala 235:17]
          state <= UInt<4>("h04") @[NBDcache.scala 236:15]
          skip @[NBDcache.scala 234:19]
        skip @[NBDcache.scala 230:34]
      else : @[NBDcache.scala 238:17]
        wire _T_1485 : {state : UInt<2>} @[Metadata.scala 160:20]
        _T_1485 is invalid @[Metadata.scala 160:20]
        _T_1485.state <= UInt<2>("h00") @[Metadata.scala 161:16]
        new_coh <- _T_1485 @[NBDcache.scala 239:15]
        node _T_1486 = mux(_T_1276, UInt<4>("h01"), UInt<4>("h03")) @[NBDcache.scala 240:19]
        state <= _T_1486 @[NBDcache.scala 240:13]
        skip @[NBDcache.scala 238:17]
      skip @[NBDcache.scala 225:43]
    inst grantackq of Queue_15 @[NBDcache.scala 244:25]
    grantackq.io is invalid
    grantackq.clock <= clock
    grantackq.reset <= reset
    node _T_1487 = eq(state, UInt<4>("h00")) @[package.scala 14:47]
    node _T_1488 = eq(state, UInt<4>("h04")) @[package.scala 14:47]
    node can_finish = or(_T_1487, _T_1488) @[package.scala 14:62]
    node _T_1489 = bits(io.mem_grant.bits.opcode, 2, 2) @[Edges.scala 71:36]
    node _T_1490 = bits(io.mem_grant.bits.opcode, 1, 1) @[Edges.scala 71:52]
    node _T_1492 = eq(_T_1490, UInt<1>("h00")) @[Edges.scala 71:43]
    node _T_1493 = and(_T_1489, _T_1492) @[Edges.scala 71:40]
    node _T_1494 = and(refill_done, _T_1493) @[NBDcache.scala 246:41]
    grantackq.io.enq.valid <= _T_1494 @[NBDcache.scala 246:26]
    wire _T_1496 : {sink : UInt<3>} @[Edges.scala 362:17]
    _T_1496 is invalid @[Edges.scala 362:17]
    _T_1496.sink <= io.mem_grant.bits.sink @[Edges.scala 363:12]
    grantackq.io.enq.bits <- _T_1496 @[NBDcache.scala 247:25]
    node _T_1497 = and(grantackq.io.deq.valid, can_finish) @[NBDcache.scala 248:49]
    io.mem_finish.valid <= _T_1497 @[NBDcache.scala 248:23]
    io.mem_finish.bits <- grantackq.io.deq.bits @[NBDcache.scala 249:22]
    node _T_1498 = and(io.mem_finish.ready, can_finish) @[NBDcache.scala 250:49]
    grantackq.io.deq.ready <= _T_1498 @[NBDcache.scala 250:26]
    node _T_1499 = neq(state, UInt<4>("h00")) @[NBDcache.scala 252:26]
    node _T_1500 = and(_T_1499, idx_match) @[NBDcache.scala 252:41]
    io.idx_match <= _T_1500 @[NBDcache.scala 252:16]
    io.refill.way_en <= req.way_en @[NBDcache.scala 253:20]
    node _T_1501 = or(req_block_addr, refill_address_inc) @[NBDcache.scala 254:36]
    io.refill.addr <= _T_1501 @[NBDcache.scala 254:18]
    io.tag <= req_tag @[NBDcache.scala 255:10]
    node _T_1502 = eq(state, UInt<4>("h00")) @[NBDcache.scala 256:27]
    io.req_pri_rdy <= _T_1502 @[NBDcache.scala 256:18]
    node _T_1503 = and(sec_rdy, rpq.io.enq.ready) @[NBDcache.scala 257:29]
    io.req_sec_rdy <= _T_1503 @[NBDcache.scala 257:18]
    reg meta_hazard : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[NBDcache.scala 259:24]
    node _T_1507 = neq(meta_hazard, UInt<1>("h00")) @[NBDcache.scala 260:21]
    when _T_1507 : @[NBDcache.scala 260:34]
      node _T_1509 = add(meta_hazard, UInt<1>("h01")) @[NBDcache.scala 260:63]
      node _T_1510 = tail(_T_1509, 1) @[NBDcache.scala 260:63]
      meta_hazard <= _T_1510 @[NBDcache.scala 260:48]
      skip @[NBDcache.scala 260:34]
    node _T_1511 = and(io.meta_write.ready, io.meta_write.valid) @[Decoupled.scala 30:37]
    when _T_1511 : @[NBDcache.scala 261:31]
      meta_hazard <= UInt<1>("h01") @[NBDcache.scala 261:45]
      skip @[NBDcache.scala 261:31]
    node _T_1514 = eq(idx_match, UInt<1>("h00")) @[NBDcache.scala 262:19]
    node _T_1515 = eq(state, UInt<4>("h01")) @[package.scala 14:47]
    node _T_1516 = eq(state, UInt<4>("h02")) @[package.scala 14:47]
    node _T_1517 = eq(state, UInt<4>("h03")) @[package.scala 14:47]
    node _T_1518 = or(_T_1515, _T_1516) @[package.scala 14:62]
    node _T_1519 = or(_T_1518, _T_1517) @[package.scala 14:62]
    node _T_1521 = eq(_T_1519, UInt<1>("h00")) @[NBDcache.scala 262:34]
    node _T_1523 = eq(meta_hazard, UInt<1>("h00")) @[NBDcache.scala 262:86]
    node _T_1524 = and(_T_1521, _T_1523) @[NBDcache.scala 262:71]
    node _T_1525 = or(_T_1514, _T_1524) @[NBDcache.scala 262:30]
    io.probe_rdy <= _T_1525 @[NBDcache.scala 262:16]
    node _T_1526 = eq(state, UInt<4>("h06")) @[package.scala 14:47]
    node _T_1527 = eq(state, UInt<4>("h03")) @[package.scala 14:47]
    node _T_1528 = or(_T_1526, _T_1527) @[package.scala 14:62]
    io.meta_write.valid <= _T_1528 @[NBDcache.scala 264:23]
    io.meta_write.bits.idx <= req_idx @[NBDcache.scala 265:26]
    node _T_1529 = eq(state, UInt<4>("h03")) @[NBDcache.scala 266:44]
    node _T_1530 = mux(_T_1529, coh_on_clear, new_coh) @[NBDcache.scala 266:37]
    io.meta_write.bits.data.coh <- _T_1530 @[NBDcache.scala 266:31]
    io.meta_write.bits.data.tag <= io.tag @[NBDcache.scala 267:31]
    io.meta_write.bits.way_en <= req.way_en @[NBDcache.scala 268:29]
    node _T_1531 = eq(state, UInt<4>("h01")) @[NBDcache.scala 270:28]
    io.wb_req.valid <= _T_1531 @[NBDcache.scala 270:19]
    io.wb_req.bits.source <= UInt<1>("h00") @[NBDcache.scala 271:25]
    io.wb_req.bits.tag <= req.old_meta.tag @[NBDcache.scala 272:22]
    io.wb_req.bits.idx <= req_idx @[NBDcache.scala 273:22]
    io.wb_req.bits.param <= shrink_param @[NBDcache.scala 274:24]
    io.wb_req.bits.way_en <= req.way_en @[NBDcache.scala 275:25]
    io.wb_req.bits.voluntary <= UInt<1>("h01") @[NBDcache.scala 276:28]
    node _T_1534 = eq(state, UInt<4>("h04")) @[NBDcache.scala 278:33]
    node _T_1535 = and(_T_1534, grantackq.io.enq.ready) @[NBDcache.scala 278:50]
    io.mem_acquire.valid <= _T_1535 @[NBDcache.scala 278:24]
    node _T_1537 = cat(io.tag, req_idx) @[Cat.scala 30:58]
    node _T_1538 = shl(_T_1537, 6) @[NBDcache.scala 281:66]
    node _T_1542 = leq(UInt<1>("h00"), UInt<3>("h06")) @[Parameters.scala 88:32]
    node _T_1544 = leq(UInt<3>("h06"), UInt<4>("h0c")) @[Parameters.scala 88:42]
    node _T_1545 = and(_T_1542, _T_1544) @[Parameters.scala 88:37]
    node _T_1546 = or(UInt<1>("h00"), _T_1545) @[Parameters.scala 157:31]
    node _T_1548 = xor(_T_1538, UInt<14>("h02000")) @[Parameters.scala 153:31]
    node _T_1549 = cvt(_T_1548) @[Parameters.scala 153:49]
    node _T_1551 = and(_T_1549, asSInt(UInt<33>("h08a012000"))) @[Parameters.scala 153:52]
    node _T_1552 = asSInt(_T_1551) @[Parameters.scala 153:52]
    node _T_1554 = eq(_T_1552, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_1555 = and(_T_1546, _T_1554) @[Parameters.scala 157:56]
    node _T_1558 = leq(UInt<1>("h00"), UInt<3>("h06")) @[Parameters.scala 88:32]
    node _T_1560 = leq(UInt<3>("h06"), UInt<3>("h06")) @[Parameters.scala 88:42]
    node _T_1561 = and(_T_1558, _T_1560) @[Parameters.scala 88:37]
    node _T_1562 = or(UInt<1>("h00"), _T_1561) @[Parameters.scala 157:31]
    node _T_1564 = xor(_T_1538, UInt<32>("h080000000")) @[Parameters.scala 153:31]
    node _T_1565 = cvt(_T_1564) @[Parameters.scala 153:49]
    node _T_1567 = and(_T_1565, asSInt(UInt<33>("h080000000"))) @[Parameters.scala 153:52]
    node _T_1568 = asSInt(_T_1567) @[Parameters.scala 153:52]
    node _T_1570 = eq(_T_1568, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_1571 = and(_T_1562, _T_1570) @[Parameters.scala 157:56]
    node _T_1574 = or(UInt<1>("h00"), UInt<1>("h00")) @[Parameters.scala 157:31]
    node _T_1576 = xor(_T_1538, UInt<28>("h08000000")) @[Parameters.scala 153:31]
    node _T_1577 = cvt(_T_1576) @[Parameters.scala 153:49]
    node _T_1579 = and(_T_1577, asSInt(UInt<33>("h088000000"))) @[Parameters.scala 153:52]
    node _T_1580 = asSInt(_T_1579) @[Parameters.scala 153:52]
    node _T_1582 = eq(_T_1580, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_1584 = xor(_T_1538, UInt<26>("h02000000")) @[Parameters.scala 153:31]
    node _T_1585 = cvt(_T_1584) @[Parameters.scala 153:49]
    node _T_1587 = and(_T_1585, asSInt(UInt<33>("h08a010000"))) @[Parameters.scala 153:52]
    node _T_1588 = asSInt(_T_1587) @[Parameters.scala 153:52]
    node _T_1590 = eq(_T_1588, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_1592 = xor(_T_1538, UInt<1>("h00")) @[Parameters.scala 153:31]
    node _T_1593 = cvt(_T_1592) @[Parameters.scala 153:49]
    node _T_1595 = and(_T_1593, asSInt(UInt<33>("h08a012000"))) @[Parameters.scala 153:52]
    node _T_1596 = asSInt(_T_1595) @[Parameters.scala 153:52]
    node _T_1598 = eq(_T_1596, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_1600 = xor(_T_1538, UInt<17>("h010000")) @[Parameters.scala 153:31]
    node _T_1601 = cvt(_T_1600) @[Parameters.scala 153:49]
    node _T_1603 = and(_T_1601, asSInt(UInt<33>("h08a010000"))) @[Parameters.scala 153:52]
    node _T_1604 = asSInt(_T_1603) @[Parameters.scala 153:52]
    node _T_1606 = eq(_T_1604, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_1607 = or(_T_1582, _T_1590) @[Parameters.scala 158:42]
    node _T_1608 = or(_T_1607, _T_1598) @[Parameters.scala 158:42]
    node _T_1609 = or(_T_1608, _T_1606) @[Parameters.scala 158:42]
    node _T_1610 = and(_T_1574, _T_1609) @[Parameters.scala 157:56]
    node _T_1612 = or(UInt<1>("h00"), _T_1555) @[Parameters.scala 159:30]
    node _T_1613 = or(_T_1612, _T_1571) @[Parameters.scala 159:30]
    node _T_1614 = or(_T_1613, _T_1610) @[Parameters.scala 159:30]
    wire _T_1616 : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<2>, address : UInt<32>, mask : UInt<8>, data : UInt<64>} @[Edges.scala 277:17]
    _T_1616 is invalid @[Edges.scala 277:17]
    _T_1616.opcode <= UInt<3>("h06") @[Edges.scala 278:15]
    _T_1616.param <= grow_param @[Edges.scala 279:15]
    _T_1616.size <= UInt<3>("h06") @[Edges.scala 280:15]
    _T_1616.source <= UInt<1>("h00") @[Edges.scala 281:15]
    _T_1616.address <= _T_1538 @[Edges.scala 282:15]
    node _T_1620 = dshl(UInt<1>("h01"), UInt<2>("h02")) @[OneHot.scala 50:12]
    node _T_1621 = bits(_T_1620, 2, 0) @[OneHot.scala 50:27]
    node _T_1623 = or(_T_1621, UInt<1>("h01")) @[Misc.scala 252:54]
    node _T_1625 = geq(UInt<3>("h06"), UInt<2>("h03")) @[Misc.scala 256:21]
    node _T_1627 = bits(_T_1623, 2, 2) @[Misc.scala 259:26]
    node _T_1628 = bits(_T_1538, 2, 2) @[Misc.scala 260:26]
    node _T_1630 = eq(_T_1628, UInt<1>("h00")) @[Misc.scala 261:20]
    node _T_1631 = and(UInt<1>("h01"), _T_1630) @[Misc.scala 264:27]
    node _T_1632 = and(_T_1627, _T_1631) @[Misc.scala 265:38]
    node _T_1633 = or(_T_1625, _T_1632) @[Misc.scala 265:29]
    node _T_1634 = and(UInt<1>("h01"), _T_1628) @[Misc.scala 264:27]
    node _T_1635 = and(_T_1627, _T_1634) @[Misc.scala 265:38]
    node _T_1636 = or(_T_1625, _T_1635) @[Misc.scala 265:29]
    node _T_1637 = bits(_T_1623, 1, 1) @[Misc.scala 259:26]
    node _T_1638 = bits(_T_1538, 1, 1) @[Misc.scala 260:26]
    node _T_1640 = eq(_T_1638, UInt<1>("h00")) @[Misc.scala 261:20]
    node _T_1641 = and(_T_1631, _T_1640) @[Misc.scala 264:27]
    node _T_1642 = and(_T_1637, _T_1641) @[Misc.scala 265:38]
    node _T_1643 = or(_T_1633, _T_1642) @[Misc.scala 265:29]
    node _T_1644 = and(_T_1631, _T_1638) @[Misc.scala 264:27]
    node _T_1645 = and(_T_1637, _T_1644) @[Misc.scala 265:38]
    node _T_1646 = or(_T_1633, _T_1645) @[Misc.scala 265:29]
    node _T_1647 = and(_T_1634, _T_1640) @[Misc.scala 264:27]
    node _T_1648 = and(_T_1637, _T_1647) @[Misc.scala 265:38]
    node _T_1649 = or(_T_1636, _T_1648) @[Misc.scala 265:29]
    node _T_1650 = and(_T_1634, _T_1638) @[Misc.scala 264:27]
    node _T_1651 = and(_T_1637, _T_1650) @[Misc.scala 265:38]
    node _T_1652 = or(_T_1636, _T_1651) @[Misc.scala 265:29]
    node _T_1653 = bits(_T_1623, 0, 0) @[Misc.scala 259:26]
    node _T_1654 = bits(_T_1538, 0, 0) @[Misc.scala 260:26]
    node _T_1656 = eq(_T_1654, UInt<1>("h00")) @[Misc.scala 261:20]
    node _T_1657 = and(_T_1641, _T_1656) @[Misc.scala 264:27]
    node _T_1658 = and(_T_1653, _T_1657) @[Misc.scala 265:38]
    node _T_1659 = or(_T_1643, _T_1658) @[Misc.scala 265:29]
    node _T_1660 = and(_T_1641, _T_1654) @[Misc.scala 264:27]
    node _T_1661 = and(_T_1653, _T_1660) @[Misc.scala 265:38]
    node _T_1662 = or(_T_1643, _T_1661) @[Misc.scala 265:29]
    node _T_1663 = and(_T_1644, _T_1656) @[Misc.scala 264:27]
    node _T_1664 = and(_T_1653, _T_1663) @[Misc.scala 265:38]
    node _T_1665 = or(_T_1646, _T_1664) @[Misc.scala 265:29]
    node _T_1666 = and(_T_1644, _T_1654) @[Misc.scala 264:27]
    node _T_1667 = and(_T_1653, _T_1666) @[Misc.scala 265:38]
    node _T_1668 = or(_T_1646, _T_1667) @[Misc.scala 265:29]
    node _T_1669 = and(_T_1647, _T_1656) @[Misc.scala 264:27]
    node _T_1670 = and(_T_1653, _T_1669) @[Misc.scala 265:38]
    node _T_1671 = or(_T_1649, _T_1670) @[Misc.scala 265:29]
    node _T_1672 = and(_T_1647, _T_1654) @[Misc.scala 264:27]
    node _T_1673 = and(_T_1653, _T_1672) @[Misc.scala 265:38]
    node _T_1674 = or(_T_1649, _T_1673) @[Misc.scala 265:29]
    node _T_1675 = and(_T_1650, _T_1656) @[Misc.scala 264:27]
    node _T_1676 = and(_T_1653, _T_1675) @[Misc.scala 265:38]
    node _T_1677 = or(_T_1652, _T_1676) @[Misc.scala 265:29]
    node _T_1678 = and(_T_1650, _T_1654) @[Misc.scala 264:27]
    node _T_1679 = and(_T_1653, _T_1678) @[Misc.scala 265:38]
    node _T_1680 = or(_T_1652, _T_1679) @[Misc.scala 265:29]
    node _T_1681 = cat(_T_1662, _T_1659) @[Cat.scala 30:58]
    node _T_1682 = cat(_T_1668, _T_1665) @[Cat.scala 30:58]
    node _T_1683 = cat(_T_1682, _T_1681) @[Cat.scala 30:58]
    node _T_1684 = cat(_T_1674, _T_1671) @[Cat.scala 30:58]
    node _T_1685 = cat(_T_1680, _T_1677) @[Cat.scala 30:58]
    node _T_1686 = cat(_T_1685, _T_1684) @[Cat.scala 30:58]
    node _T_1687 = cat(_T_1686, _T_1683) @[Cat.scala 30:58]
    _T_1616.mask <= _T_1687 @[Edges.scala 283:15]
    _T_1616.data <= UInt<1>("h00") @[Edges.scala 284:15]
    io.mem_acquire.bits <- _T_1616 @[NBDcache.scala 279:23]
    node _T_1689 = eq(state, UInt<4>("h08")) @[NBDcache.scala 285:31]
    io.meta_read.valid <= _T_1689 @[NBDcache.scala 285:22]
    io.meta_read.bits.idx <= req_idx @[NBDcache.scala 286:25]
    io.meta_read.bits.tag <= io.tag @[NBDcache.scala 287:25]
    node _T_1690 = eq(state, UInt<4>("h08")) @[NBDcache.scala 289:28]
    node _T_1691 = and(_T_1690, rpq.io.deq.valid) @[NBDcache.scala 289:44]
    io.replay.valid <= _T_1691 @[NBDcache.scala 289:19]
    io.replay.bits <- rpq.io.deq.bits @[NBDcache.scala 290:18]
    io.replay.bits.phys <= UInt<1>("h01") @[NBDcache.scala 291:23]
    node _T_1693 = bits(rpq.io.deq.bits.addr, 5, 0) @[NBDcache.scala 292:67]
    node _T_1694 = cat(io.tag, req_idx) @[Cat.scala 30:58]
    node _T_1695 = cat(_T_1694, _T_1693) @[Cat.scala 30:58]
    io.replay.bits.addr <= _T_1695 @[NBDcache.scala 292:23]
    node _T_1697 = eq(io.meta_read.ready, UInt<1>("h00")) @[NBDcache.scala 294:9]
    when _T_1697 : @[NBDcache.scala 294:30]
      rpq.io.deq.ready <= UInt<1>("h00") @[NBDcache.scala 295:22]
      io.replay.bits.cmd <= UInt<3>("h05") @[NBDcache.scala 296:24]
      skip @[NBDcache.scala 294:30]
    
  module Queue_16 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enq : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<40>, tag : UInt<7>, cmd : UInt<5>, typ : UInt<3>, phys : UInt<1>, sdq_id : UInt<5>}}, deq : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<40>, tag : UInt<7>, cmd : UInt<5>, typ : UInt<3>, phys : UInt<1>, sdq_id : UInt<5>}}, count : UInt<5>}
    
    clock is invalid
    reset is invalid
    io is invalid
    cmem ram : {addr : UInt<40>, tag : UInt<7>, cmd : UInt<5>, typ : UInt<3>, phys : UInt<1>, sdq_id : UInt<5>}[16] @[Decoupled.scala 211:24]
    reg value : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[Counter.scala 26:33]
    reg value_1 : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[Counter.scala 26:33]
    reg maybe_full : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Decoupled.scala 214:35]
    node _T_28 = eq(value, value_1) @[Decoupled.scala 216:41]
    node _T_30 = eq(maybe_full, UInt<1>("h00")) @[Decoupled.scala 217:36]
    node empty = and(_T_28, _T_30) @[Decoupled.scala 217:33]
    node _T_31 = and(_T_28, maybe_full) @[Decoupled.scala 218:32]
    node _T_32 = and(io.enq.ready, io.enq.valid) @[Decoupled.scala 30:37]
    wire do_enq : UInt<1>
    do_enq is invalid
    do_enq <= _T_32
    node _T_34 = and(io.deq.ready, io.deq.valid) @[Decoupled.scala 30:37]
    wire do_deq : UInt<1>
    do_deq is invalid
    do_deq <= _T_34
    when do_enq : @[Decoupled.scala 222:17]
      infer mport _T_36 = ram[value], clock @[Decoupled.scala 223:8]
      _T_36 <- io.enq.bits @[Decoupled.scala 223:24]
      node wrap = eq(value, UInt<4>("h0f")) @[Counter.scala 34:24]
      node _T_39 = add(value, UInt<1>("h01")) @[Counter.scala 35:22]
      node _T_40 = tail(_T_39, 1) @[Counter.scala 35:22]
      value <= _T_40 @[Counter.scala 35:13]
      skip @[Decoupled.scala 222:17]
    when do_deq : @[Decoupled.scala 226:17]
      node wrap_1 = eq(value_1, UInt<4>("h0f")) @[Counter.scala 34:24]
      node _T_43 = add(value_1, UInt<1>("h01")) @[Counter.scala 35:22]
      node _T_44 = tail(_T_43, 1) @[Counter.scala 35:22]
      value_1 <= _T_44 @[Counter.scala 35:13]
      skip @[Decoupled.scala 226:17]
    node _T_45 = neq(do_enq, do_deq) @[Decoupled.scala 229:16]
    when _T_45 : @[Decoupled.scala 229:27]
      maybe_full <= do_enq @[Decoupled.scala 230:16]
      skip @[Decoupled.scala 229:27]
    node _T_47 = eq(empty, UInt<1>("h00")) @[Decoupled.scala 233:19]
    io.deq.valid <= _T_47 @[Decoupled.scala 233:16]
    node _T_49 = eq(_T_31, UInt<1>("h00")) @[Decoupled.scala 234:19]
    io.enq.ready <= _T_49 @[Decoupled.scala 234:16]
    infer mport _T_50 = ram[value_1], clock @[Decoupled.scala 235:21]
    io.deq.bits <- _T_50 @[Decoupled.scala 235:15]
    node _T_51 = sub(value, value_1) @[Decoupled.scala 250:40]
    node _T_52 = asUInt(_T_51) @[Decoupled.scala 250:40]
    node _T_53 = tail(_T_52, 1) @[Decoupled.scala 250:40]
    node _T_54 = and(maybe_full, _T_28) @[Decoupled.scala 252:32]
    node _T_55 = cat(_T_54, _T_53) @[Cat.scala 30:58]
    io.count <= _T_55 @[Decoupled.scala 252:14]
    
  module Queue_17 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip enq : {flip ready : UInt<1>, valid : UInt<1>, bits : {sink : UInt<3>}}, deq : {flip ready : UInt<1>, valid : UInt<1>, bits : {sink : UInt<3>}}, count : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    cmem ram : {sink : UInt<3>}[1] @[Decoupled.scala 211:24]
    reg maybe_full : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Decoupled.scala 214:35]
    node _T_24 = eq(UInt<1>("h00"), UInt<1>("h00")) @[Decoupled.scala 216:41]
    node _T_26 = eq(maybe_full, UInt<1>("h00")) @[Decoupled.scala 217:36]
    node empty = and(_T_24, _T_26) @[Decoupled.scala 217:33]
    node _T_27 = and(_T_24, maybe_full) @[Decoupled.scala 218:32]
    node _T_28 = and(io.enq.ready, io.enq.valid) @[Decoupled.scala 30:37]
    wire do_enq : UInt<1>
    do_enq is invalid
    do_enq <= _T_28
    node _T_30 = and(io.deq.ready, io.deq.valid) @[Decoupled.scala 30:37]
    wire do_deq : UInt<1>
    do_deq is invalid
    do_deq <= _T_30
    when do_enq : @[Decoupled.scala 222:17]
      infer mport _T_33 = ram[UInt<1>("h00")], clock @[Decoupled.scala 223:8]
      _T_33 <- io.enq.bits @[Decoupled.scala 223:24]
      skip @[Decoupled.scala 222:17]
    when do_deq : @[Decoupled.scala 226:17]
      skip @[Decoupled.scala 226:17]
    node _T_36 = neq(do_enq, do_deq) @[Decoupled.scala 229:16]
    when _T_36 : @[Decoupled.scala 229:27]
      maybe_full <= do_enq @[Decoupled.scala 230:16]
      skip @[Decoupled.scala 229:27]
    node _T_38 = eq(empty, UInt<1>("h00")) @[Decoupled.scala 233:19]
    io.deq.valid <= _T_38 @[Decoupled.scala 233:16]
    node _T_40 = eq(_T_27, UInt<1>("h00")) @[Decoupled.scala 234:19]
    io.enq.ready <= _T_40 @[Decoupled.scala 234:16]
    infer mport _T_42 = ram[UInt<1>("h00")], clock @[Decoupled.scala 235:21]
    io.deq.bits <- _T_42 @[Decoupled.scala 235:15]
    node _T_43 = sub(UInt<1>("h00"), UInt<1>("h00")) @[Decoupled.scala 250:40]
    node _T_44 = asUInt(_T_43) @[Decoupled.scala 250:40]
    node _T_45 = tail(_T_44, 1) @[Decoupled.scala 250:40]
    node _T_46 = and(maybe_full, _T_24) @[Decoupled.scala 252:32]
    node _T_47 = cat(_T_46, _T_45) @[Cat.scala 30:58]
    io.count <= _T_47 @[Decoupled.scala 252:14]
    
  module MSHR_1 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip req_pri_val : UInt<1>, req_pri_rdy : UInt<1>, flip req_sec_val : UInt<1>, req_sec_rdy : UInt<1>, flip req_bits : {addr : UInt<40>, tag : UInt<7>, cmd : UInt<5>, typ : UInt<3>, phys : UInt<1>, sdq_id : UInt<5>, tag_match : UInt<1>, old_meta : {coh : {state : UInt<2>}, tag : UInt<20>}, way_en : UInt<4>}, idx_match : UInt<1>, tag : UInt<20>, mem_acquire : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<2>, address : UInt<32>, mask : UInt<8>, data : UInt<64>}}, flip mem_grant : {valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<2>, sink : UInt<3>, data : UInt<64>, error : UInt<1>}}, mem_finish : {flip ready : UInt<1>, valid : UInt<1>, bits : {sink : UInt<3>}}, refill : {way_en : UInt<4>, addr : UInt<12>}, meta_read : {flip ready : UInt<1>, valid : UInt<1>, bits : {idx : UInt<6>, way_en : UInt<4>, tag : UInt<20>}}, meta_write : {flip ready : UInt<1>, valid : UInt<1>, bits : {idx : UInt<6>, way_en : UInt<4>, tag : UInt<20>, data : {coh : {state : UInt<2>}, tag : UInt<20>}}}, replay : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<40>, tag : UInt<7>, cmd : UInt<5>, typ : UInt<3>, phys : UInt<1>, sdq_id : UInt<5>}}, wb_req : {flip ready : UInt<1>, valid : UInt<1>, bits : {tag : UInt<20>, idx : UInt<6>, source : UInt<2>, param : UInt<3>, way_en : UInt<4>, voluntary : UInt<1>}}, probe_rdy : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    reg state : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[NBDcache.scala 159:18]
    reg req : {addr : UInt<40>, tag : UInt<7>, cmd : UInt<5>, typ : UInt<3>, phys : UInt<1>, sdq_id : UInt<5>, tag_match : UInt<1>, old_meta : {coh : {state : UInt<2>}, tag : UInt<20>}, way_en : UInt<4>}, clock @[NBDcache.scala 161:16]
    node req_idx = bits(req.addr, 11, 6) @[NBDcache.scala 162:25]
    node req_tag = shr(req.addr, 12) @[NBDcache.scala 163:26]
    node _T_44 = shr(req.addr, 6) @[NBDcache.scala 164:34]
    node req_block_addr = shl(_T_44, 6) @[NBDcache.scala 164:51]
    node _T_45 = bits(io.req_bits.addr, 11, 6) @[NBDcache.scala 165:47]
    node idx_match = eq(req_idx, _T_45) @[NBDcache.scala 165:27]
    wire _T_48 : {state : UInt<2>} @[Metadata.scala 160:20]
    _T_48 is invalid @[Metadata.scala 160:20]
    _T_48.state <= UInt<2>("h00") @[Metadata.scala 161:16]
    reg new_coh : {state : UInt<2>}, clock with : (reset => (reset, _T_48)) @[NBDcache.scala 167:20]
    node _T_58 = eq(UInt<5>("h013"), UInt<5>("h010")) @[Mux.scala 46:19]
    node _T_59 = mux(_T_58, UInt<2>("h00"), UInt<2>("h02")) @[Mux.scala 46:16]
    node _T_60 = eq(UInt<5>("h012"), UInt<5>("h010")) @[Mux.scala 46:19]
    node _T_61 = mux(_T_60, UInt<2>("h01"), _T_59) @[Mux.scala 46:16]
    node _T_62 = eq(UInt<5>("h010"), UInt<5>("h010")) @[Mux.scala 46:19]
    node _T_63 = mux(_T_62, UInt<2>("h02"), _T_61) @[Mux.scala 46:16]
    node _T_64 = cat(_T_63, req.old_meta.coh.state) @[Cat.scala 30:58]
    node _T_70 = cat(UInt<2>("h00"), UInt<2>("h03")) @[Cat.scala 30:58]
    node _T_76 = cat(UInt<2>("h00"), UInt<2>("h02")) @[Cat.scala 30:58]
    node _T_82 = cat(UInt<2>("h00"), UInt<2>("h01")) @[Cat.scala 30:58]
    node _T_88 = cat(UInt<2>("h00"), UInt<2>("h00")) @[Cat.scala 30:58]
    node _T_94 = cat(UInt<2>("h01"), UInt<2>("h03")) @[Cat.scala 30:58]
    node _T_100 = cat(UInt<2>("h01"), UInt<2>("h02")) @[Cat.scala 30:58]
    node _T_106 = cat(UInt<2>("h01"), UInt<2>("h01")) @[Cat.scala 30:58]
    node _T_112 = cat(UInt<2>("h01"), UInt<2>("h00")) @[Cat.scala 30:58]
    node _T_118 = cat(UInt<2>("h02"), UInt<2>("h03")) @[Cat.scala 30:58]
    node _T_124 = cat(UInt<2>("h02"), UInt<2>("h02")) @[Cat.scala 30:58]
    node _T_130 = cat(UInt<2>("h02"), UInt<2>("h01")) @[Cat.scala 30:58]
    node _T_136 = cat(UInt<2>("h02"), UInt<2>("h00")) @[Cat.scala 30:58]
    node _T_140 = eq(_T_136, _T_64) @[Misc.scala 94:20]
    node _T_141 = mux(_T_140, UInt<1>("h00"), UInt<1>("h00")) @[Misc.scala 76:9]
    node _T_142 = mux(_T_140, UInt<3>("h05"), UInt<1>("h00")) @[Misc.scala 76:36]
    node _T_143 = mux(_T_140, UInt<2>("h00"), UInt<1>("h00")) @[Misc.scala 76:63]
    node _T_144 = eq(_T_130, _T_64) @[Misc.scala 94:20]
    node _T_145 = mux(_T_144, UInt<1>("h00"), _T_141) @[Misc.scala 76:9]
    node _T_146 = mux(_T_144, UInt<3>("h02"), _T_142) @[Misc.scala 76:36]
    node _T_147 = mux(_T_144, UInt<2>("h00"), _T_143) @[Misc.scala 76:63]
    node _T_148 = eq(_T_124, _T_64) @[Misc.scala 94:20]
    node _T_149 = mux(_T_148, UInt<1>("h00"), _T_145) @[Misc.scala 76:9]
    node _T_150 = mux(_T_148, UInt<3>("h01"), _T_146) @[Misc.scala 76:36]
    node _T_151 = mux(_T_148, UInt<2>("h00"), _T_147) @[Misc.scala 76:63]
    node _T_152 = eq(_T_118, _T_64) @[Misc.scala 94:20]
    node _T_153 = mux(_T_152, UInt<1>("h01"), _T_149) @[Misc.scala 76:9]
    node _T_154 = mux(_T_152, UInt<3>("h01"), _T_150) @[Misc.scala 76:36]
    node _T_155 = mux(_T_152, UInt<2>("h00"), _T_151) @[Misc.scala 76:63]
    node _T_156 = eq(_T_112, _T_64) @[Misc.scala 94:20]
    node _T_157 = mux(_T_156, UInt<1>("h00"), _T_153) @[Misc.scala 76:9]
    node _T_158 = mux(_T_156, UInt<3>("h02"), _T_154) @[Misc.scala 76:36]
    node _T_159 = mux(_T_156, UInt<2>("h00"), _T_155) @[Misc.scala 76:63]
    node _T_160 = eq(_T_106, _T_64) @[Misc.scala 94:20]
    node _T_161 = mux(_T_160, UInt<1>("h00"), _T_157) @[Misc.scala 76:9]
    node _T_162 = mux(_T_160, UInt<3>("h04"), _T_158) @[Misc.scala 76:36]
    node _T_163 = mux(_T_160, UInt<2>("h01"), _T_159) @[Misc.scala 76:63]
    node _T_164 = eq(_T_100, _T_64) @[Misc.scala 94:20]
    node _T_165 = mux(_T_164, UInt<1>("h00"), _T_161) @[Misc.scala 76:9]
    node _T_166 = mux(_T_164, UInt<3>("h00"), _T_162) @[Misc.scala 76:36]
    node _T_167 = mux(_T_164, UInt<2>("h01"), _T_163) @[Misc.scala 76:63]
    node _T_168 = eq(_T_94, _T_64) @[Misc.scala 94:20]
    node _T_169 = mux(_T_168, UInt<1>("h01"), _T_165) @[Misc.scala 76:9]
    node _T_170 = mux(_T_168, UInt<3>("h00"), _T_166) @[Misc.scala 76:36]
    node _T_171 = mux(_T_168, UInt<2>("h01"), _T_167) @[Misc.scala 76:63]
    node _T_172 = eq(_T_88, _T_64) @[Misc.scala 94:20]
    node _T_173 = mux(_T_172, UInt<1>("h00"), _T_169) @[Misc.scala 76:9]
    node _T_174 = mux(_T_172, UInt<3>("h05"), _T_170) @[Misc.scala 76:36]
    node _T_175 = mux(_T_172, UInt<2>("h00"), _T_171) @[Misc.scala 76:63]
    node _T_176 = eq(_T_82, _T_64) @[Misc.scala 94:20]
    node _T_177 = mux(_T_176, UInt<1>("h00"), _T_173) @[Misc.scala 76:9]
    node _T_178 = mux(_T_176, UInt<3>("h04"), _T_174) @[Misc.scala 76:36]
    node _T_179 = mux(_T_176, UInt<2>("h01"), _T_175) @[Misc.scala 76:63]
    node _T_180 = eq(_T_76, _T_64) @[Misc.scala 94:20]
    node _T_181 = mux(_T_180, UInt<1>("h00"), _T_177) @[Misc.scala 76:9]
    node _T_182 = mux(_T_180, UInt<3>("h03"), _T_178) @[Misc.scala 76:36]
    node _T_183 = mux(_T_180, UInt<2>("h02"), _T_179) @[Misc.scala 76:63]
    node _T_184 = eq(_T_70, _T_64) @[Misc.scala 94:20]
    node _T_185 = mux(_T_184, UInt<1>("h01"), _T_181) @[Misc.scala 76:9]
    node shrink_param = mux(_T_184, UInt<3>("h03"), _T_182) @[Misc.scala 76:36]
    node _T_186 = mux(_T_184, UInt<2>("h02"), _T_183) @[Misc.scala 76:63]
    wire coh_on_clear : {state : UInt<2>} @[Metadata.scala 160:20]
    coh_on_clear is invalid @[Metadata.scala 160:20]
    coh_on_clear.state <= _T_186 @[Metadata.scala 161:16]
    node _T_189 = eq(req.cmd, UInt<1>("h01")) @[Consts.scala 94:32]
    node _T_191 = eq(req.cmd, UInt<5>("h011")) @[Consts.scala 94:49]
    node _T_192 = or(_T_189, _T_191) @[Consts.scala 94:42]
    node _T_194 = eq(req.cmd, UInt<3>("h07")) @[Consts.scala 94:66]
    node _T_195 = or(_T_192, _T_194) @[Consts.scala 94:59]
    node _T_200 = eq(req.cmd, UInt<3>("h04")) @[package.scala 14:47]
    node _T_201 = eq(req.cmd, UInt<4>("h09")) @[package.scala 14:47]
    node _T_202 = eq(req.cmd, UInt<4>("h0a")) @[package.scala 14:47]
    node _T_203 = eq(req.cmd, UInt<4>("h0b")) @[package.scala 14:47]
    node _T_204 = or(_T_200, _T_201) @[package.scala 14:62]
    node _T_205 = or(_T_204, _T_202) @[package.scala 14:62]
    node _T_206 = or(_T_205, _T_203) @[package.scala 14:62]
    node _T_212 = eq(req.cmd, UInt<4>("h08")) @[package.scala 14:47]
    node _T_213 = eq(req.cmd, UInt<4>("h0c")) @[package.scala 14:47]
    node _T_214 = eq(req.cmd, UInt<4>("h0d")) @[package.scala 14:47]
    node _T_215 = eq(req.cmd, UInt<4>("h0e")) @[package.scala 14:47]
    node _T_216 = eq(req.cmd, UInt<4>("h0f")) @[package.scala 14:47]
    node _T_217 = or(_T_212, _T_213) @[package.scala 14:62]
    node _T_218 = or(_T_217, _T_214) @[package.scala 14:62]
    node _T_219 = or(_T_218, _T_215) @[package.scala 14:62]
    node _T_220 = or(_T_219, _T_216) @[package.scala 14:62]
    node _T_221 = or(_T_206, _T_220) @[Consts.scala 91:44]
    node _T_222 = or(_T_195, _T_221) @[Consts.scala 94:76]
    node _T_224 = eq(req.cmd, UInt<1>("h01")) @[Consts.scala 94:32]
    node _T_226 = eq(req.cmd, UInt<5>("h011")) @[Consts.scala 94:49]
    node _T_227 = or(_T_224, _T_226) @[Consts.scala 94:42]
    node _T_229 = eq(req.cmd, UInt<3>("h07")) @[Consts.scala 94:66]
    node _T_230 = or(_T_227, _T_229) @[Consts.scala 94:59]
    node _T_235 = eq(req.cmd, UInt<3>("h04")) @[package.scala 14:47]
    node _T_236 = eq(req.cmd, UInt<4>("h09")) @[package.scala 14:47]
    node _T_237 = eq(req.cmd, UInt<4>("h0a")) @[package.scala 14:47]
    node _T_238 = eq(req.cmd, UInt<4>("h0b")) @[package.scala 14:47]
    node _T_239 = or(_T_235, _T_236) @[package.scala 14:62]
    node _T_240 = or(_T_239, _T_237) @[package.scala 14:62]
    node _T_241 = or(_T_240, _T_238) @[package.scala 14:62]
    node _T_247 = eq(req.cmd, UInt<4>("h08")) @[package.scala 14:47]
    node _T_248 = eq(req.cmd, UInt<4>("h0c")) @[package.scala 14:47]
    node _T_249 = eq(req.cmd, UInt<4>("h0d")) @[package.scala 14:47]
    node _T_250 = eq(req.cmd, UInt<4>("h0e")) @[package.scala 14:47]
    node _T_251 = eq(req.cmd, UInt<4>("h0f")) @[package.scala 14:47]
    node _T_252 = or(_T_247, _T_248) @[package.scala 14:62]
    node _T_253 = or(_T_252, _T_249) @[package.scala 14:62]
    node _T_254 = or(_T_253, _T_250) @[package.scala 14:62]
    node _T_255 = or(_T_254, _T_251) @[package.scala 14:62]
    node _T_256 = or(_T_241, _T_255) @[Consts.scala 91:44]
    node _T_257 = or(_T_230, _T_256) @[Consts.scala 94:76]
    node _T_259 = eq(req.cmd, UInt<2>("h03")) @[Consts.scala 95:54]
    node _T_260 = or(_T_257, _T_259) @[Consts.scala 95:47]
    node _T_262 = eq(req.cmd, UInt<3>("h06")) @[Consts.scala 95:71]
    node _T_263 = or(_T_260, _T_262) @[Consts.scala 95:64]
    node _T_264 = cat(_T_222, _T_263) @[Cat.scala 30:58]
    node _T_265 = cat(_T_264, new_coh.state) @[Cat.scala 30:58]
    node _T_270 = cat(UInt<1>("h00"), UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_272 = cat(_T_270, UInt<2>("h03")) @[Cat.scala 30:58]
    node _T_277 = cat(UInt<1>("h00"), UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_279 = cat(_T_277, UInt<2>("h02")) @[Cat.scala 30:58]
    node _T_284 = cat(UInt<1>("h00"), UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_286 = cat(_T_284, UInt<2>("h01")) @[Cat.scala 30:58]
    node _T_291 = cat(UInt<1>("h00"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_293 = cat(_T_291, UInt<2>("h03")) @[Cat.scala 30:58]
    node _T_298 = cat(UInt<1>("h00"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_300 = cat(_T_298, UInt<2>("h02")) @[Cat.scala 30:58]
    node _T_305 = cat(UInt<1>("h01"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_307 = cat(_T_305, UInt<2>("h03")) @[Cat.scala 30:58]
    node _T_312 = cat(UInt<1>("h01"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_314 = cat(_T_312, UInt<2>("h02")) @[Cat.scala 30:58]
    node _T_319 = cat(UInt<1>("h00"), UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_321 = cat(_T_319, UInt<2>("h00")) @[Cat.scala 30:58]
    node _T_326 = cat(UInt<1>("h00"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_328 = cat(_T_326, UInt<2>("h01")) @[Cat.scala 30:58]
    node _T_333 = cat(UInt<1>("h00"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_335 = cat(_T_333, UInt<2>("h00")) @[Cat.scala 30:58]
    node _T_340 = cat(UInt<1>("h01"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_342 = cat(_T_340, UInt<2>("h01")) @[Cat.scala 30:58]
    node _T_347 = cat(UInt<1>("h01"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_349 = cat(_T_347, UInt<2>("h00")) @[Cat.scala 30:58]
    node _T_352 = eq(_T_349, _T_265) @[Misc.scala 87:20]
    node _T_353 = mux(_T_352, UInt<1>("h00"), UInt<1>("h00")) @[Misc.scala 73:9]
    node _T_354 = mux(_T_352, UInt<2>("h01"), UInt<1>("h00")) @[Misc.scala 73:36]
    node _T_355 = eq(_T_342, _T_265) @[Misc.scala 87:20]
    node _T_356 = mux(_T_355, UInt<1>("h00"), _T_353) @[Misc.scala 73:9]
    node _T_357 = mux(_T_355, UInt<2>("h02"), _T_354) @[Misc.scala 73:36]
    node _T_358 = eq(_T_335, _T_265) @[Misc.scala 87:20]
    node _T_359 = mux(_T_358, UInt<1>("h00"), _T_356) @[Misc.scala 73:9]
    node _T_360 = mux(_T_358, UInt<2>("h01"), _T_357) @[Misc.scala 73:36]
    node _T_361 = eq(_T_328, _T_265) @[Misc.scala 87:20]
    node _T_362 = mux(_T_361, UInt<1>("h00"), _T_359) @[Misc.scala 73:9]
    node _T_363 = mux(_T_361, UInt<2>("h02"), _T_360) @[Misc.scala 73:36]
    node _T_364 = eq(_T_321, _T_265) @[Misc.scala 87:20]
    node _T_365 = mux(_T_364, UInt<1>("h00"), _T_362) @[Misc.scala 73:9]
    node _T_366 = mux(_T_364, UInt<2>("h00"), _T_363) @[Misc.scala 73:36]
    node _T_367 = eq(_T_314, _T_265) @[Misc.scala 87:20]
    node _T_368 = mux(_T_367, UInt<1>("h01"), _T_365) @[Misc.scala 73:9]
    node _T_369 = mux(_T_367, UInt<2>("h03"), _T_366) @[Misc.scala 73:36]
    node _T_370 = eq(_T_307, _T_265) @[Misc.scala 87:20]
    node _T_371 = mux(_T_370, UInt<1>("h01"), _T_368) @[Misc.scala 73:9]
    node _T_372 = mux(_T_370, UInt<2>("h03"), _T_369) @[Misc.scala 73:36]
    node _T_373 = eq(_T_300, _T_265) @[Misc.scala 87:20]
    node _T_374 = mux(_T_373, UInt<1>("h01"), _T_371) @[Misc.scala 73:9]
    node _T_375 = mux(_T_373, UInt<2>("h02"), _T_372) @[Misc.scala 73:36]
    node _T_376 = eq(_T_293, _T_265) @[Misc.scala 87:20]
    node _T_377 = mux(_T_376, UInt<1>("h01"), _T_374) @[Misc.scala 73:9]
    node _T_378 = mux(_T_376, UInt<2>("h03"), _T_375) @[Misc.scala 73:36]
    node _T_379 = eq(_T_286, _T_265) @[Misc.scala 87:20]
    node _T_380 = mux(_T_379, UInt<1>("h01"), _T_377) @[Misc.scala 73:9]
    node _T_381 = mux(_T_379, UInt<2>("h01"), _T_378) @[Misc.scala 73:36]
    node _T_382 = eq(_T_279, _T_265) @[Misc.scala 87:20]
    node _T_383 = mux(_T_382, UInt<1>("h01"), _T_380) @[Misc.scala 73:9]
    node _T_384 = mux(_T_382, UInt<2>("h02"), _T_381) @[Misc.scala 73:36]
    node _T_385 = eq(_T_272, _T_265) @[Misc.scala 87:20]
    node _T_386 = mux(_T_385, UInt<1>("h01"), _T_383) @[Misc.scala 73:9]
    node grow_param = mux(_T_385, UInt<2>("h03"), _T_384) @[Misc.scala 73:36]
    wire _T_388 : {state : UInt<2>} @[Metadata.scala 160:20]
    _T_388 is invalid @[Metadata.scala 160:20]
    _T_388.state <= grow_param @[Metadata.scala 161:16]
    node _T_390 = eq(req.cmd, UInt<1>("h01")) @[Consts.scala 94:32]
    node _T_392 = eq(req.cmd, UInt<5>("h011")) @[Consts.scala 94:49]
    node _T_393 = or(_T_390, _T_392) @[Consts.scala 94:42]
    node _T_395 = eq(req.cmd, UInt<3>("h07")) @[Consts.scala 94:66]
    node _T_396 = or(_T_393, _T_395) @[Consts.scala 94:59]
    node _T_401 = eq(req.cmd, UInt<3>("h04")) @[package.scala 14:47]
    node _T_402 = eq(req.cmd, UInt<4>("h09")) @[package.scala 14:47]
    node _T_403 = eq(req.cmd, UInt<4>("h0a")) @[package.scala 14:47]
    node _T_404 = eq(req.cmd, UInt<4>("h0b")) @[package.scala 14:47]
    node _T_405 = or(_T_401, _T_402) @[package.scala 14:62]
    node _T_406 = or(_T_405, _T_403) @[package.scala 14:62]
    node _T_407 = or(_T_406, _T_404) @[package.scala 14:62]
    node _T_413 = eq(req.cmd, UInt<4>("h08")) @[package.scala 14:47]
    node _T_414 = eq(req.cmd, UInt<4>("h0c")) @[package.scala 14:47]
    node _T_415 = eq(req.cmd, UInt<4>("h0d")) @[package.scala 14:47]
    node _T_416 = eq(req.cmd, UInt<4>("h0e")) @[package.scala 14:47]
    node _T_417 = eq(req.cmd, UInt<4>("h0f")) @[package.scala 14:47]
    node _T_418 = or(_T_413, _T_414) @[package.scala 14:62]
    node _T_419 = or(_T_418, _T_415) @[package.scala 14:62]
    node _T_420 = or(_T_419, _T_416) @[package.scala 14:62]
    node _T_421 = or(_T_420, _T_417) @[package.scala 14:62]
    node _T_422 = or(_T_407, _T_421) @[Consts.scala 91:44]
    node _T_423 = or(_T_396, _T_422) @[Consts.scala 94:76]
    node _T_425 = eq(req.cmd, UInt<1>("h01")) @[Consts.scala 94:32]
    node _T_427 = eq(req.cmd, UInt<5>("h011")) @[Consts.scala 94:49]
    node _T_428 = or(_T_425, _T_427) @[Consts.scala 94:42]
    node _T_430 = eq(req.cmd, UInt<3>("h07")) @[Consts.scala 94:66]
    node _T_431 = or(_T_428, _T_430) @[Consts.scala 94:59]
    node _T_436 = eq(req.cmd, UInt<3>("h04")) @[package.scala 14:47]
    node _T_437 = eq(req.cmd, UInt<4>("h09")) @[package.scala 14:47]
    node _T_438 = eq(req.cmd, UInt<4>("h0a")) @[package.scala 14:47]
    node _T_439 = eq(req.cmd, UInt<4>("h0b")) @[package.scala 14:47]
    node _T_440 = or(_T_436, _T_437) @[package.scala 14:62]
    node _T_441 = or(_T_440, _T_438) @[package.scala 14:62]
    node _T_442 = or(_T_441, _T_439) @[package.scala 14:62]
    node _T_448 = eq(req.cmd, UInt<4>("h08")) @[package.scala 14:47]
    node _T_449 = eq(req.cmd, UInt<4>("h0c")) @[package.scala 14:47]
    node _T_450 = eq(req.cmd, UInt<4>("h0d")) @[package.scala 14:47]
    node _T_451 = eq(req.cmd, UInt<4>("h0e")) @[package.scala 14:47]
    node _T_452 = eq(req.cmd, UInt<4>("h0f")) @[package.scala 14:47]
    node _T_453 = or(_T_448, _T_449) @[package.scala 14:62]
    node _T_454 = or(_T_453, _T_450) @[package.scala 14:62]
    node _T_455 = or(_T_454, _T_451) @[package.scala 14:62]
    node _T_456 = or(_T_455, _T_452) @[package.scala 14:62]
    node _T_457 = or(_T_442, _T_456) @[Consts.scala 91:44]
    node _T_458 = or(_T_431, _T_457) @[Consts.scala 94:76]
    node _T_460 = eq(req.cmd, UInt<2>("h03")) @[Consts.scala 95:54]
    node _T_461 = or(_T_458, _T_460) @[Consts.scala 95:47]
    node _T_463 = eq(req.cmd, UInt<3>("h06")) @[Consts.scala 95:71]
    node _T_464 = or(_T_461, _T_463) @[Consts.scala 95:64]
    node _T_465 = cat(_T_423, _T_464) @[Cat.scala 30:58]
    node _T_466 = cat(_T_465, io.mem_grant.bits.param) @[Cat.scala 30:58]
    node _T_470 = cat(UInt<1>("h00"), UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_472 = cat(_T_470, UInt<2>("h01")) @[Cat.scala 30:58]
    node _T_476 = cat(UInt<1>("h00"), UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_478 = cat(_T_476, UInt<2>("h00")) @[Cat.scala 30:58]
    node _T_482 = cat(UInt<1>("h00"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_484 = cat(_T_482, UInt<2>("h00")) @[Cat.scala 30:58]
    node _T_488 = cat(UInt<1>("h01"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_490 = cat(_T_488, UInt<2>("h00")) @[Cat.scala 30:58]
    node _T_492 = eq(_T_490, _T_466) @[Mux.scala 46:19]
    node _T_493 = mux(_T_492, UInt<2>("h03"), UInt<2>("h00")) @[Mux.scala 46:16]
    node _T_494 = eq(_T_484, _T_466) @[Mux.scala 46:19]
    node _T_495 = mux(_T_494, UInt<2>("h02"), _T_493) @[Mux.scala 46:16]
    node _T_496 = eq(_T_478, _T_466) @[Mux.scala 46:19]
    node _T_497 = mux(_T_496, UInt<2>("h02"), _T_495) @[Mux.scala 46:16]
    node _T_498 = eq(_T_472, _T_466) @[Mux.scala 46:19]
    node _T_499 = mux(_T_498, UInt<2>("h01"), _T_497) @[Mux.scala 46:16]
    wire coh_on_grant : {state : UInt<2>} @[Metadata.scala 160:20]
    coh_on_grant is invalid @[Metadata.scala 160:20]
    coh_on_grant.state <= _T_499 @[Metadata.scala 161:16]
    node _T_502 = eq(req.cmd, UInt<1>("h01")) @[Consts.scala 94:32]
    node _T_504 = eq(req.cmd, UInt<5>("h011")) @[Consts.scala 94:49]
    node _T_505 = or(_T_502, _T_504) @[Consts.scala 94:42]
    node _T_507 = eq(req.cmd, UInt<3>("h07")) @[Consts.scala 94:66]
    node _T_508 = or(_T_505, _T_507) @[Consts.scala 94:59]
    node _T_513 = eq(req.cmd, UInt<3>("h04")) @[package.scala 14:47]
    node _T_514 = eq(req.cmd, UInt<4>("h09")) @[package.scala 14:47]
    node _T_515 = eq(req.cmd, UInt<4>("h0a")) @[package.scala 14:47]
    node _T_516 = eq(req.cmd, UInt<4>("h0b")) @[package.scala 14:47]
    node _T_517 = or(_T_513, _T_514) @[package.scala 14:62]
    node _T_518 = or(_T_517, _T_515) @[package.scala 14:62]
    node _T_519 = or(_T_518, _T_516) @[package.scala 14:62]
    node _T_525 = eq(req.cmd, UInt<4>("h08")) @[package.scala 14:47]
    node _T_526 = eq(req.cmd, UInt<4>("h0c")) @[package.scala 14:47]
    node _T_527 = eq(req.cmd, UInt<4>("h0d")) @[package.scala 14:47]
    node _T_528 = eq(req.cmd, UInt<4>("h0e")) @[package.scala 14:47]
    node _T_529 = eq(req.cmd, UInt<4>("h0f")) @[package.scala 14:47]
    node _T_530 = or(_T_525, _T_526) @[package.scala 14:62]
    node _T_531 = or(_T_530, _T_527) @[package.scala 14:62]
    node _T_532 = or(_T_531, _T_528) @[package.scala 14:62]
    node _T_533 = or(_T_532, _T_529) @[package.scala 14:62]
    node _T_534 = or(_T_519, _T_533) @[Consts.scala 91:44]
    node _T_535 = or(_T_508, _T_534) @[Consts.scala 94:76]
    node _T_537 = eq(req.cmd, UInt<1>("h01")) @[Consts.scala 94:32]
    node _T_539 = eq(req.cmd, UInt<5>("h011")) @[Consts.scala 94:49]
    node _T_540 = or(_T_537, _T_539) @[Consts.scala 94:42]
    node _T_542 = eq(req.cmd, UInt<3>("h07")) @[Consts.scala 94:66]
    node _T_543 = or(_T_540, _T_542) @[Consts.scala 94:59]
    node _T_548 = eq(req.cmd, UInt<3>("h04")) @[package.scala 14:47]
    node _T_549 = eq(req.cmd, UInt<4>("h09")) @[package.scala 14:47]
    node _T_550 = eq(req.cmd, UInt<4>("h0a")) @[package.scala 14:47]
    node _T_551 = eq(req.cmd, UInt<4>("h0b")) @[package.scala 14:47]
    node _T_552 = or(_T_548, _T_549) @[package.scala 14:62]
    node _T_553 = or(_T_552, _T_550) @[package.scala 14:62]
    node _T_554 = or(_T_553, _T_551) @[package.scala 14:62]
    node _T_560 = eq(req.cmd, UInt<4>("h08")) @[package.scala 14:47]
    node _T_561 = eq(req.cmd, UInt<4>("h0c")) @[package.scala 14:47]
    node _T_562 = eq(req.cmd, UInt<4>("h0d")) @[package.scala 14:47]
    node _T_563 = eq(req.cmd, UInt<4>("h0e")) @[package.scala 14:47]
    node _T_564 = eq(req.cmd, UInt<4>("h0f")) @[package.scala 14:47]
    node _T_565 = or(_T_560, _T_561) @[package.scala 14:62]
    node _T_566 = or(_T_565, _T_562) @[package.scala 14:62]
    node _T_567 = or(_T_566, _T_563) @[package.scala 14:62]
    node _T_568 = or(_T_567, _T_564) @[package.scala 14:62]
    node _T_569 = or(_T_554, _T_568) @[Consts.scala 91:44]
    node _T_570 = or(_T_543, _T_569) @[Consts.scala 94:76]
    node _T_572 = eq(req.cmd, UInt<2>("h03")) @[Consts.scala 95:54]
    node _T_573 = or(_T_570, _T_572) @[Consts.scala 95:47]
    node _T_575 = eq(req.cmd, UInt<3>("h06")) @[Consts.scala 95:71]
    node _T_576 = or(_T_573, _T_575) @[Consts.scala 95:64]
    node _T_577 = cat(_T_535, _T_576) @[Cat.scala 30:58]
    node _T_578 = cat(_T_577, new_coh.state) @[Cat.scala 30:58]
    node _T_583 = cat(UInt<1>("h00"), UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_585 = cat(_T_583, UInt<2>("h03")) @[Cat.scala 30:58]
    node _T_590 = cat(UInt<1>("h00"), UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_592 = cat(_T_590, UInt<2>("h02")) @[Cat.scala 30:58]
    node _T_597 = cat(UInt<1>("h00"), UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_599 = cat(_T_597, UInt<2>("h01")) @[Cat.scala 30:58]
    node _T_604 = cat(UInt<1>("h00"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_606 = cat(_T_604, UInt<2>("h03")) @[Cat.scala 30:58]
    node _T_611 = cat(UInt<1>("h00"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_613 = cat(_T_611, UInt<2>("h02")) @[Cat.scala 30:58]
    node _T_618 = cat(UInt<1>("h01"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_620 = cat(_T_618, UInt<2>("h03")) @[Cat.scala 30:58]
    node _T_625 = cat(UInt<1>("h01"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_627 = cat(_T_625, UInt<2>("h02")) @[Cat.scala 30:58]
    node _T_632 = cat(UInt<1>("h00"), UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_634 = cat(_T_632, UInt<2>("h00")) @[Cat.scala 30:58]
    node _T_639 = cat(UInt<1>("h00"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_641 = cat(_T_639, UInt<2>("h01")) @[Cat.scala 30:58]
    node _T_646 = cat(UInt<1>("h00"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_648 = cat(_T_646, UInt<2>("h00")) @[Cat.scala 30:58]
    node _T_653 = cat(UInt<1>("h01"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_655 = cat(_T_653, UInt<2>("h01")) @[Cat.scala 30:58]
    node _T_660 = cat(UInt<1>("h01"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_662 = cat(_T_660, UInt<2>("h00")) @[Cat.scala 30:58]
    node _T_665 = eq(_T_662, _T_578) @[Misc.scala 87:20]
    node _T_666 = mux(_T_665, UInt<1>("h00"), UInt<1>("h00")) @[Misc.scala 73:9]
    node _T_667 = mux(_T_665, UInt<2>("h01"), UInt<1>("h00")) @[Misc.scala 73:36]
    node _T_668 = eq(_T_655, _T_578) @[Misc.scala 87:20]
    node _T_669 = mux(_T_668, UInt<1>("h00"), _T_666) @[Misc.scala 73:9]
    node _T_670 = mux(_T_668, UInt<2>("h02"), _T_667) @[Misc.scala 73:36]
    node _T_671 = eq(_T_648, _T_578) @[Misc.scala 87:20]
    node _T_672 = mux(_T_671, UInt<1>("h00"), _T_669) @[Misc.scala 73:9]
    node _T_673 = mux(_T_671, UInt<2>("h01"), _T_670) @[Misc.scala 73:36]
    node _T_674 = eq(_T_641, _T_578) @[Misc.scala 87:20]
    node _T_675 = mux(_T_674, UInt<1>("h00"), _T_672) @[Misc.scala 73:9]
    node _T_676 = mux(_T_674, UInt<2>("h02"), _T_673) @[Misc.scala 73:36]
    node _T_677 = eq(_T_634, _T_578) @[Misc.scala 87:20]
    node _T_678 = mux(_T_677, UInt<1>("h00"), _T_675) @[Misc.scala 73:9]
    node _T_679 = mux(_T_677, UInt<2>("h00"), _T_676) @[Misc.scala 73:36]
    node _T_680 = eq(_T_627, _T_578) @[Misc.scala 87:20]
    node _T_681 = mux(_T_680, UInt<1>("h01"), _T_678) @[Misc.scala 73:9]
    node _T_682 = mux(_T_680, UInt<2>("h03"), _T_679) @[Misc.scala 73:36]
    node _T_683 = eq(_T_620, _T_578) @[Misc.scala 87:20]
    node _T_684 = mux(_T_683, UInt<1>("h01"), _T_681) @[Misc.scala 73:9]
    node _T_685 = mux(_T_683, UInt<2>("h03"), _T_682) @[Misc.scala 73:36]
    node _T_686 = eq(_T_613, _T_578) @[Misc.scala 87:20]
    node _T_687 = mux(_T_686, UInt<1>("h01"), _T_684) @[Misc.scala 73:9]
    node _T_688 = mux(_T_686, UInt<2>("h02"), _T_685) @[Misc.scala 73:36]
    node _T_689 = eq(_T_606, _T_578) @[Misc.scala 87:20]
    node _T_690 = mux(_T_689, UInt<1>("h01"), _T_687) @[Misc.scala 73:9]
    node _T_691 = mux(_T_689, UInt<2>("h03"), _T_688) @[Misc.scala 73:36]
    node _T_692 = eq(_T_599, _T_578) @[Misc.scala 87:20]
    node _T_693 = mux(_T_692, UInt<1>("h01"), _T_690) @[Misc.scala 73:9]
    node _T_694 = mux(_T_692, UInt<2>("h01"), _T_691) @[Misc.scala 73:36]
    node _T_695 = eq(_T_592, _T_578) @[Misc.scala 87:20]
    node _T_696 = mux(_T_695, UInt<1>("h01"), _T_693) @[Misc.scala 73:9]
    node _T_697 = mux(_T_695, UInt<2>("h02"), _T_694) @[Misc.scala 73:36]
    node _T_698 = eq(_T_585, _T_578) @[Misc.scala 87:20]
    node _T_699 = mux(_T_698, UInt<1>("h01"), _T_696) @[Misc.scala 73:9]
    node _T_700 = mux(_T_698, UInt<2>("h03"), _T_697) @[Misc.scala 73:36]
    node _T_702 = eq(io.req_bits.cmd, UInt<1>("h01")) @[Consts.scala 94:32]
    node _T_704 = eq(io.req_bits.cmd, UInt<5>("h011")) @[Consts.scala 94:49]
    node _T_705 = or(_T_702, _T_704) @[Consts.scala 94:42]
    node _T_707 = eq(io.req_bits.cmd, UInt<3>("h07")) @[Consts.scala 94:66]
    node _T_708 = or(_T_705, _T_707) @[Consts.scala 94:59]
    node _T_713 = eq(io.req_bits.cmd, UInt<3>("h04")) @[package.scala 14:47]
    node _T_714 = eq(io.req_bits.cmd, UInt<4>("h09")) @[package.scala 14:47]
    node _T_715 = eq(io.req_bits.cmd, UInt<4>("h0a")) @[package.scala 14:47]
    node _T_716 = eq(io.req_bits.cmd, UInt<4>("h0b")) @[package.scala 14:47]
    node _T_717 = or(_T_713, _T_714) @[package.scala 14:62]
    node _T_718 = or(_T_717, _T_715) @[package.scala 14:62]
    node _T_719 = or(_T_718, _T_716) @[package.scala 14:62]
    node _T_725 = eq(io.req_bits.cmd, UInt<4>("h08")) @[package.scala 14:47]
    node _T_726 = eq(io.req_bits.cmd, UInt<4>("h0c")) @[package.scala 14:47]
    node _T_727 = eq(io.req_bits.cmd, UInt<4>("h0d")) @[package.scala 14:47]
    node _T_728 = eq(io.req_bits.cmd, UInt<4>("h0e")) @[package.scala 14:47]
    node _T_729 = eq(io.req_bits.cmd, UInt<4>("h0f")) @[package.scala 14:47]
    node _T_730 = or(_T_725, _T_726) @[package.scala 14:62]
    node _T_731 = or(_T_730, _T_727) @[package.scala 14:62]
    node _T_732 = or(_T_731, _T_728) @[package.scala 14:62]
    node _T_733 = or(_T_732, _T_729) @[package.scala 14:62]
    node _T_734 = or(_T_719, _T_733) @[Consts.scala 91:44]
    node _T_735 = or(_T_708, _T_734) @[Consts.scala 94:76]
    node _T_737 = eq(io.req_bits.cmd, UInt<1>("h01")) @[Consts.scala 94:32]
    node _T_739 = eq(io.req_bits.cmd, UInt<5>("h011")) @[Consts.scala 94:49]
    node _T_740 = or(_T_737, _T_739) @[Consts.scala 94:42]
    node _T_742 = eq(io.req_bits.cmd, UInt<3>("h07")) @[Consts.scala 94:66]
    node _T_743 = or(_T_740, _T_742) @[Consts.scala 94:59]
    node _T_748 = eq(io.req_bits.cmd, UInt<3>("h04")) @[package.scala 14:47]
    node _T_749 = eq(io.req_bits.cmd, UInt<4>("h09")) @[package.scala 14:47]
    node _T_750 = eq(io.req_bits.cmd, UInt<4>("h0a")) @[package.scala 14:47]
    node _T_751 = eq(io.req_bits.cmd, UInt<4>("h0b")) @[package.scala 14:47]
    node _T_752 = or(_T_748, _T_749) @[package.scala 14:62]
    node _T_753 = or(_T_752, _T_750) @[package.scala 14:62]
    node _T_754 = or(_T_753, _T_751) @[package.scala 14:62]
    node _T_760 = eq(io.req_bits.cmd, UInt<4>("h08")) @[package.scala 14:47]
    node _T_761 = eq(io.req_bits.cmd, UInt<4>("h0c")) @[package.scala 14:47]
    node _T_762 = eq(io.req_bits.cmd, UInt<4>("h0d")) @[package.scala 14:47]
    node _T_763 = eq(io.req_bits.cmd, UInt<4>("h0e")) @[package.scala 14:47]
    node _T_764 = eq(io.req_bits.cmd, UInt<4>("h0f")) @[package.scala 14:47]
    node _T_765 = or(_T_760, _T_761) @[package.scala 14:62]
    node _T_766 = or(_T_765, _T_762) @[package.scala 14:62]
    node _T_767 = or(_T_766, _T_763) @[package.scala 14:62]
    node _T_768 = or(_T_767, _T_764) @[package.scala 14:62]
    node _T_769 = or(_T_754, _T_768) @[Consts.scala 91:44]
    node _T_770 = or(_T_743, _T_769) @[Consts.scala 94:76]
    node _T_772 = eq(io.req_bits.cmd, UInt<2>("h03")) @[Consts.scala 95:54]
    node _T_773 = or(_T_770, _T_772) @[Consts.scala 95:47]
    node _T_775 = eq(io.req_bits.cmd, UInt<3>("h06")) @[Consts.scala 95:71]
    node _T_776 = or(_T_773, _T_775) @[Consts.scala 95:64]
    node _T_777 = cat(_T_735, _T_776) @[Cat.scala 30:58]
    node _T_778 = cat(_T_777, new_coh.state) @[Cat.scala 30:58]
    node _T_783 = cat(UInt<1>("h00"), UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_785 = cat(_T_783, UInt<2>("h03")) @[Cat.scala 30:58]
    node _T_790 = cat(UInt<1>("h00"), UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_792 = cat(_T_790, UInt<2>("h02")) @[Cat.scala 30:58]
    node _T_797 = cat(UInt<1>("h00"), UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_799 = cat(_T_797, UInt<2>("h01")) @[Cat.scala 30:58]
    node _T_804 = cat(UInt<1>("h00"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_806 = cat(_T_804, UInt<2>("h03")) @[Cat.scala 30:58]
    node _T_811 = cat(UInt<1>("h00"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_813 = cat(_T_811, UInt<2>("h02")) @[Cat.scala 30:58]
    node _T_818 = cat(UInt<1>("h01"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_820 = cat(_T_818, UInt<2>("h03")) @[Cat.scala 30:58]
    node _T_825 = cat(UInt<1>("h01"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_827 = cat(_T_825, UInt<2>("h02")) @[Cat.scala 30:58]
    node _T_832 = cat(UInt<1>("h00"), UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_834 = cat(_T_832, UInt<2>("h00")) @[Cat.scala 30:58]
    node _T_839 = cat(UInt<1>("h00"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_841 = cat(_T_839, UInt<2>("h01")) @[Cat.scala 30:58]
    node _T_846 = cat(UInt<1>("h00"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_848 = cat(_T_846, UInt<2>("h00")) @[Cat.scala 30:58]
    node _T_853 = cat(UInt<1>("h01"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_855 = cat(_T_853, UInt<2>("h01")) @[Cat.scala 30:58]
    node _T_860 = cat(UInt<1>("h01"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_862 = cat(_T_860, UInt<2>("h00")) @[Cat.scala 30:58]
    node _T_865 = eq(_T_862, _T_778) @[Misc.scala 87:20]
    node _T_866 = mux(_T_865, UInt<1>("h00"), UInt<1>("h00")) @[Misc.scala 73:9]
    node _T_867 = mux(_T_865, UInt<2>("h01"), UInt<1>("h00")) @[Misc.scala 73:36]
    node _T_868 = eq(_T_855, _T_778) @[Misc.scala 87:20]
    node _T_869 = mux(_T_868, UInt<1>("h00"), _T_866) @[Misc.scala 73:9]
    node _T_870 = mux(_T_868, UInt<2>("h02"), _T_867) @[Misc.scala 73:36]
    node _T_871 = eq(_T_848, _T_778) @[Misc.scala 87:20]
    node _T_872 = mux(_T_871, UInt<1>("h00"), _T_869) @[Misc.scala 73:9]
    node _T_873 = mux(_T_871, UInt<2>("h01"), _T_870) @[Misc.scala 73:36]
    node _T_874 = eq(_T_841, _T_778) @[Misc.scala 87:20]
    node _T_875 = mux(_T_874, UInt<1>("h00"), _T_872) @[Misc.scala 73:9]
    node _T_876 = mux(_T_874, UInt<2>("h02"), _T_873) @[Misc.scala 73:36]
    node _T_877 = eq(_T_834, _T_778) @[Misc.scala 87:20]
    node _T_878 = mux(_T_877, UInt<1>("h00"), _T_875) @[Misc.scala 73:9]
    node _T_879 = mux(_T_877, UInt<2>("h00"), _T_876) @[Misc.scala 73:36]
    node _T_880 = eq(_T_827, _T_778) @[Misc.scala 87:20]
    node _T_881 = mux(_T_880, UInt<1>("h01"), _T_878) @[Misc.scala 73:9]
    node _T_882 = mux(_T_880, UInt<2>("h03"), _T_879) @[Misc.scala 73:36]
    node _T_883 = eq(_T_820, _T_778) @[Misc.scala 87:20]
    node _T_884 = mux(_T_883, UInt<1>("h01"), _T_881) @[Misc.scala 73:9]
    node _T_885 = mux(_T_883, UInt<2>("h03"), _T_882) @[Misc.scala 73:36]
    node _T_886 = eq(_T_813, _T_778) @[Misc.scala 87:20]
    node _T_887 = mux(_T_886, UInt<1>("h01"), _T_884) @[Misc.scala 73:9]
    node _T_888 = mux(_T_886, UInt<2>("h02"), _T_885) @[Misc.scala 73:36]
    node _T_889 = eq(_T_806, _T_778) @[Misc.scala 87:20]
    node _T_890 = mux(_T_889, UInt<1>("h01"), _T_887) @[Misc.scala 73:9]
    node _T_891 = mux(_T_889, UInt<2>("h03"), _T_888) @[Misc.scala 73:36]
    node _T_892 = eq(_T_799, _T_778) @[Misc.scala 87:20]
    node _T_893 = mux(_T_892, UInt<1>("h01"), _T_890) @[Misc.scala 73:9]
    node _T_894 = mux(_T_892, UInt<2>("h01"), _T_891) @[Misc.scala 73:36]
    node _T_895 = eq(_T_792, _T_778) @[Misc.scala 87:20]
    node _T_896 = mux(_T_895, UInt<1>("h01"), _T_893) @[Misc.scala 73:9]
    node _T_897 = mux(_T_895, UInt<2>("h02"), _T_894) @[Misc.scala 73:36]
    node _T_898 = eq(_T_785, _T_778) @[Misc.scala 87:20]
    node _T_899 = mux(_T_898, UInt<1>("h01"), _T_896) @[Misc.scala 73:9]
    node _T_900 = mux(_T_898, UInt<2>("h03"), _T_897) @[Misc.scala 73:36]
    node _T_902 = eq(io.req_bits.cmd, UInt<1>("h01")) @[Consts.scala 94:32]
    node _T_904 = eq(io.req_bits.cmd, UInt<5>("h011")) @[Consts.scala 94:49]
    node _T_905 = or(_T_902, _T_904) @[Consts.scala 94:42]
    node _T_907 = eq(io.req_bits.cmd, UInt<3>("h07")) @[Consts.scala 94:66]
    node _T_908 = or(_T_905, _T_907) @[Consts.scala 94:59]
    node _T_913 = eq(io.req_bits.cmd, UInt<3>("h04")) @[package.scala 14:47]
    node _T_914 = eq(io.req_bits.cmd, UInt<4>("h09")) @[package.scala 14:47]
    node _T_915 = eq(io.req_bits.cmd, UInt<4>("h0a")) @[package.scala 14:47]
    node _T_916 = eq(io.req_bits.cmd, UInt<4>("h0b")) @[package.scala 14:47]
    node _T_917 = or(_T_913, _T_914) @[package.scala 14:62]
    node _T_918 = or(_T_917, _T_915) @[package.scala 14:62]
    node _T_919 = or(_T_918, _T_916) @[package.scala 14:62]
    node _T_925 = eq(io.req_bits.cmd, UInt<4>("h08")) @[package.scala 14:47]
    node _T_926 = eq(io.req_bits.cmd, UInt<4>("h0c")) @[package.scala 14:47]
    node _T_927 = eq(io.req_bits.cmd, UInt<4>("h0d")) @[package.scala 14:47]
    node _T_928 = eq(io.req_bits.cmd, UInt<4>("h0e")) @[package.scala 14:47]
    node _T_929 = eq(io.req_bits.cmd, UInt<4>("h0f")) @[package.scala 14:47]
    node _T_930 = or(_T_925, _T_926) @[package.scala 14:62]
    node _T_931 = or(_T_930, _T_927) @[package.scala 14:62]
    node _T_932 = or(_T_931, _T_928) @[package.scala 14:62]
    node _T_933 = or(_T_932, _T_929) @[package.scala 14:62]
    node _T_934 = or(_T_919, _T_933) @[Consts.scala 91:44]
    node _T_935 = or(_T_908, _T_934) @[Consts.scala 94:76]
    node _T_937 = eq(io.req_bits.cmd, UInt<2>("h03")) @[Consts.scala 95:54]
    node _T_938 = or(_T_935, _T_937) @[Consts.scala 95:47]
    node _T_940 = eq(io.req_bits.cmd, UInt<3>("h06")) @[Consts.scala 95:71]
    node _T_941 = or(_T_938, _T_940) @[Consts.scala 95:64]
    node _T_943 = eq(req.cmd, UInt<1>("h01")) @[Consts.scala 94:32]
    node _T_945 = eq(req.cmd, UInt<5>("h011")) @[Consts.scala 94:49]
    node _T_946 = or(_T_943, _T_945) @[Consts.scala 94:42]
    node _T_948 = eq(req.cmd, UInt<3>("h07")) @[Consts.scala 94:66]
    node _T_949 = or(_T_946, _T_948) @[Consts.scala 94:59]
    node _T_954 = eq(req.cmd, UInt<3>("h04")) @[package.scala 14:47]
    node _T_955 = eq(req.cmd, UInt<4>("h09")) @[package.scala 14:47]
    node _T_956 = eq(req.cmd, UInt<4>("h0a")) @[package.scala 14:47]
    node _T_957 = eq(req.cmd, UInt<4>("h0b")) @[package.scala 14:47]
    node _T_958 = or(_T_954, _T_955) @[package.scala 14:62]
    node _T_959 = or(_T_958, _T_956) @[package.scala 14:62]
    node _T_960 = or(_T_959, _T_957) @[package.scala 14:62]
    node _T_966 = eq(req.cmd, UInt<4>("h08")) @[package.scala 14:47]
    node _T_967 = eq(req.cmd, UInt<4>("h0c")) @[package.scala 14:47]
    node _T_968 = eq(req.cmd, UInt<4>("h0d")) @[package.scala 14:47]
    node _T_969 = eq(req.cmd, UInt<4>("h0e")) @[package.scala 14:47]
    node _T_970 = eq(req.cmd, UInt<4>("h0f")) @[package.scala 14:47]
    node _T_971 = or(_T_966, _T_967) @[package.scala 14:62]
    node _T_972 = or(_T_971, _T_968) @[package.scala 14:62]
    node _T_973 = or(_T_972, _T_969) @[package.scala 14:62]
    node _T_974 = or(_T_973, _T_970) @[package.scala 14:62]
    node _T_975 = or(_T_960, _T_974) @[Consts.scala 91:44]
    node _T_976 = or(_T_949, _T_975) @[Consts.scala 94:76]
    node _T_978 = eq(req.cmd, UInt<2>("h03")) @[Consts.scala 95:54]
    node _T_979 = or(_T_976, _T_978) @[Consts.scala 95:47]
    node _T_981 = eq(req.cmd, UInt<3>("h06")) @[Consts.scala 95:71]
    node _T_982 = or(_T_979, _T_981) @[Consts.scala 95:64]
    node _T_984 = eq(_T_982, UInt<1>("h00")) @[Metadata.scala 104:57]
    node cmd_requires_second_acquire = and(_T_941, _T_984) @[Metadata.scala 104:54]
    node is_hit_again = and(_T_699, _T_899) @[Metadata.scala 105:27]
    node _T_986 = eq(io.req_bits.cmd, UInt<1>("h01")) @[Consts.scala 94:32]
    node _T_988 = eq(io.req_bits.cmd, UInt<5>("h011")) @[Consts.scala 94:49]
    node _T_989 = or(_T_986, _T_988) @[Consts.scala 94:42]
    node _T_991 = eq(io.req_bits.cmd, UInt<3>("h07")) @[Consts.scala 94:66]
    node _T_992 = or(_T_989, _T_991) @[Consts.scala 94:59]
    node _T_997 = eq(io.req_bits.cmd, UInt<3>("h04")) @[package.scala 14:47]
    node _T_998 = eq(io.req_bits.cmd, UInt<4>("h09")) @[package.scala 14:47]
    node _T_999 = eq(io.req_bits.cmd, UInt<4>("h0a")) @[package.scala 14:47]
    node _T_1000 = eq(io.req_bits.cmd, UInt<4>("h0b")) @[package.scala 14:47]
    node _T_1001 = or(_T_997, _T_998) @[package.scala 14:62]
    node _T_1002 = or(_T_1001, _T_999) @[package.scala 14:62]
    node _T_1003 = or(_T_1002, _T_1000) @[package.scala 14:62]
    node _T_1009 = eq(io.req_bits.cmd, UInt<4>("h08")) @[package.scala 14:47]
    node _T_1010 = eq(io.req_bits.cmd, UInt<4>("h0c")) @[package.scala 14:47]
    node _T_1011 = eq(io.req_bits.cmd, UInt<4>("h0d")) @[package.scala 14:47]
    node _T_1012 = eq(io.req_bits.cmd, UInt<4>("h0e")) @[package.scala 14:47]
    node _T_1013 = eq(io.req_bits.cmd, UInt<4>("h0f")) @[package.scala 14:47]
    node _T_1014 = or(_T_1009, _T_1010) @[package.scala 14:62]
    node _T_1015 = or(_T_1014, _T_1011) @[package.scala 14:62]
    node _T_1016 = or(_T_1015, _T_1012) @[package.scala 14:62]
    node _T_1017 = or(_T_1016, _T_1013) @[package.scala 14:62]
    node _T_1018 = or(_T_1003, _T_1017) @[Consts.scala 91:44]
    node _T_1019 = or(_T_992, _T_1018) @[Consts.scala 94:76]
    node _T_1021 = eq(io.req_bits.cmd, UInt<1>("h01")) @[Consts.scala 94:32]
    node _T_1023 = eq(io.req_bits.cmd, UInt<5>("h011")) @[Consts.scala 94:49]
    node _T_1024 = or(_T_1021, _T_1023) @[Consts.scala 94:42]
    node _T_1026 = eq(io.req_bits.cmd, UInt<3>("h07")) @[Consts.scala 94:66]
    node _T_1027 = or(_T_1024, _T_1026) @[Consts.scala 94:59]
    node _T_1032 = eq(io.req_bits.cmd, UInt<3>("h04")) @[package.scala 14:47]
    node _T_1033 = eq(io.req_bits.cmd, UInt<4>("h09")) @[package.scala 14:47]
    node _T_1034 = eq(io.req_bits.cmd, UInt<4>("h0a")) @[package.scala 14:47]
    node _T_1035 = eq(io.req_bits.cmd, UInt<4>("h0b")) @[package.scala 14:47]
    node _T_1036 = or(_T_1032, _T_1033) @[package.scala 14:62]
    node _T_1037 = or(_T_1036, _T_1034) @[package.scala 14:62]
    node _T_1038 = or(_T_1037, _T_1035) @[package.scala 14:62]
    node _T_1044 = eq(io.req_bits.cmd, UInt<4>("h08")) @[package.scala 14:47]
    node _T_1045 = eq(io.req_bits.cmd, UInt<4>("h0c")) @[package.scala 14:47]
    node _T_1046 = eq(io.req_bits.cmd, UInt<4>("h0d")) @[package.scala 14:47]
    node _T_1047 = eq(io.req_bits.cmd, UInt<4>("h0e")) @[package.scala 14:47]
    node _T_1048 = eq(io.req_bits.cmd, UInt<4>("h0f")) @[package.scala 14:47]
    node _T_1049 = or(_T_1044, _T_1045) @[package.scala 14:62]
    node _T_1050 = or(_T_1049, _T_1046) @[package.scala 14:62]
    node _T_1051 = or(_T_1050, _T_1047) @[package.scala 14:62]
    node _T_1052 = or(_T_1051, _T_1048) @[package.scala 14:62]
    node _T_1053 = or(_T_1038, _T_1052) @[Consts.scala 91:44]
    node _T_1054 = or(_T_1027, _T_1053) @[Consts.scala 94:76]
    node _T_1056 = eq(io.req_bits.cmd, UInt<2>("h03")) @[Consts.scala 95:54]
    node _T_1057 = or(_T_1054, _T_1056) @[Consts.scala 95:47]
    node _T_1059 = eq(io.req_bits.cmd, UInt<3>("h06")) @[Consts.scala 95:71]
    node _T_1060 = or(_T_1057, _T_1059) @[Consts.scala 95:64]
    node _T_1061 = cat(_T_1019, _T_1060) @[Cat.scala 30:58]
    node _T_1064 = cat(UInt<1>("h01"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_1065 = eq(_T_1061, _T_1064) @[Metadata.scala 106:42]
    node _T_1066 = mux(_T_1065, _T_900, _T_700) @[Metadata.scala 107:33]
    wire dirtier_coh : {state : UInt<2>} @[Metadata.scala 160:20]
    dirtier_coh is invalid @[Metadata.scala 160:20]
    dirtier_coh.state <= _T_1066 @[Metadata.scala 161:16]
    node dirtier_cmd = mux(_T_1065, io.req_bits.cmd, req.cmd) @[Metadata.scala 109:27]
    node _T_1069 = asUInt(asSInt(UInt<12>("h0fff"))) @[package.scala 82:70]
    node _T_1070 = dshl(_T_1069, io.mem_grant.bits.size) @[package.scala 82:77]
    node _T_1071 = bits(_T_1070, 11, 0) @[package.scala 82:82]
    node _T_1072 = not(_T_1071) @[package.scala 82:46]
    node _T_1073 = shr(_T_1072, 3) @[Edges.scala 211:59]
    node _T_1074 = bits(io.mem_grant.bits.opcode, 0, 0) @[Edges.scala 106:36]
    node _T_1076 = mux(_T_1074, _T_1073, UInt<1>("h00")) @[Edges.scala 212:14]
    reg _T_1079 : UInt<9>, clock with : (reset => (reset, UInt<9>("h00"))) @[Edges.scala 220:27]
    node _T_1081 = sub(_T_1079, UInt<1>("h01")) @[Edges.scala 221:28]
    node _T_1082 = asUInt(_T_1081) @[Edges.scala 221:28]
    node _T_1083 = tail(_T_1082, 1) @[Edges.scala 221:28]
    node _T_1085 = eq(_T_1079, UInt<1>("h00")) @[Edges.scala 222:25]
    node _T_1087 = eq(_T_1079, UInt<1>("h01")) @[Edges.scala 223:25]
    node _T_1089 = eq(_T_1076, UInt<1>("h00")) @[Edges.scala 223:47]
    node _T_1090 = or(_T_1087, _T_1089) @[Edges.scala 223:37]
    node refill_done = and(_T_1090, io.mem_grant.valid) @[Edges.scala 224:22]
    node _T_1091 = not(_T_1083) @[Edges.scala 225:27]
    node _T_1092 = and(_T_1076, _T_1091) @[Edges.scala 225:25]
    when io.mem_grant.valid : @[Edges.scala 226:17]
      node _T_1093 = mux(_T_1085, _T_1076, _T_1083) @[Edges.scala 227:21]
      _T_1079 <= _T_1093 @[Edges.scala 227:15]
      skip @[Edges.scala 226:17]
    node refill_address_inc = shl(_T_1092, 3) @[Edges.scala 260:29]
    node _T_1094 = eq(state, UInt<4>("h01")) @[package.scala 14:47]
    node _T_1095 = eq(state, UInt<4>("h02")) @[package.scala 14:47]
    node _T_1096 = eq(state, UInt<4>("h03")) @[package.scala 14:47]
    node _T_1097 = or(_T_1094, _T_1095) @[package.scala 14:62]
    node _T_1098 = or(_T_1097, _T_1096) @[package.scala 14:62]
    node _T_1099 = eq(state, UInt<4>("h04")) @[package.scala 14:47]
    node _T_1100 = eq(state, UInt<4>("h05")) @[package.scala 14:47]
    node _T_1101 = or(_T_1099, _T_1100) @[package.scala 14:62]
    node _T_1103 = eq(cmd_requires_second_acquire, UInt<1>("h00")) @[NBDcache.scala 183:23]
    node _T_1104 = and(_T_1101, _T_1103) @[NBDcache.scala 182:65]
    node _T_1106 = eq(refill_done, UInt<1>("h00")) @[NBDcache.scala 183:55]
    node _T_1107 = and(_T_1104, _T_1106) @[NBDcache.scala 183:52]
    node _T_1108 = or(_T_1098, _T_1107) @[NBDcache.scala 181:56]
    node sec_rdy = and(idx_match, _T_1108) @[NBDcache.scala 180:27]
    inst rpq of Queue_16 @[NBDcache.scala 185:19]
    rpq.io is invalid
    rpq.clock <= clock
    rpq.reset <= reset
    node _T_1109 = and(io.req_pri_val, io.req_pri_rdy) @[NBDcache.scala 186:39]
    node _T_1110 = and(io.req_sec_val, sec_rdy) @[NBDcache.scala 186:75]
    node _T_1111 = or(_T_1109, _T_1110) @[NBDcache.scala 186:57]
    node _T_1113 = eq(io.req_bits.cmd, UInt<2>("h02")) @[Consts.scala 92:35]
    node _T_1115 = eq(io.req_bits.cmd, UInt<2>("h03")) @[Consts.scala 92:52]
    node _T_1116 = or(_T_1113, _T_1115) @[Consts.scala 92:45]
    node _T_1118 = eq(_T_1116, UInt<1>("h00")) @[NBDcache.scala 186:90]
    node _T_1119 = and(_T_1111, _T_1118) @[NBDcache.scala 186:87]
    rpq.io.enq.valid <= _T_1119 @[NBDcache.scala 186:20]
    rpq.io.enq.bits <- io.req_bits @[NBDcache.scala 187:19]
    node _T_1120 = eq(state, UInt<4>("h08")) @[NBDcache.scala 188:49]
    node _T_1121 = and(io.replay.ready, _T_1120) @[NBDcache.scala 188:40]
    node _T_1122 = eq(state, UInt<4>("h00")) @[NBDcache.scala 188:75]
    node _T_1123 = or(_T_1121, _T_1122) @[NBDcache.scala 188:66]
    rpq.io.deq.ready <= _T_1123 @[NBDcache.scala 188:20]
    node _T_1124 = eq(state, UInt<4>("h08")) @[NBDcache.scala 190:15]
    node _T_1126 = eq(rpq.io.deq.valid, UInt<1>("h00")) @[NBDcache.scala 190:34]
    node _T_1127 = and(_T_1124, _T_1126) @[NBDcache.scala 190:31]
    when _T_1127 : @[NBDcache.scala 190:53]
      state <= UInt<4>("h00") @[NBDcache.scala 191:11]
      skip @[NBDcache.scala 190:53]
    node _T_1128 = eq(state, UInt<4>("h07")) @[NBDcache.scala 193:15]
    when _T_1128 : @[NBDcache.scala 193:38]
      state <= UInt<4>("h08") @[NBDcache.scala 195:11]
      skip @[NBDcache.scala 193:38]
    node _T_1129 = eq(state, UInt<4>("h06")) @[NBDcache.scala 197:15]
    node _T_1130 = and(_T_1129, io.meta_write.ready) @[NBDcache.scala 197:36]
    when _T_1130 : @[NBDcache.scala 197:60]
      state <= UInt<4>("h07") @[NBDcache.scala 198:11]
      skip @[NBDcache.scala 197:60]
    node _T_1131 = eq(state, UInt<4>("h05")) @[NBDcache.scala 200:15]
    node _T_1132 = and(_T_1131, refill_done) @[NBDcache.scala 200:33]
    when _T_1132 : @[NBDcache.scala 200:49]
      new_coh <- coh_on_grant @[NBDcache.scala 201:13]
      state <= UInt<4>("h06") @[NBDcache.scala 202:11]
      skip @[NBDcache.scala 200:49]
    node _T_1133 = and(io.mem_acquire.ready, io.mem_acquire.valid) @[Decoupled.scala 30:37]
    when _T_1133 : @[NBDcache.scala 204:32]
      state <= UInt<4>("h05") @[NBDcache.scala 205:11]
      skip @[NBDcache.scala 204:32]
    node _T_1134 = eq(state, UInt<4>("h03")) @[NBDcache.scala 207:15]
    node _T_1135 = and(_T_1134, io.meta_write.ready) @[NBDcache.scala 207:32]
    when _T_1135 : @[NBDcache.scala 207:56]
      state <= UInt<4>("h04") @[NBDcache.scala 208:11]
      skip @[NBDcache.scala 207:56]
    node _T_1136 = eq(state, UInt<4>("h02")) @[NBDcache.scala 210:15]
    node _T_1137 = and(_T_1136, io.mem_grant.valid) @[NBDcache.scala 210:29]
    when _T_1137 : @[NBDcache.scala 210:52]
      state <= UInt<4>("h03") @[NBDcache.scala 211:11]
      skip @[NBDcache.scala 210:52]
    node _T_1138 = and(io.wb_req.ready, io.wb_req.valid) @[Decoupled.scala 30:37]
    when _T_1138 : @[NBDcache.scala 213:27]
      state <= UInt<4>("h02") @[NBDcache.scala 214:11]
      skip @[NBDcache.scala 213:27]
    node _T_1139 = and(io.req_sec_val, io.req_sec_rdy) @[NBDcache.scala 216:24]
    when _T_1139 : @[NBDcache.scala 216:43]
      req.cmd <= dirtier_cmd @[NBDcache.scala 220:13]
      when is_hit_again : @[NBDcache.scala 221:25]
        new_coh <- dirtier_coh @[NBDcache.scala 222:15]
        skip @[NBDcache.scala 221:25]
      skip @[NBDcache.scala 216:43]
    node _T_1140 = and(io.req_pri_val, io.req_pri_rdy) @[NBDcache.scala 225:24]
    when _T_1140 : @[NBDcache.scala 225:43]
      req <- io.req_bits @[NBDcache.scala 226:9]
      node _T_1149 = eq(UInt<5>("h013"), UInt<5>("h010")) @[Mux.scala 46:19]
      node _T_1150 = mux(_T_1149, UInt<2>("h00"), UInt<2>("h02")) @[Mux.scala 46:16]
      node _T_1151 = eq(UInt<5>("h012"), UInt<5>("h010")) @[Mux.scala 46:19]
      node _T_1152 = mux(_T_1151, UInt<2>("h01"), _T_1150) @[Mux.scala 46:16]
      node _T_1153 = eq(UInt<5>("h010"), UInt<5>("h010")) @[Mux.scala 46:19]
      node _T_1154 = mux(_T_1153, UInt<2>("h02"), _T_1152) @[Mux.scala 46:16]
      node _T_1155 = cat(_T_1154, io.req_bits.old_meta.coh.state) @[Cat.scala 30:58]
      node _T_1161 = cat(UInt<2>("h00"), UInt<2>("h03")) @[Cat.scala 30:58]
      node _T_1167 = cat(UInt<2>("h00"), UInt<2>("h02")) @[Cat.scala 30:58]
      node _T_1173 = cat(UInt<2>("h00"), UInt<2>("h01")) @[Cat.scala 30:58]
      node _T_1179 = cat(UInt<2>("h00"), UInt<2>("h00")) @[Cat.scala 30:58]
      node _T_1185 = cat(UInt<2>("h01"), UInt<2>("h03")) @[Cat.scala 30:58]
      node _T_1191 = cat(UInt<2>("h01"), UInt<2>("h02")) @[Cat.scala 30:58]
      node _T_1197 = cat(UInt<2>("h01"), UInt<2>("h01")) @[Cat.scala 30:58]
      node _T_1203 = cat(UInt<2>("h01"), UInt<2>("h00")) @[Cat.scala 30:58]
      node _T_1209 = cat(UInt<2>("h02"), UInt<2>("h03")) @[Cat.scala 30:58]
      node _T_1215 = cat(UInt<2>("h02"), UInt<2>("h02")) @[Cat.scala 30:58]
      node _T_1221 = cat(UInt<2>("h02"), UInt<2>("h01")) @[Cat.scala 30:58]
      node _T_1227 = cat(UInt<2>("h02"), UInt<2>("h00")) @[Cat.scala 30:58]
      node _T_1231 = eq(_T_1227, _T_1155) @[Misc.scala 94:20]
      node _T_1232 = mux(_T_1231, UInt<1>("h00"), UInt<1>("h00")) @[Misc.scala 76:9]
      node _T_1233 = mux(_T_1231, UInt<3>("h05"), UInt<1>("h00")) @[Misc.scala 76:36]
      node _T_1234 = mux(_T_1231, UInt<2>("h00"), UInt<1>("h00")) @[Misc.scala 76:63]
      node _T_1235 = eq(_T_1221, _T_1155) @[Misc.scala 94:20]
      node _T_1236 = mux(_T_1235, UInt<1>("h00"), _T_1232) @[Misc.scala 76:9]
      node _T_1237 = mux(_T_1235, UInt<3>("h02"), _T_1233) @[Misc.scala 76:36]
      node _T_1238 = mux(_T_1235, UInt<2>("h00"), _T_1234) @[Misc.scala 76:63]
      node _T_1239 = eq(_T_1215, _T_1155) @[Misc.scala 94:20]
      node _T_1240 = mux(_T_1239, UInt<1>("h00"), _T_1236) @[Misc.scala 76:9]
      node _T_1241 = mux(_T_1239, UInt<3>("h01"), _T_1237) @[Misc.scala 76:36]
      node _T_1242 = mux(_T_1239, UInt<2>("h00"), _T_1238) @[Misc.scala 76:63]
      node _T_1243 = eq(_T_1209, _T_1155) @[Misc.scala 94:20]
      node _T_1244 = mux(_T_1243, UInt<1>("h01"), _T_1240) @[Misc.scala 76:9]
      node _T_1245 = mux(_T_1243, UInt<3>("h01"), _T_1241) @[Misc.scala 76:36]
      node _T_1246 = mux(_T_1243, UInt<2>("h00"), _T_1242) @[Misc.scala 76:63]
      node _T_1247 = eq(_T_1203, _T_1155) @[Misc.scala 94:20]
      node _T_1248 = mux(_T_1247, UInt<1>("h00"), _T_1244) @[Misc.scala 76:9]
      node _T_1249 = mux(_T_1247, UInt<3>("h02"), _T_1245) @[Misc.scala 76:36]
      node _T_1250 = mux(_T_1247, UInt<2>("h00"), _T_1246) @[Misc.scala 76:63]
      node _T_1251 = eq(_T_1197, _T_1155) @[Misc.scala 94:20]
      node _T_1252 = mux(_T_1251, UInt<1>("h00"), _T_1248) @[Misc.scala 76:9]
      node _T_1253 = mux(_T_1251, UInt<3>("h04"), _T_1249) @[Misc.scala 76:36]
      node _T_1254 = mux(_T_1251, UInt<2>("h01"), _T_1250) @[Misc.scala 76:63]
      node _T_1255 = eq(_T_1191, _T_1155) @[Misc.scala 94:20]
      node _T_1256 = mux(_T_1255, UInt<1>("h00"), _T_1252) @[Misc.scala 76:9]
      node _T_1257 = mux(_T_1255, UInt<3>("h00"), _T_1253) @[Misc.scala 76:36]
      node _T_1258 = mux(_T_1255, UInt<2>("h01"), _T_1254) @[Misc.scala 76:63]
      node _T_1259 = eq(_T_1185, _T_1155) @[Misc.scala 94:20]
      node _T_1260 = mux(_T_1259, UInt<1>("h01"), _T_1256) @[Misc.scala 76:9]
      node _T_1261 = mux(_T_1259, UInt<3>("h00"), _T_1257) @[Misc.scala 76:36]
      node _T_1262 = mux(_T_1259, UInt<2>("h01"), _T_1258) @[Misc.scala 76:63]
      node _T_1263 = eq(_T_1179, _T_1155) @[Misc.scala 94:20]
      node _T_1264 = mux(_T_1263, UInt<1>("h00"), _T_1260) @[Misc.scala 76:9]
      node _T_1265 = mux(_T_1263, UInt<3>("h05"), _T_1261) @[Misc.scala 76:36]
      node _T_1266 = mux(_T_1263, UInt<2>("h00"), _T_1262) @[Misc.scala 76:63]
      node _T_1267 = eq(_T_1173, _T_1155) @[Misc.scala 94:20]
      node _T_1268 = mux(_T_1267, UInt<1>("h00"), _T_1264) @[Misc.scala 76:9]
      node _T_1269 = mux(_T_1267, UInt<3>("h04"), _T_1265) @[Misc.scala 76:36]
      node _T_1270 = mux(_T_1267, UInt<2>("h01"), _T_1266) @[Misc.scala 76:63]
      node _T_1271 = eq(_T_1167, _T_1155) @[Misc.scala 94:20]
      node _T_1272 = mux(_T_1271, UInt<1>("h00"), _T_1268) @[Misc.scala 76:9]
      node _T_1273 = mux(_T_1271, UInt<3>("h03"), _T_1269) @[Misc.scala 76:36]
      node _T_1274 = mux(_T_1271, UInt<2>("h02"), _T_1270) @[Misc.scala 76:63]
      node _T_1275 = eq(_T_1161, _T_1155) @[Misc.scala 94:20]
      node _T_1276 = mux(_T_1275, UInt<1>("h01"), _T_1272) @[Misc.scala 76:9]
      node _T_1277 = mux(_T_1275, UInt<3>("h03"), _T_1273) @[Misc.scala 76:36]
      node _T_1278 = mux(_T_1275, UInt<2>("h02"), _T_1274) @[Misc.scala 76:63]
      wire _T_1280 : {state : UInt<2>} @[Metadata.scala 160:20]
      _T_1280 is invalid @[Metadata.scala 160:20]
      _T_1280.state <= _T_1278 @[Metadata.scala 161:16]
      node _T_1282 = eq(io.req_bits.cmd, UInt<1>("h01")) @[Consts.scala 94:32]
      node _T_1284 = eq(io.req_bits.cmd, UInt<5>("h011")) @[Consts.scala 94:49]
      node _T_1285 = or(_T_1282, _T_1284) @[Consts.scala 94:42]
      node _T_1287 = eq(io.req_bits.cmd, UInt<3>("h07")) @[Consts.scala 94:66]
      node _T_1288 = or(_T_1285, _T_1287) @[Consts.scala 94:59]
      node _T_1293 = eq(io.req_bits.cmd, UInt<3>("h04")) @[package.scala 14:47]
      node _T_1294 = eq(io.req_bits.cmd, UInt<4>("h09")) @[package.scala 14:47]
      node _T_1295 = eq(io.req_bits.cmd, UInt<4>("h0a")) @[package.scala 14:47]
      node _T_1296 = eq(io.req_bits.cmd, UInt<4>("h0b")) @[package.scala 14:47]
      node _T_1297 = or(_T_1293, _T_1294) @[package.scala 14:62]
      node _T_1298 = or(_T_1297, _T_1295) @[package.scala 14:62]
      node _T_1299 = or(_T_1298, _T_1296) @[package.scala 14:62]
      node _T_1305 = eq(io.req_bits.cmd, UInt<4>("h08")) @[package.scala 14:47]
      node _T_1306 = eq(io.req_bits.cmd, UInt<4>("h0c")) @[package.scala 14:47]
      node _T_1307 = eq(io.req_bits.cmd, UInt<4>("h0d")) @[package.scala 14:47]
      node _T_1308 = eq(io.req_bits.cmd, UInt<4>("h0e")) @[package.scala 14:47]
      node _T_1309 = eq(io.req_bits.cmd, UInt<4>("h0f")) @[package.scala 14:47]
      node _T_1310 = or(_T_1305, _T_1306) @[package.scala 14:62]
      node _T_1311 = or(_T_1310, _T_1307) @[package.scala 14:62]
      node _T_1312 = or(_T_1311, _T_1308) @[package.scala 14:62]
      node _T_1313 = or(_T_1312, _T_1309) @[package.scala 14:62]
      node _T_1314 = or(_T_1299, _T_1313) @[Consts.scala 91:44]
      node _T_1315 = or(_T_1288, _T_1314) @[Consts.scala 94:76]
      node _T_1317 = eq(io.req_bits.cmd, UInt<1>("h01")) @[Consts.scala 94:32]
      node _T_1319 = eq(io.req_bits.cmd, UInt<5>("h011")) @[Consts.scala 94:49]
      node _T_1320 = or(_T_1317, _T_1319) @[Consts.scala 94:42]
      node _T_1322 = eq(io.req_bits.cmd, UInt<3>("h07")) @[Consts.scala 94:66]
      node _T_1323 = or(_T_1320, _T_1322) @[Consts.scala 94:59]
      node _T_1328 = eq(io.req_bits.cmd, UInt<3>("h04")) @[package.scala 14:47]
      node _T_1329 = eq(io.req_bits.cmd, UInt<4>("h09")) @[package.scala 14:47]
      node _T_1330 = eq(io.req_bits.cmd, UInt<4>("h0a")) @[package.scala 14:47]
      node _T_1331 = eq(io.req_bits.cmd, UInt<4>("h0b")) @[package.scala 14:47]
      node _T_1332 = or(_T_1328, _T_1329) @[package.scala 14:62]
      node _T_1333 = or(_T_1332, _T_1330) @[package.scala 14:62]
      node _T_1334 = or(_T_1333, _T_1331) @[package.scala 14:62]
      node _T_1340 = eq(io.req_bits.cmd, UInt<4>("h08")) @[package.scala 14:47]
      node _T_1341 = eq(io.req_bits.cmd, UInt<4>("h0c")) @[package.scala 14:47]
      node _T_1342 = eq(io.req_bits.cmd, UInt<4>("h0d")) @[package.scala 14:47]
      node _T_1343 = eq(io.req_bits.cmd, UInt<4>("h0e")) @[package.scala 14:47]
      node _T_1344 = eq(io.req_bits.cmd, UInt<4>("h0f")) @[package.scala 14:47]
      node _T_1345 = or(_T_1340, _T_1341) @[package.scala 14:62]
      node _T_1346 = or(_T_1345, _T_1342) @[package.scala 14:62]
      node _T_1347 = or(_T_1346, _T_1343) @[package.scala 14:62]
      node _T_1348 = or(_T_1347, _T_1344) @[package.scala 14:62]
      node _T_1349 = or(_T_1334, _T_1348) @[Consts.scala 91:44]
      node _T_1350 = or(_T_1323, _T_1349) @[Consts.scala 94:76]
      node _T_1352 = eq(io.req_bits.cmd, UInt<2>("h03")) @[Consts.scala 95:54]
      node _T_1353 = or(_T_1350, _T_1352) @[Consts.scala 95:47]
      node _T_1355 = eq(io.req_bits.cmd, UInt<3>("h06")) @[Consts.scala 95:71]
      node _T_1356 = or(_T_1353, _T_1355) @[Consts.scala 95:64]
      node _T_1357 = cat(_T_1315, _T_1356) @[Cat.scala 30:58]
      node _T_1358 = cat(_T_1357, io.req_bits.old_meta.coh.state) @[Cat.scala 30:58]
      node _T_1363 = cat(UInt<1>("h00"), UInt<1>("h00")) @[Cat.scala 30:58]
      node _T_1365 = cat(_T_1363, UInt<2>("h03")) @[Cat.scala 30:58]
      node _T_1370 = cat(UInt<1>("h00"), UInt<1>("h00")) @[Cat.scala 30:58]
      node _T_1372 = cat(_T_1370, UInt<2>("h02")) @[Cat.scala 30:58]
      node _T_1377 = cat(UInt<1>("h00"), UInt<1>("h00")) @[Cat.scala 30:58]
      node _T_1379 = cat(_T_1377, UInt<2>("h01")) @[Cat.scala 30:58]
      node _T_1384 = cat(UInt<1>("h00"), UInt<1>("h01")) @[Cat.scala 30:58]
      node _T_1386 = cat(_T_1384, UInt<2>("h03")) @[Cat.scala 30:58]
      node _T_1391 = cat(UInt<1>("h00"), UInt<1>("h01")) @[Cat.scala 30:58]
      node _T_1393 = cat(_T_1391, UInt<2>("h02")) @[Cat.scala 30:58]
      node _T_1398 = cat(UInt<1>("h01"), UInt<1>("h01")) @[Cat.scala 30:58]
      node _T_1400 = cat(_T_1398, UInt<2>("h03")) @[Cat.scala 30:58]
      node _T_1405 = cat(UInt<1>("h01"), UInt<1>("h01")) @[Cat.scala 30:58]
      node _T_1407 = cat(_T_1405, UInt<2>("h02")) @[Cat.scala 30:58]
      node _T_1412 = cat(UInt<1>("h00"), UInt<1>("h00")) @[Cat.scala 30:58]
      node _T_1414 = cat(_T_1412, UInt<2>("h00")) @[Cat.scala 30:58]
      node _T_1419 = cat(UInt<1>("h00"), UInt<1>("h01")) @[Cat.scala 30:58]
      node _T_1421 = cat(_T_1419, UInt<2>("h01")) @[Cat.scala 30:58]
      node _T_1426 = cat(UInt<1>("h00"), UInt<1>("h01")) @[Cat.scala 30:58]
      node _T_1428 = cat(_T_1426, UInt<2>("h00")) @[Cat.scala 30:58]
      node _T_1433 = cat(UInt<1>("h01"), UInt<1>("h01")) @[Cat.scala 30:58]
      node _T_1435 = cat(_T_1433, UInt<2>("h01")) @[Cat.scala 30:58]
      node _T_1440 = cat(UInt<1>("h01"), UInt<1>("h01")) @[Cat.scala 30:58]
      node _T_1442 = cat(_T_1440, UInt<2>("h00")) @[Cat.scala 30:58]
      node _T_1445 = eq(_T_1442, _T_1358) @[Misc.scala 87:20]
      node _T_1446 = mux(_T_1445, UInt<1>("h00"), UInt<1>("h00")) @[Misc.scala 73:9]
      node _T_1447 = mux(_T_1445, UInt<2>("h01"), UInt<1>("h00")) @[Misc.scala 73:36]
      node _T_1448 = eq(_T_1435, _T_1358) @[Misc.scala 87:20]
      node _T_1449 = mux(_T_1448, UInt<1>("h00"), _T_1446) @[Misc.scala 73:9]
      node _T_1450 = mux(_T_1448, UInt<2>("h02"), _T_1447) @[Misc.scala 73:36]
      node _T_1451 = eq(_T_1428, _T_1358) @[Misc.scala 87:20]
      node _T_1452 = mux(_T_1451, UInt<1>("h00"), _T_1449) @[Misc.scala 73:9]
      node _T_1453 = mux(_T_1451, UInt<2>("h01"), _T_1450) @[Misc.scala 73:36]
      node _T_1454 = eq(_T_1421, _T_1358) @[Misc.scala 87:20]
      node _T_1455 = mux(_T_1454, UInt<1>("h00"), _T_1452) @[Misc.scala 73:9]
      node _T_1456 = mux(_T_1454, UInt<2>("h02"), _T_1453) @[Misc.scala 73:36]
      node _T_1457 = eq(_T_1414, _T_1358) @[Misc.scala 87:20]
      node _T_1458 = mux(_T_1457, UInt<1>("h00"), _T_1455) @[Misc.scala 73:9]
      node _T_1459 = mux(_T_1457, UInt<2>("h00"), _T_1456) @[Misc.scala 73:36]
      node _T_1460 = eq(_T_1407, _T_1358) @[Misc.scala 87:20]
      node _T_1461 = mux(_T_1460, UInt<1>("h01"), _T_1458) @[Misc.scala 73:9]
      node _T_1462 = mux(_T_1460, UInt<2>("h03"), _T_1459) @[Misc.scala 73:36]
      node _T_1463 = eq(_T_1400, _T_1358) @[Misc.scala 87:20]
      node _T_1464 = mux(_T_1463, UInt<1>("h01"), _T_1461) @[Misc.scala 73:9]
      node _T_1465 = mux(_T_1463, UInt<2>("h03"), _T_1462) @[Misc.scala 73:36]
      node _T_1466 = eq(_T_1393, _T_1358) @[Misc.scala 87:20]
      node _T_1467 = mux(_T_1466, UInt<1>("h01"), _T_1464) @[Misc.scala 73:9]
      node _T_1468 = mux(_T_1466, UInt<2>("h02"), _T_1465) @[Misc.scala 73:36]
      node _T_1469 = eq(_T_1386, _T_1358) @[Misc.scala 87:20]
      node _T_1470 = mux(_T_1469, UInt<1>("h01"), _T_1467) @[Misc.scala 73:9]
      node _T_1471 = mux(_T_1469, UInt<2>("h03"), _T_1468) @[Misc.scala 73:36]
      node _T_1472 = eq(_T_1379, _T_1358) @[Misc.scala 87:20]
      node _T_1473 = mux(_T_1472, UInt<1>("h01"), _T_1470) @[Misc.scala 73:9]
      node _T_1474 = mux(_T_1472, UInt<2>("h01"), _T_1471) @[Misc.scala 73:36]
      node _T_1475 = eq(_T_1372, _T_1358) @[Misc.scala 87:20]
      node _T_1476 = mux(_T_1475, UInt<1>("h01"), _T_1473) @[Misc.scala 73:9]
      node _T_1477 = mux(_T_1475, UInt<2>("h02"), _T_1474) @[Misc.scala 73:36]
      node _T_1478 = eq(_T_1365, _T_1358) @[Misc.scala 87:20]
      node _T_1479 = mux(_T_1478, UInt<1>("h01"), _T_1476) @[Misc.scala 73:9]
      node _T_1480 = mux(_T_1478, UInt<2>("h03"), _T_1477) @[Misc.scala 73:36]
      wire _T_1482 : {state : UInt<2>} @[Metadata.scala 160:20]
      _T_1482 is invalid @[Metadata.scala 160:20]
      _T_1482.state <= _T_1480 @[Metadata.scala 161:16]
      when io.req_bits.tag_match : @[NBDcache.scala 230:34]
        when _T_1479 : @[NBDcache.scala 231:21]
          new_coh <- _T_1482 @[NBDcache.scala 232:17]
          state <= UInt<4>("h06") @[NBDcache.scala 233:15]
          skip @[NBDcache.scala 231:21]
        else : @[NBDcache.scala 234:19]
          new_coh <- io.req_bits.old_meta.coh @[NBDcache.scala 235:17]
          state <= UInt<4>("h04") @[NBDcache.scala 236:15]
          skip @[NBDcache.scala 234:19]
        skip @[NBDcache.scala 230:34]
      else : @[NBDcache.scala 238:17]
        wire _T_1485 : {state : UInt<2>} @[Metadata.scala 160:20]
        _T_1485 is invalid @[Metadata.scala 160:20]
        _T_1485.state <= UInt<2>("h00") @[Metadata.scala 161:16]
        new_coh <- _T_1485 @[NBDcache.scala 239:15]
        node _T_1486 = mux(_T_1276, UInt<4>("h01"), UInt<4>("h03")) @[NBDcache.scala 240:19]
        state <= _T_1486 @[NBDcache.scala 240:13]
        skip @[NBDcache.scala 238:17]
      skip @[NBDcache.scala 225:43]
    inst grantackq of Queue_17 @[NBDcache.scala 244:25]
    grantackq.io is invalid
    grantackq.clock <= clock
    grantackq.reset <= reset
    node _T_1487 = eq(state, UInt<4>("h00")) @[package.scala 14:47]
    node _T_1488 = eq(state, UInt<4>("h04")) @[package.scala 14:47]
    node can_finish = or(_T_1487, _T_1488) @[package.scala 14:62]
    node _T_1489 = bits(io.mem_grant.bits.opcode, 2, 2) @[Edges.scala 71:36]
    node _T_1490 = bits(io.mem_grant.bits.opcode, 1, 1) @[Edges.scala 71:52]
    node _T_1492 = eq(_T_1490, UInt<1>("h00")) @[Edges.scala 71:43]
    node _T_1493 = and(_T_1489, _T_1492) @[Edges.scala 71:40]
    node _T_1494 = and(refill_done, _T_1493) @[NBDcache.scala 246:41]
    grantackq.io.enq.valid <= _T_1494 @[NBDcache.scala 246:26]
    wire _T_1496 : {sink : UInt<3>} @[Edges.scala 362:17]
    _T_1496 is invalid @[Edges.scala 362:17]
    _T_1496.sink <= io.mem_grant.bits.sink @[Edges.scala 363:12]
    grantackq.io.enq.bits <- _T_1496 @[NBDcache.scala 247:25]
    node _T_1497 = and(grantackq.io.deq.valid, can_finish) @[NBDcache.scala 248:49]
    io.mem_finish.valid <= _T_1497 @[NBDcache.scala 248:23]
    io.mem_finish.bits <- grantackq.io.deq.bits @[NBDcache.scala 249:22]
    node _T_1498 = and(io.mem_finish.ready, can_finish) @[NBDcache.scala 250:49]
    grantackq.io.deq.ready <= _T_1498 @[NBDcache.scala 250:26]
    node _T_1499 = neq(state, UInt<4>("h00")) @[NBDcache.scala 252:26]
    node _T_1500 = and(_T_1499, idx_match) @[NBDcache.scala 252:41]
    io.idx_match <= _T_1500 @[NBDcache.scala 252:16]
    io.refill.way_en <= req.way_en @[NBDcache.scala 253:20]
    node _T_1501 = or(req_block_addr, refill_address_inc) @[NBDcache.scala 254:36]
    io.refill.addr <= _T_1501 @[NBDcache.scala 254:18]
    io.tag <= req_tag @[NBDcache.scala 255:10]
    node _T_1502 = eq(state, UInt<4>("h00")) @[NBDcache.scala 256:27]
    io.req_pri_rdy <= _T_1502 @[NBDcache.scala 256:18]
    node _T_1503 = and(sec_rdy, rpq.io.enq.ready) @[NBDcache.scala 257:29]
    io.req_sec_rdy <= _T_1503 @[NBDcache.scala 257:18]
    reg meta_hazard : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[NBDcache.scala 259:24]
    node _T_1507 = neq(meta_hazard, UInt<1>("h00")) @[NBDcache.scala 260:21]
    when _T_1507 : @[NBDcache.scala 260:34]
      node _T_1509 = add(meta_hazard, UInt<1>("h01")) @[NBDcache.scala 260:63]
      node _T_1510 = tail(_T_1509, 1) @[NBDcache.scala 260:63]
      meta_hazard <= _T_1510 @[NBDcache.scala 260:48]
      skip @[NBDcache.scala 260:34]
    node _T_1511 = and(io.meta_write.ready, io.meta_write.valid) @[Decoupled.scala 30:37]
    when _T_1511 : @[NBDcache.scala 261:31]
      meta_hazard <= UInt<1>("h01") @[NBDcache.scala 261:45]
      skip @[NBDcache.scala 261:31]
    node _T_1514 = eq(idx_match, UInt<1>("h00")) @[NBDcache.scala 262:19]
    node _T_1515 = eq(state, UInt<4>("h01")) @[package.scala 14:47]
    node _T_1516 = eq(state, UInt<4>("h02")) @[package.scala 14:47]
    node _T_1517 = eq(state, UInt<4>("h03")) @[package.scala 14:47]
    node _T_1518 = or(_T_1515, _T_1516) @[package.scala 14:62]
    node _T_1519 = or(_T_1518, _T_1517) @[package.scala 14:62]
    node _T_1521 = eq(_T_1519, UInt<1>("h00")) @[NBDcache.scala 262:34]
    node _T_1523 = eq(meta_hazard, UInt<1>("h00")) @[NBDcache.scala 262:86]
    node _T_1524 = and(_T_1521, _T_1523) @[NBDcache.scala 262:71]
    node _T_1525 = or(_T_1514, _T_1524) @[NBDcache.scala 262:30]
    io.probe_rdy <= _T_1525 @[NBDcache.scala 262:16]
    node _T_1526 = eq(state, UInt<4>("h06")) @[package.scala 14:47]
    node _T_1527 = eq(state, UInt<4>("h03")) @[package.scala 14:47]
    node _T_1528 = or(_T_1526, _T_1527) @[package.scala 14:62]
    io.meta_write.valid <= _T_1528 @[NBDcache.scala 264:23]
    io.meta_write.bits.idx <= req_idx @[NBDcache.scala 265:26]
    node _T_1529 = eq(state, UInt<4>("h03")) @[NBDcache.scala 266:44]
    node _T_1530 = mux(_T_1529, coh_on_clear, new_coh) @[NBDcache.scala 266:37]
    io.meta_write.bits.data.coh <- _T_1530 @[NBDcache.scala 266:31]
    io.meta_write.bits.data.tag <= io.tag @[NBDcache.scala 267:31]
    io.meta_write.bits.way_en <= req.way_en @[NBDcache.scala 268:29]
    node _T_1531 = eq(state, UInt<4>("h01")) @[NBDcache.scala 270:28]
    io.wb_req.valid <= _T_1531 @[NBDcache.scala 270:19]
    io.wb_req.bits.source <= UInt<1>("h01") @[NBDcache.scala 271:25]
    io.wb_req.bits.tag <= req.old_meta.tag @[NBDcache.scala 272:22]
    io.wb_req.bits.idx <= req_idx @[NBDcache.scala 273:22]
    io.wb_req.bits.param <= shrink_param @[NBDcache.scala 274:24]
    io.wb_req.bits.way_en <= req.way_en @[NBDcache.scala 275:25]
    io.wb_req.bits.voluntary <= UInt<1>("h01") @[NBDcache.scala 276:28]
    node _T_1534 = eq(state, UInt<4>("h04")) @[NBDcache.scala 278:33]
    node _T_1535 = and(_T_1534, grantackq.io.enq.ready) @[NBDcache.scala 278:50]
    io.mem_acquire.valid <= _T_1535 @[NBDcache.scala 278:24]
    node _T_1537 = cat(io.tag, req_idx) @[Cat.scala 30:58]
    node _T_1538 = shl(_T_1537, 6) @[NBDcache.scala 281:66]
    node _T_1542 = leq(UInt<1>("h00"), UInt<3>("h06")) @[Parameters.scala 88:32]
    node _T_1544 = leq(UInt<3>("h06"), UInt<4>("h0c")) @[Parameters.scala 88:42]
    node _T_1545 = and(_T_1542, _T_1544) @[Parameters.scala 88:37]
    node _T_1546 = or(UInt<1>("h00"), _T_1545) @[Parameters.scala 157:31]
    node _T_1548 = xor(_T_1538, UInt<14>("h02000")) @[Parameters.scala 153:31]
    node _T_1549 = cvt(_T_1548) @[Parameters.scala 153:49]
    node _T_1551 = and(_T_1549, asSInt(UInt<33>("h08a012000"))) @[Parameters.scala 153:52]
    node _T_1552 = asSInt(_T_1551) @[Parameters.scala 153:52]
    node _T_1554 = eq(_T_1552, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_1555 = and(_T_1546, _T_1554) @[Parameters.scala 157:56]
    node _T_1558 = leq(UInt<1>("h00"), UInt<3>("h06")) @[Parameters.scala 88:32]
    node _T_1560 = leq(UInt<3>("h06"), UInt<3>("h06")) @[Parameters.scala 88:42]
    node _T_1561 = and(_T_1558, _T_1560) @[Parameters.scala 88:37]
    node _T_1562 = or(UInt<1>("h00"), _T_1561) @[Parameters.scala 157:31]
    node _T_1564 = xor(_T_1538, UInt<32>("h080000000")) @[Parameters.scala 153:31]
    node _T_1565 = cvt(_T_1564) @[Parameters.scala 153:49]
    node _T_1567 = and(_T_1565, asSInt(UInt<33>("h080000000"))) @[Parameters.scala 153:52]
    node _T_1568 = asSInt(_T_1567) @[Parameters.scala 153:52]
    node _T_1570 = eq(_T_1568, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_1571 = and(_T_1562, _T_1570) @[Parameters.scala 157:56]
    node _T_1574 = or(UInt<1>("h00"), UInt<1>("h00")) @[Parameters.scala 157:31]
    node _T_1576 = xor(_T_1538, UInt<28>("h08000000")) @[Parameters.scala 153:31]
    node _T_1577 = cvt(_T_1576) @[Parameters.scala 153:49]
    node _T_1579 = and(_T_1577, asSInt(UInt<33>("h088000000"))) @[Parameters.scala 153:52]
    node _T_1580 = asSInt(_T_1579) @[Parameters.scala 153:52]
    node _T_1582 = eq(_T_1580, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_1584 = xor(_T_1538, UInt<26>("h02000000")) @[Parameters.scala 153:31]
    node _T_1585 = cvt(_T_1584) @[Parameters.scala 153:49]
    node _T_1587 = and(_T_1585, asSInt(UInt<33>("h08a010000"))) @[Parameters.scala 153:52]
    node _T_1588 = asSInt(_T_1587) @[Parameters.scala 153:52]
    node _T_1590 = eq(_T_1588, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_1592 = xor(_T_1538, UInt<1>("h00")) @[Parameters.scala 153:31]
    node _T_1593 = cvt(_T_1592) @[Parameters.scala 153:49]
    node _T_1595 = and(_T_1593, asSInt(UInt<33>("h08a012000"))) @[Parameters.scala 153:52]
    node _T_1596 = asSInt(_T_1595) @[Parameters.scala 153:52]
    node _T_1598 = eq(_T_1596, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_1600 = xor(_T_1538, UInt<17>("h010000")) @[Parameters.scala 153:31]
    node _T_1601 = cvt(_T_1600) @[Parameters.scala 153:49]
    node _T_1603 = and(_T_1601, asSInt(UInt<33>("h08a010000"))) @[Parameters.scala 153:52]
    node _T_1604 = asSInt(_T_1603) @[Parameters.scala 153:52]
    node _T_1606 = eq(_T_1604, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_1607 = or(_T_1582, _T_1590) @[Parameters.scala 158:42]
    node _T_1608 = or(_T_1607, _T_1598) @[Parameters.scala 158:42]
    node _T_1609 = or(_T_1608, _T_1606) @[Parameters.scala 158:42]
    node _T_1610 = and(_T_1574, _T_1609) @[Parameters.scala 157:56]
    node _T_1612 = or(UInt<1>("h00"), _T_1555) @[Parameters.scala 159:30]
    node _T_1613 = or(_T_1612, _T_1571) @[Parameters.scala 159:30]
    node _T_1614 = or(_T_1613, _T_1610) @[Parameters.scala 159:30]
    wire _T_1616 : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<2>, address : UInt<32>, mask : UInt<8>, data : UInt<64>} @[Edges.scala 277:17]
    _T_1616 is invalid @[Edges.scala 277:17]
    _T_1616.opcode <= UInt<3>("h06") @[Edges.scala 278:15]
    _T_1616.param <= grow_param @[Edges.scala 279:15]
    _T_1616.size <= UInt<3>("h06") @[Edges.scala 280:15]
    _T_1616.source <= UInt<1>("h01") @[Edges.scala 281:15]
    _T_1616.address <= _T_1538 @[Edges.scala 282:15]
    node _T_1620 = dshl(UInt<1>("h01"), UInt<2>("h02")) @[OneHot.scala 50:12]
    node _T_1621 = bits(_T_1620, 2, 0) @[OneHot.scala 50:27]
    node _T_1623 = or(_T_1621, UInt<1>("h01")) @[Misc.scala 252:54]
    node _T_1625 = geq(UInt<3>("h06"), UInt<2>("h03")) @[Misc.scala 256:21]
    node _T_1627 = bits(_T_1623, 2, 2) @[Misc.scala 259:26]
    node _T_1628 = bits(_T_1538, 2, 2) @[Misc.scala 260:26]
    node _T_1630 = eq(_T_1628, UInt<1>("h00")) @[Misc.scala 261:20]
    node _T_1631 = and(UInt<1>("h01"), _T_1630) @[Misc.scala 264:27]
    node _T_1632 = and(_T_1627, _T_1631) @[Misc.scala 265:38]
    node _T_1633 = or(_T_1625, _T_1632) @[Misc.scala 265:29]
    node _T_1634 = and(UInt<1>("h01"), _T_1628) @[Misc.scala 264:27]
    node _T_1635 = and(_T_1627, _T_1634) @[Misc.scala 265:38]
    node _T_1636 = or(_T_1625, _T_1635) @[Misc.scala 265:29]
    node _T_1637 = bits(_T_1623, 1, 1) @[Misc.scala 259:26]
    node _T_1638 = bits(_T_1538, 1, 1) @[Misc.scala 260:26]
    node _T_1640 = eq(_T_1638, UInt<1>("h00")) @[Misc.scala 261:20]
    node _T_1641 = and(_T_1631, _T_1640) @[Misc.scala 264:27]
    node _T_1642 = and(_T_1637, _T_1641) @[Misc.scala 265:38]
    node _T_1643 = or(_T_1633, _T_1642) @[Misc.scala 265:29]
    node _T_1644 = and(_T_1631, _T_1638) @[Misc.scala 264:27]
    node _T_1645 = and(_T_1637, _T_1644) @[Misc.scala 265:38]
    node _T_1646 = or(_T_1633, _T_1645) @[Misc.scala 265:29]
    node _T_1647 = and(_T_1634, _T_1640) @[Misc.scala 264:27]
    node _T_1648 = and(_T_1637, _T_1647) @[Misc.scala 265:38]
    node _T_1649 = or(_T_1636, _T_1648) @[Misc.scala 265:29]
    node _T_1650 = and(_T_1634, _T_1638) @[Misc.scala 264:27]
    node _T_1651 = and(_T_1637, _T_1650) @[Misc.scala 265:38]
    node _T_1652 = or(_T_1636, _T_1651) @[Misc.scala 265:29]
    node _T_1653 = bits(_T_1623, 0, 0) @[Misc.scala 259:26]
    node _T_1654 = bits(_T_1538, 0, 0) @[Misc.scala 260:26]
    node _T_1656 = eq(_T_1654, UInt<1>("h00")) @[Misc.scala 261:20]
    node _T_1657 = and(_T_1641, _T_1656) @[Misc.scala 264:27]
    node _T_1658 = and(_T_1653, _T_1657) @[Misc.scala 265:38]
    node _T_1659 = or(_T_1643, _T_1658) @[Misc.scala 265:29]
    node _T_1660 = and(_T_1641, _T_1654) @[Misc.scala 264:27]
    node _T_1661 = and(_T_1653, _T_1660) @[Misc.scala 265:38]
    node _T_1662 = or(_T_1643, _T_1661) @[Misc.scala 265:29]
    node _T_1663 = and(_T_1644, _T_1656) @[Misc.scala 264:27]
    node _T_1664 = and(_T_1653, _T_1663) @[Misc.scala 265:38]
    node _T_1665 = or(_T_1646, _T_1664) @[Misc.scala 265:29]
    node _T_1666 = and(_T_1644, _T_1654) @[Misc.scala 264:27]
    node _T_1667 = and(_T_1653, _T_1666) @[Misc.scala 265:38]
    node _T_1668 = or(_T_1646, _T_1667) @[Misc.scala 265:29]
    node _T_1669 = and(_T_1647, _T_1656) @[Misc.scala 264:27]
    node _T_1670 = and(_T_1653, _T_1669) @[Misc.scala 265:38]
    node _T_1671 = or(_T_1649, _T_1670) @[Misc.scala 265:29]
    node _T_1672 = and(_T_1647, _T_1654) @[Misc.scala 264:27]
    node _T_1673 = and(_T_1653, _T_1672) @[Misc.scala 265:38]
    node _T_1674 = or(_T_1649, _T_1673) @[Misc.scala 265:29]
    node _T_1675 = and(_T_1650, _T_1656) @[Misc.scala 264:27]
    node _T_1676 = and(_T_1653, _T_1675) @[Misc.scala 265:38]
    node _T_1677 = or(_T_1652, _T_1676) @[Misc.scala 265:29]
    node _T_1678 = and(_T_1650, _T_1654) @[Misc.scala 264:27]
    node _T_1679 = and(_T_1653, _T_1678) @[Misc.scala 265:38]
    node _T_1680 = or(_T_1652, _T_1679) @[Misc.scala 265:29]
    node _T_1681 = cat(_T_1662, _T_1659) @[Cat.scala 30:58]
    node _T_1682 = cat(_T_1668, _T_1665) @[Cat.scala 30:58]
    node _T_1683 = cat(_T_1682, _T_1681) @[Cat.scala 30:58]
    node _T_1684 = cat(_T_1674, _T_1671) @[Cat.scala 30:58]
    node _T_1685 = cat(_T_1680, _T_1677) @[Cat.scala 30:58]
    node _T_1686 = cat(_T_1685, _T_1684) @[Cat.scala 30:58]
    node _T_1687 = cat(_T_1686, _T_1683) @[Cat.scala 30:58]
    _T_1616.mask <= _T_1687 @[Edges.scala 283:15]
    _T_1616.data <= UInt<1>("h00") @[Edges.scala 284:15]
    io.mem_acquire.bits <- _T_1616 @[NBDcache.scala 279:23]
    node _T_1689 = eq(state, UInt<4>("h08")) @[NBDcache.scala 285:31]
    io.meta_read.valid <= _T_1689 @[NBDcache.scala 285:22]
    io.meta_read.bits.idx <= req_idx @[NBDcache.scala 286:25]
    io.meta_read.bits.tag <= io.tag @[NBDcache.scala 287:25]
    node _T_1690 = eq(state, UInt<4>("h08")) @[NBDcache.scala 289:28]
    node _T_1691 = and(_T_1690, rpq.io.deq.valid) @[NBDcache.scala 289:44]
    io.replay.valid <= _T_1691 @[NBDcache.scala 289:19]
    io.replay.bits <- rpq.io.deq.bits @[NBDcache.scala 290:18]
    io.replay.bits.phys <= UInt<1>("h01") @[NBDcache.scala 291:23]
    node _T_1693 = bits(rpq.io.deq.bits.addr, 5, 0) @[NBDcache.scala 292:67]
    node _T_1694 = cat(io.tag, req_idx) @[Cat.scala 30:58]
    node _T_1695 = cat(_T_1694, _T_1693) @[Cat.scala 30:58]
    io.replay.bits.addr <= _T_1695 @[NBDcache.scala 292:23]
    node _T_1697 = eq(io.meta_read.ready, UInt<1>("h00")) @[NBDcache.scala 294:9]
    when _T_1697 : @[NBDcache.scala 294:30]
      rpq.io.deq.ready <= UInt<1>("h00") @[NBDcache.scala 295:22]
      io.replay.bits.cmd <= UInt<3>("h05") @[NBDcache.scala 296:24]
      skip @[NBDcache.scala 294:30]
    
  module Arbiter_5 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<1>}[1], out : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<1>}, chosen : UInt<0>}
    
    io.chosen <= UInt<1>("h00") @[Arbiter.scala 116:13]
    io.out.bits <= io.in[0].bits @[Arbiter.scala 117:15]
    node _T_35 = and(UInt<1>("h01"), io.out.ready) @[Arbiter.scala 127:19]
    io.in[0].ready <= _T_35 @[Arbiter.scala 127:14]
    node _T_37 = eq(UInt<1>("h01"), UInt<1>("h00")) @[Arbiter.scala 128:19]
    node _T_38 = or(_T_37, io.in[0].valid) @[Arbiter.scala 128:31]
    io.out.valid <= _T_38 @[Arbiter.scala 128:16]
    
  module Arbiter_6 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<40>, tag : UInt<7>, cmd : UInt<5>, typ : UInt<3>, data : UInt<64>, replay : UInt<1>, has_data : UInt<1>, data_word_bypass : UInt<64>, data_raw : UInt<64>, store_data : UInt<64>}}[1], out : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<40>, tag : UInt<7>, cmd : UInt<5>, typ : UInt<3>, data : UInt<64>, replay : UInt<1>, has_data : UInt<1>, data_word_bypass : UInt<64>, data_raw : UInt<64>, store_data : UInt<64>}}, chosen : UInt<0>}
    
    io.chosen <= UInt<1>("h00") @[Arbiter.scala 116:13]
    io.out.bits.store_data <= io.in[0].bits.store_data @[Arbiter.scala 117:15]
    io.out.bits.data_raw <= io.in[0].bits.data_raw @[Arbiter.scala 117:15]
    io.out.bits.data_word_bypass <= io.in[0].bits.data_word_bypass @[Arbiter.scala 117:15]
    io.out.bits.has_data <= io.in[0].bits.has_data @[Arbiter.scala 117:15]
    io.out.bits.replay <= io.in[0].bits.replay @[Arbiter.scala 117:15]
    io.out.bits.data <= io.in[0].bits.data @[Arbiter.scala 117:15]
    io.out.bits.typ <= io.in[0].bits.typ @[Arbiter.scala 117:15]
    io.out.bits.cmd <= io.in[0].bits.cmd @[Arbiter.scala 117:15]
    io.out.bits.tag <= io.in[0].bits.tag @[Arbiter.scala 117:15]
    io.out.bits.addr <= io.in[0].bits.addr @[Arbiter.scala 117:15]
    node _T_35 = and(UInt<1>("h01"), io.out.ready) @[Arbiter.scala 127:19]
    io.in[0].ready <= _T_35 @[Arbiter.scala 127:14]
    node _T_37 = eq(UInt<1>("h01"), UInt<1>("h00")) @[Arbiter.scala 128:19]
    node _T_38 = or(_T_37, io.in[0].valid) @[Arbiter.scala 128:31]
    io.out.valid <= _T_38 @[Arbiter.scala 128:16]
    
  module IOMSHR : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip req : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<40>, tag : UInt<7>, cmd : UInt<5>, typ : UInt<3>, phys : UInt<1>, data : UInt<64>}}, resp : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<40>, tag : UInt<7>, cmd : UInt<5>, typ : UInt<3>, data : UInt<64>, replay : UInt<1>, has_data : UInt<1>, data_word_bypass : UInt<64>, data_raw : UInt<64>, store_data : UInt<64>}}, mem_access : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<2>, address : UInt<32>, mask : UInt<8>, data : UInt<64>}}, flip mem_ack : {valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<2>, sink : UInt<3>, data : UInt<64>, error : UInt<1>}}, replay_next : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    reg req : {addr : UInt<40>, tag : UInt<7>, cmd : UInt<5>, typ : UInt<3>, phys : UInt<1>, data : UInt<64>}, clock @[NBDcache.scala 69:16]
    reg grant_word : UInt<64>, clock @[NBDcache.scala 70:23]
    reg state : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[NBDcache.scala 73:18]
    node _T_29 = eq(state, UInt<2>("h00")) @[NBDcache.scala 74:26]
    io.req.ready <= _T_29 @[NBDcache.scala 74:16]
    node _T_30 = bits(req.typ, 2, 2) @[Consts.scala 20:31]
    node _T_32 = eq(_T_30, UInt<1>("h00")) @[Consts.scala 20:28]
    node _T_34 = bits(req.typ, 1, 0) @[AMOALU.scala 10:17]
    node a_size = bits(req.typ, 1, 0) @[Consts.scala 19:28]
    node _T_37 = leq(UInt<1>("h00"), a_size) @[Parameters.scala 88:32]
    node _T_39 = leq(a_size, UInt<4>("h0c")) @[Parameters.scala 88:42]
    node _T_40 = and(_T_37, _T_39) @[Parameters.scala 88:37]
    node _T_41 = or(UInt<1>("h00"), _T_40) @[Parameters.scala 157:31]
    node _T_43 = xor(req.addr, UInt<14>("h02000")) @[Parameters.scala 153:31]
    node _T_44 = cvt(_T_43) @[Parameters.scala 153:49]
    node _T_46 = and(_T_44, asSInt(UInt<33>("h08a012000"))) @[Parameters.scala 153:52]
    node _T_47 = asSInt(_T_46) @[Parameters.scala 153:52]
    node _T_49 = eq(_T_47, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_50 = and(_T_41, _T_49) @[Parameters.scala 157:56]
    node _T_53 = leq(UInt<1>("h00"), a_size) @[Parameters.scala 88:32]
    node _T_55 = leq(a_size, UInt<3>("h06")) @[Parameters.scala 88:42]
    node _T_56 = and(_T_53, _T_55) @[Parameters.scala 88:37]
    node _T_57 = or(UInt<1>("h00"), _T_56) @[Parameters.scala 157:31]
    node _T_59 = xor(req.addr, UInt<28>("h08000000")) @[Parameters.scala 153:31]
    node _T_60 = cvt(_T_59) @[Parameters.scala 153:49]
    node _T_62 = and(_T_60, asSInt(UInt<33>("h088000000"))) @[Parameters.scala 153:52]
    node _T_63 = asSInt(_T_62) @[Parameters.scala 153:52]
    node _T_65 = eq(_T_63, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_67 = xor(req.addr, UInt<26>("h02000000")) @[Parameters.scala 153:31]
    node _T_68 = cvt(_T_67) @[Parameters.scala 153:49]
    node _T_70 = and(_T_68, asSInt(UInt<33>("h08a010000"))) @[Parameters.scala 153:52]
    node _T_71 = asSInt(_T_70) @[Parameters.scala 153:52]
    node _T_73 = eq(_T_71, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_75 = xor(req.addr, UInt<1>("h00")) @[Parameters.scala 153:31]
    node _T_76 = cvt(_T_75) @[Parameters.scala 153:49]
    node _T_78 = and(_T_76, asSInt(UInt<33>("h08a012000"))) @[Parameters.scala 153:52]
    node _T_79 = asSInt(_T_78) @[Parameters.scala 153:52]
    node _T_81 = eq(_T_79, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_83 = xor(req.addr, UInt<17>("h010000")) @[Parameters.scala 153:31]
    node _T_84 = cvt(_T_83) @[Parameters.scala 153:49]
    node _T_86 = and(_T_84, asSInt(UInt<33>("h08a010000"))) @[Parameters.scala 153:52]
    node _T_87 = asSInt(_T_86) @[Parameters.scala 153:52]
    node _T_89 = eq(_T_87, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_91 = xor(req.addr, UInt<32>("h080000000")) @[Parameters.scala 153:31]
    node _T_92 = cvt(_T_91) @[Parameters.scala 153:49]
    node _T_94 = and(_T_92, asSInt(UInt<33>("h080000000"))) @[Parameters.scala 153:52]
    node _T_95 = asSInt(_T_94) @[Parameters.scala 153:52]
    node _T_97 = eq(_T_95, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_98 = or(_T_65, _T_73) @[Parameters.scala 158:42]
    node _T_99 = or(_T_98, _T_81) @[Parameters.scala 158:42]
    node _T_100 = or(_T_99, _T_89) @[Parameters.scala 158:42]
    node _T_101 = or(_T_100, _T_97) @[Parameters.scala 158:42]
    node _T_102 = and(_T_57, _T_101) @[Parameters.scala 157:56]
    node _T_104 = or(UInt<1>("h00"), _T_50) @[Parameters.scala 159:30]
    node _T_105 = or(_T_104, _T_102) @[Parameters.scala 159:30]
    wire get : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<2>, address : UInt<32>, mask : UInt<8>, data : UInt<64>} @[Edges.scala 371:17]
    get is invalid @[Edges.scala 371:17]
    get.opcode <= UInt<3>("h04") @[Edges.scala 372:15]
    get.param <= UInt<1>("h00") @[Edges.scala 373:15]
    get.size <= a_size @[Edges.scala 374:15]
    get.source <= UInt<2>("h02") @[Edges.scala 375:15]
    get.address <= req.addr @[Edges.scala 376:15]
    node _T_109 = bits(a_size, 1, 0) @[OneHot.scala 49:27]
    node _T_111 = dshl(UInt<1>("h01"), _T_109) @[OneHot.scala 50:12]
    node _T_112 = bits(_T_111, 2, 0) @[OneHot.scala 50:27]
    node _T_114 = or(_T_112, UInt<1>("h01")) @[Misc.scala 252:54]
    node _T_116 = geq(a_size, UInt<2>("h03")) @[Misc.scala 256:21]
    node _T_118 = bits(_T_114, 2, 2) @[Misc.scala 259:26]
    node _T_119 = bits(req.addr, 2, 2) @[Misc.scala 260:26]
    node _T_121 = eq(_T_119, UInt<1>("h00")) @[Misc.scala 261:20]
    node _T_122 = and(UInt<1>("h01"), _T_121) @[Misc.scala 264:27]
    node _T_123 = and(_T_118, _T_122) @[Misc.scala 265:38]
    node _T_124 = or(_T_116, _T_123) @[Misc.scala 265:29]
    node _T_125 = and(UInt<1>("h01"), _T_119) @[Misc.scala 264:27]
    node _T_126 = and(_T_118, _T_125) @[Misc.scala 265:38]
    node _T_127 = or(_T_116, _T_126) @[Misc.scala 265:29]
    node _T_128 = bits(_T_114, 1, 1) @[Misc.scala 259:26]
    node _T_129 = bits(req.addr, 1, 1) @[Misc.scala 260:26]
    node _T_131 = eq(_T_129, UInt<1>("h00")) @[Misc.scala 261:20]
    node _T_132 = and(_T_122, _T_131) @[Misc.scala 264:27]
    node _T_133 = and(_T_128, _T_132) @[Misc.scala 265:38]
    node _T_134 = or(_T_124, _T_133) @[Misc.scala 265:29]
    node _T_135 = and(_T_122, _T_129) @[Misc.scala 264:27]
    node _T_136 = and(_T_128, _T_135) @[Misc.scala 265:38]
    node _T_137 = or(_T_124, _T_136) @[Misc.scala 265:29]
    node _T_138 = and(_T_125, _T_131) @[Misc.scala 264:27]
    node _T_139 = and(_T_128, _T_138) @[Misc.scala 265:38]
    node _T_140 = or(_T_127, _T_139) @[Misc.scala 265:29]
    node _T_141 = and(_T_125, _T_129) @[Misc.scala 264:27]
    node _T_142 = and(_T_128, _T_141) @[Misc.scala 265:38]
    node _T_143 = or(_T_127, _T_142) @[Misc.scala 265:29]
    node _T_144 = bits(_T_114, 0, 0) @[Misc.scala 259:26]
    node _T_145 = bits(req.addr, 0, 0) @[Misc.scala 260:26]
    node _T_147 = eq(_T_145, UInt<1>("h00")) @[Misc.scala 261:20]
    node _T_148 = and(_T_132, _T_147) @[Misc.scala 264:27]
    node _T_149 = and(_T_144, _T_148) @[Misc.scala 265:38]
    node _T_150 = or(_T_134, _T_149) @[Misc.scala 265:29]
    node _T_151 = and(_T_132, _T_145) @[Misc.scala 264:27]
    node _T_152 = and(_T_144, _T_151) @[Misc.scala 265:38]
    node _T_153 = or(_T_134, _T_152) @[Misc.scala 265:29]
    node _T_154 = and(_T_135, _T_147) @[Misc.scala 264:27]
    node _T_155 = and(_T_144, _T_154) @[Misc.scala 265:38]
    node _T_156 = or(_T_137, _T_155) @[Misc.scala 265:29]
    node _T_157 = and(_T_135, _T_145) @[Misc.scala 264:27]
    node _T_158 = and(_T_144, _T_157) @[Misc.scala 265:38]
    node _T_159 = or(_T_137, _T_158) @[Misc.scala 265:29]
    node _T_160 = and(_T_138, _T_147) @[Misc.scala 264:27]
    node _T_161 = and(_T_144, _T_160) @[Misc.scala 265:38]
    node _T_162 = or(_T_140, _T_161) @[Misc.scala 265:29]
    node _T_163 = and(_T_138, _T_145) @[Misc.scala 264:27]
    node _T_164 = and(_T_144, _T_163) @[Misc.scala 265:38]
    node _T_165 = or(_T_140, _T_164) @[Misc.scala 265:29]
    node _T_166 = and(_T_141, _T_147) @[Misc.scala 264:27]
    node _T_167 = and(_T_144, _T_166) @[Misc.scala 265:38]
    node _T_168 = or(_T_143, _T_167) @[Misc.scala 265:29]
    node _T_169 = and(_T_141, _T_145) @[Misc.scala 264:27]
    node _T_170 = and(_T_144, _T_169) @[Misc.scala 265:38]
    node _T_171 = or(_T_143, _T_170) @[Misc.scala 265:29]
    node _T_172 = cat(_T_153, _T_150) @[Cat.scala 30:58]
    node _T_173 = cat(_T_159, _T_156) @[Cat.scala 30:58]
    node _T_174 = cat(_T_173, _T_172) @[Cat.scala 30:58]
    node _T_175 = cat(_T_165, _T_162) @[Cat.scala 30:58]
    node _T_176 = cat(_T_171, _T_168) @[Cat.scala 30:58]
    node _T_177 = cat(_T_176, _T_175) @[Cat.scala 30:58]
    node _T_178 = cat(_T_177, _T_174) @[Cat.scala 30:58]
    get.mask <= _T_178 @[Edges.scala 377:15]
    get.data <= UInt<1>("h00") @[Edges.scala 378:15]
    node _T_182 = leq(UInt<1>("h00"), a_size) @[Parameters.scala 88:32]
    node _T_184 = leq(a_size, UInt<4>("h0c")) @[Parameters.scala 88:42]
    node _T_185 = and(_T_182, _T_184) @[Parameters.scala 88:37]
    node _T_186 = or(UInt<1>("h00"), _T_185) @[Parameters.scala 157:31]
    node _T_188 = xor(req.addr, UInt<14>("h02000")) @[Parameters.scala 153:31]
    node _T_189 = cvt(_T_188) @[Parameters.scala 153:49]
    node _T_191 = and(_T_189, asSInt(UInt<33>("h08a012000"))) @[Parameters.scala 153:52]
    node _T_192 = asSInt(_T_191) @[Parameters.scala 153:52]
    node _T_194 = eq(_T_192, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_195 = and(_T_186, _T_194) @[Parameters.scala 157:56]
    node _T_198 = leq(UInt<1>("h00"), a_size) @[Parameters.scala 88:32]
    node _T_200 = leq(a_size, UInt<3>("h06")) @[Parameters.scala 88:42]
    node _T_201 = and(_T_198, _T_200) @[Parameters.scala 88:37]
    node _T_202 = or(UInt<1>("h00"), _T_201) @[Parameters.scala 157:31]
    node _T_204 = xor(req.addr, UInt<28>("h08000000")) @[Parameters.scala 153:31]
    node _T_205 = cvt(_T_204) @[Parameters.scala 153:49]
    node _T_207 = and(_T_205, asSInt(UInt<33>("h088000000"))) @[Parameters.scala 153:52]
    node _T_208 = asSInt(_T_207) @[Parameters.scala 153:52]
    node _T_210 = eq(_T_208, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_212 = xor(req.addr, UInt<26>("h02000000")) @[Parameters.scala 153:31]
    node _T_213 = cvt(_T_212) @[Parameters.scala 153:49]
    node _T_215 = and(_T_213, asSInt(UInt<33>("h08a010000"))) @[Parameters.scala 153:52]
    node _T_216 = asSInt(_T_215) @[Parameters.scala 153:52]
    node _T_218 = eq(_T_216, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_220 = xor(req.addr, UInt<1>("h00")) @[Parameters.scala 153:31]
    node _T_221 = cvt(_T_220) @[Parameters.scala 153:49]
    node _T_223 = and(_T_221, asSInt(UInt<33>("h08a012000"))) @[Parameters.scala 153:52]
    node _T_224 = asSInt(_T_223) @[Parameters.scala 153:52]
    node _T_226 = eq(_T_224, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_228 = xor(req.addr, UInt<32>("h080000000")) @[Parameters.scala 153:31]
    node _T_229 = cvt(_T_228) @[Parameters.scala 153:49]
    node _T_231 = and(_T_229, asSInt(UInt<33>("h080000000"))) @[Parameters.scala 153:52]
    node _T_232 = asSInt(_T_231) @[Parameters.scala 153:52]
    node _T_234 = eq(_T_232, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_235 = or(_T_210, _T_218) @[Parameters.scala 158:42]
    node _T_236 = or(_T_235, _T_226) @[Parameters.scala 158:42]
    node _T_237 = or(_T_236, _T_234) @[Parameters.scala 158:42]
    node _T_238 = and(_T_202, _T_237) @[Parameters.scala 157:56]
    node _T_241 = or(UInt<1>("h00"), UInt<1>("h00")) @[Parameters.scala 157:31]
    node _T_243 = xor(req.addr, UInt<17>("h010000")) @[Parameters.scala 153:31]
    node _T_244 = cvt(_T_243) @[Parameters.scala 153:49]
    node _T_246 = and(_T_244, asSInt(UInt<33>("h08a010000"))) @[Parameters.scala 153:52]
    node _T_247 = asSInt(_T_246) @[Parameters.scala 153:52]
    node _T_249 = eq(_T_247, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_250 = and(_T_241, _T_249) @[Parameters.scala 157:56]
    node _T_252 = or(UInt<1>("h00"), _T_195) @[Parameters.scala 159:30]
    node _T_253 = or(_T_252, _T_238) @[Parameters.scala 159:30]
    node _T_254 = or(_T_253, _T_250) @[Parameters.scala 159:30]
    wire put : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<2>, address : UInt<32>, mask : UInt<8>, data : UInt<64>} @[Edges.scala 385:17]
    put is invalid @[Edges.scala 385:17]
    put.opcode <= UInt<1>("h00") @[Edges.scala 386:15]
    put.param <= UInt<1>("h00") @[Edges.scala 387:15]
    put.size <= a_size @[Edges.scala 388:15]
    put.source <= UInt<2>("h02") @[Edges.scala 389:15]
    put.address <= req.addr @[Edges.scala 390:15]
    node _T_258 = bits(a_size, 1, 0) @[OneHot.scala 49:27]
    node _T_260 = dshl(UInt<1>("h01"), _T_258) @[OneHot.scala 50:12]
    node _T_261 = bits(_T_260, 2, 0) @[OneHot.scala 50:27]
    node _T_263 = or(_T_261, UInt<1>("h01")) @[Misc.scala 252:54]
    node _T_265 = geq(a_size, UInt<2>("h03")) @[Misc.scala 256:21]
    node _T_267 = bits(_T_263, 2, 2) @[Misc.scala 259:26]
    node _T_268 = bits(req.addr, 2, 2) @[Misc.scala 260:26]
    node _T_270 = eq(_T_268, UInt<1>("h00")) @[Misc.scala 261:20]
    node _T_271 = and(UInt<1>("h01"), _T_270) @[Misc.scala 264:27]
    node _T_272 = and(_T_267, _T_271) @[Misc.scala 265:38]
    node _T_273 = or(_T_265, _T_272) @[Misc.scala 265:29]
    node _T_274 = and(UInt<1>("h01"), _T_268) @[Misc.scala 264:27]
    node _T_275 = and(_T_267, _T_274) @[Misc.scala 265:38]
    node _T_276 = or(_T_265, _T_275) @[Misc.scala 265:29]
    node _T_277 = bits(_T_263, 1, 1) @[Misc.scala 259:26]
    node _T_278 = bits(req.addr, 1, 1) @[Misc.scala 260:26]
    node _T_280 = eq(_T_278, UInt<1>("h00")) @[Misc.scala 261:20]
    node _T_281 = and(_T_271, _T_280) @[Misc.scala 264:27]
    node _T_282 = and(_T_277, _T_281) @[Misc.scala 265:38]
    node _T_283 = or(_T_273, _T_282) @[Misc.scala 265:29]
    node _T_284 = and(_T_271, _T_278) @[Misc.scala 264:27]
    node _T_285 = and(_T_277, _T_284) @[Misc.scala 265:38]
    node _T_286 = or(_T_273, _T_285) @[Misc.scala 265:29]
    node _T_287 = and(_T_274, _T_280) @[Misc.scala 264:27]
    node _T_288 = and(_T_277, _T_287) @[Misc.scala 265:38]
    node _T_289 = or(_T_276, _T_288) @[Misc.scala 265:29]
    node _T_290 = and(_T_274, _T_278) @[Misc.scala 264:27]
    node _T_291 = and(_T_277, _T_290) @[Misc.scala 265:38]
    node _T_292 = or(_T_276, _T_291) @[Misc.scala 265:29]
    node _T_293 = bits(_T_263, 0, 0) @[Misc.scala 259:26]
    node _T_294 = bits(req.addr, 0, 0) @[Misc.scala 260:26]
    node _T_296 = eq(_T_294, UInt<1>("h00")) @[Misc.scala 261:20]
    node _T_297 = and(_T_281, _T_296) @[Misc.scala 264:27]
    node _T_298 = and(_T_293, _T_297) @[Misc.scala 265:38]
    node _T_299 = or(_T_283, _T_298) @[Misc.scala 265:29]
    node _T_300 = and(_T_281, _T_294) @[Misc.scala 264:27]
    node _T_301 = and(_T_293, _T_300) @[Misc.scala 265:38]
    node _T_302 = or(_T_283, _T_301) @[Misc.scala 265:29]
    node _T_303 = and(_T_284, _T_296) @[Misc.scala 264:27]
    node _T_304 = and(_T_293, _T_303) @[Misc.scala 265:38]
    node _T_305 = or(_T_286, _T_304) @[Misc.scala 265:29]
    node _T_306 = and(_T_284, _T_294) @[Misc.scala 264:27]
    node _T_307 = and(_T_293, _T_306) @[Misc.scala 265:38]
    node _T_308 = or(_T_286, _T_307) @[Misc.scala 265:29]
    node _T_309 = and(_T_287, _T_296) @[Misc.scala 264:27]
    node _T_310 = and(_T_293, _T_309) @[Misc.scala 265:38]
    node _T_311 = or(_T_289, _T_310) @[Misc.scala 265:29]
    node _T_312 = and(_T_287, _T_294) @[Misc.scala 264:27]
    node _T_313 = and(_T_293, _T_312) @[Misc.scala 265:38]
    node _T_314 = or(_T_289, _T_313) @[Misc.scala 265:29]
    node _T_315 = and(_T_290, _T_296) @[Misc.scala 264:27]
    node _T_316 = and(_T_293, _T_315) @[Misc.scala 265:38]
    node _T_317 = or(_T_292, _T_316) @[Misc.scala 265:29]
    node _T_318 = and(_T_290, _T_294) @[Misc.scala 264:27]
    node _T_319 = and(_T_293, _T_318) @[Misc.scala 265:38]
    node _T_320 = or(_T_292, _T_319) @[Misc.scala 265:29]
    node _T_321 = cat(_T_302, _T_299) @[Cat.scala 30:58]
    node _T_322 = cat(_T_308, _T_305) @[Cat.scala 30:58]
    node _T_323 = cat(_T_322, _T_321) @[Cat.scala 30:58]
    node _T_324 = cat(_T_314, _T_311) @[Cat.scala 30:58]
    node _T_325 = cat(_T_320, _T_317) @[Cat.scala 30:58]
    node _T_326 = cat(_T_325, _T_324) @[Cat.scala 30:58]
    node _T_327 = cat(_T_326, _T_323) @[Cat.scala 30:58]
    put.mask <= _T_327 @[Edges.scala 391:15]
    put.data <= req.data @[Edges.scala 392:15]
    wire _T_329 : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<2>, address : UInt<32>, mask : UInt<8>, data : UInt<64>} @[NBDcache.scala 86:28]
    _T_329 is invalid @[NBDcache.scala 86:28]
    node _T_334 = leq(UInt<1>("h00"), a_size) @[Parameters.scala 88:32]
    node _T_336 = leq(a_size, UInt<2>("h03")) @[Parameters.scala 88:42]
    node _T_337 = and(_T_334, _T_336) @[Parameters.scala 88:37]
    node _T_338 = or(UInt<1>("h00"), _T_337) @[Parameters.scala 157:31]
    node _T_340 = xor(req.addr, UInt<28>("h08000000")) @[Parameters.scala 153:31]
    node _T_341 = cvt(_T_340) @[Parameters.scala 153:49]
    node _T_343 = and(_T_341, asSInt(UInt<33>("h088000000"))) @[Parameters.scala 153:52]
    node _T_344 = asSInt(_T_343) @[Parameters.scala 153:52]
    node _T_346 = eq(_T_344, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_348 = xor(req.addr, UInt<1>("h00")) @[Parameters.scala 153:31]
    node _T_349 = cvt(_T_348) @[Parameters.scala 153:49]
    node _T_351 = and(_T_349, asSInt(UInt<33>("h088010000"))) @[Parameters.scala 153:52]
    node _T_352 = asSInt(_T_351) @[Parameters.scala 153:52]
    node _T_354 = eq(_T_352, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_355 = or(_T_346, _T_354) @[Parameters.scala 158:42]
    node _T_356 = and(_T_338, _T_355) @[Parameters.scala 157:56]
    node _T_359 = or(UInt<1>("h00"), UInt<1>("h00")) @[Parameters.scala 157:31]
    node _T_361 = xor(req.addr, UInt<17>("h010000")) @[Parameters.scala 153:31]
    node _T_362 = cvt(_T_361) @[Parameters.scala 153:49]
    node _T_364 = and(_T_362, asSInt(UInt<33>("h088010000"))) @[Parameters.scala 153:52]
    node _T_365 = asSInt(_T_364) @[Parameters.scala 153:52]
    node _T_367 = eq(_T_365, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_369 = xor(req.addr, UInt<32>("h080000000")) @[Parameters.scala 153:31]
    node _T_370 = cvt(_T_369) @[Parameters.scala 153:49]
    node _T_372 = and(_T_370, asSInt(UInt<33>("h080000000"))) @[Parameters.scala 153:52]
    node _T_373 = asSInt(_T_372) @[Parameters.scala 153:52]
    node _T_375 = eq(_T_373, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_376 = or(_T_367, _T_375) @[Parameters.scala 158:42]
    node _T_377 = and(_T_359, _T_376) @[Parameters.scala 157:56]
    node _T_379 = or(UInt<1>("h00"), _T_356) @[Parameters.scala 159:30]
    node _T_380 = or(_T_379, _T_377) @[Parameters.scala 159:30]
    wire _T_382 : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<2>, address : UInt<32>, mask : UInt<8>, data : UInt<64>} @[Edges.scala 427:17]
    _T_382 is invalid @[Edges.scala 427:17]
    _T_382.opcode <= UInt<2>("h03") @[Edges.scala 428:15]
    _T_382.param <= UInt<3>("h03") @[Edges.scala 429:15]
    _T_382.size <= a_size @[Edges.scala 430:15]
    _T_382.source <= UInt<2>("h02") @[Edges.scala 431:15]
    _T_382.address <= req.addr @[Edges.scala 432:15]
    node _T_384 = bits(a_size, 1, 0) @[OneHot.scala 49:27]
    node _T_386 = dshl(UInt<1>("h01"), _T_384) @[OneHot.scala 50:12]
    node _T_387 = bits(_T_386, 2, 0) @[OneHot.scala 50:27]
    node _T_389 = or(_T_387, UInt<1>("h01")) @[Misc.scala 252:54]
    node _T_391 = geq(a_size, UInt<2>("h03")) @[Misc.scala 256:21]
    node _T_393 = bits(_T_389, 2, 2) @[Misc.scala 259:26]
    node _T_394 = bits(req.addr, 2, 2) @[Misc.scala 260:26]
    node _T_396 = eq(_T_394, UInt<1>("h00")) @[Misc.scala 261:20]
    node _T_397 = and(UInt<1>("h01"), _T_396) @[Misc.scala 264:27]
    node _T_398 = and(_T_393, _T_397) @[Misc.scala 265:38]
    node _T_399 = or(_T_391, _T_398) @[Misc.scala 265:29]
    node _T_400 = and(UInt<1>("h01"), _T_394) @[Misc.scala 264:27]
    node _T_401 = and(_T_393, _T_400) @[Misc.scala 265:38]
    node _T_402 = or(_T_391, _T_401) @[Misc.scala 265:29]
    node _T_403 = bits(_T_389, 1, 1) @[Misc.scala 259:26]
    node _T_404 = bits(req.addr, 1, 1) @[Misc.scala 260:26]
    node _T_406 = eq(_T_404, UInt<1>("h00")) @[Misc.scala 261:20]
    node _T_407 = and(_T_397, _T_406) @[Misc.scala 264:27]
    node _T_408 = and(_T_403, _T_407) @[Misc.scala 265:38]
    node _T_409 = or(_T_399, _T_408) @[Misc.scala 265:29]
    node _T_410 = and(_T_397, _T_404) @[Misc.scala 264:27]
    node _T_411 = and(_T_403, _T_410) @[Misc.scala 265:38]
    node _T_412 = or(_T_399, _T_411) @[Misc.scala 265:29]
    node _T_413 = and(_T_400, _T_406) @[Misc.scala 264:27]
    node _T_414 = and(_T_403, _T_413) @[Misc.scala 265:38]
    node _T_415 = or(_T_402, _T_414) @[Misc.scala 265:29]
    node _T_416 = and(_T_400, _T_404) @[Misc.scala 264:27]
    node _T_417 = and(_T_403, _T_416) @[Misc.scala 265:38]
    node _T_418 = or(_T_402, _T_417) @[Misc.scala 265:29]
    node _T_419 = bits(_T_389, 0, 0) @[Misc.scala 259:26]
    node _T_420 = bits(req.addr, 0, 0) @[Misc.scala 260:26]
    node _T_422 = eq(_T_420, UInt<1>("h00")) @[Misc.scala 261:20]
    node _T_423 = and(_T_407, _T_422) @[Misc.scala 264:27]
    node _T_424 = and(_T_419, _T_423) @[Misc.scala 265:38]
    node _T_425 = or(_T_409, _T_424) @[Misc.scala 265:29]
    node _T_426 = and(_T_407, _T_420) @[Misc.scala 264:27]
    node _T_427 = and(_T_419, _T_426) @[Misc.scala 265:38]
    node _T_428 = or(_T_409, _T_427) @[Misc.scala 265:29]
    node _T_429 = and(_T_410, _T_422) @[Misc.scala 264:27]
    node _T_430 = and(_T_419, _T_429) @[Misc.scala 265:38]
    node _T_431 = or(_T_412, _T_430) @[Misc.scala 265:29]
    node _T_432 = and(_T_410, _T_420) @[Misc.scala 264:27]
    node _T_433 = and(_T_419, _T_432) @[Misc.scala 265:38]
    node _T_434 = or(_T_412, _T_433) @[Misc.scala 265:29]
    node _T_435 = and(_T_413, _T_422) @[Misc.scala 264:27]
    node _T_436 = and(_T_419, _T_435) @[Misc.scala 265:38]
    node _T_437 = or(_T_415, _T_436) @[Misc.scala 265:29]
    node _T_438 = and(_T_413, _T_420) @[Misc.scala 264:27]
    node _T_439 = and(_T_419, _T_438) @[Misc.scala 265:38]
    node _T_440 = or(_T_415, _T_439) @[Misc.scala 265:29]
    node _T_441 = and(_T_416, _T_422) @[Misc.scala 264:27]
    node _T_442 = and(_T_419, _T_441) @[Misc.scala 265:38]
    node _T_443 = or(_T_418, _T_442) @[Misc.scala 265:29]
    node _T_444 = and(_T_416, _T_420) @[Misc.scala 264:27]
    node _T_445 = and(_T_419, _T_444) @[Misc.scala 265:38]
    node _T_446 = or(_T_418, _T_445) @[Misc.scala 265:29]
    node _T_447 = cat(_T_428, _T_425) @[Cat.scala 30:58]
    node _T_448 = cat(_T_434, _T_431) @[Cat.scala 30:58]
    node _T_449 = cat(_T_448, _T_447) @[Cat.scala 30:58]
    node _T_450 = cat(_T_440, _T_437) @[Cat.scala 30:58]
    node _T_451 = cat(_T_446, _T_443) @[Cat.scala 30:58]
    node _T_452 = cat(_T_451, _T_450) @[Cat.scala 30:58]
    node _T_453 = cat(_T_452, _T_449) @[Cat.scala 30:58]
    _T_382.mask <= _T_453 @[Edges.scala 433:15]
    _T_382.data <= req.data @[Edges.scala 434:15]
    node _T_458 = leq(UInt<1>("h00"), a_size) @[Parameters.scala 88:32]
    node _T_460 = leq(a_size, UInt<2>("h03")) @[Parameters.scala 88:42]
    node _T_461 = and(_T_458, _T_460) @[Parameters.scala 88:37]
    node _T_462 = or(UInt<1>("h00"), _T_461) @[Parameters.scala 157:31]
    node _T_464 = xor(req.addr, UInt<28>("h08000000")) @[Parameters.scala 153:31]
    node _T_465 = cvt(_T_464) @[Parameters.scala 153:49]
    node _T_467 = and(_T_465, asSInt(UInt<33>("h088000000"))) @[Parameters.scala 153:52]
    node _T_468 = asSInt(_T_467) @[Parameters.scala 153:52]
    node _T_470 = eq(_T_468, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_472 = xor(req.addr, UInt<1>("h00")) @[Parameters.scala 153:31]
    node _T_473 = cvt(_T_472) @[Parameters.scala 153:49]
    node _T_475 = and(_T_473, asSInt(UInt<33>("h088010000"))) @[Parameters.scala 153:52]
    node _T_476 = asSInt(_T_475) @[Parameters.scala 153:52]
    node _T_478 = eq(_T_476, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_479 = or(_T_470, _T_478) @[Parameters.scala 158:42]
    node _T_480 = and(_T_462, _T_479) @[Parameters.scala 157:56]
    node _T_483 = or(UInt<1>("h00"), UInt<1>("h00")) @[Parameters.scala 157:31]
    node _T_485 = xor(req.addr, UInt<17>("h010000")) @[Parameters.scala 153:31]
    node _T_486 = cvt(_T_485) @[Parameters.scala 153:49]
    node _T_488 = and(_T_486, asSInt(UInt<33>("h088010000"))) @[Parameters.scala 153:52]
    node _T_489 = asSInt(_T_488) @[Parameters.scala 153:52]
    node _T_491 = eq(_T_489, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_493 = xor(req.addr, UInt<32>("h080000000")) @[Parameters.scala 153:31]
    node _T_494 = cvt(_T_493) @[Parameters.scala 153:49]
    node _T_496 = and(_T_494, asSInt(UInt<33>("h080000000"))) @[Parameters.scala 153:52]
    node _T_497 = asSInt(_T_496) @[Parameters.scala 153:52]
    node _T_499 = eq(_T_497, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_500 = or(_T_491, _T_499) @[Parameters.scala 158:42]
    node _T_501 = and(_T_483, _T_500) @[Parameters.scala 157:56]
    node _T_503 = or(UInt<1>("h00"), _T_480) @[Parameters.scala 159:30]
    node _T_504 = or(_T_503, _T_501) @[Parameters.scala 159:30]
    wire _T_506 : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<2>, address : UInt<32>, mask : UInt<8>, data : UInt<64>} @[Edges.scala 427:17]
    _T_506 is invalid @[Edges.scala 427:17]
    _T_506.opcode <= UInt<2>("h03") @[Edges.scala 428:15]
    _T_506.param <= UInt<3>("h00") @[Edges.scala 429:15]
    _T_506.size <= a_size @[Edges.scala 430:15]
    _T_506.source <= UInt<2>("h02") @[Edges.scala 431:15]
    _T_506.address <= req.addr @[Edges.scala 432:15]
    node _T_508 = bits(a_size, 1, 0) @[OneHot.scala 49:27]
    node _T_510 = dshl(UInt<1>("h01"), _T_508) @[OneHot.scala 50:12]
    node _T_511 = bits(_T_510, 2, 0) @[OneHot.scala 50:27]
    node _T_513 = or(_T_511, UInt<1>("h01")) @[Misc.scala 252:54]
    node _T_515 = geq(a_size, UInt<2>("h03")) @[Misc.scala 256:21]
    node _T_517 = bits(_T_513, 2, 2) @[Misc.scala 259:26]
    node _T_518 = bits(req.addr, 2, 2) @[Misc.scala 260:26]
    node _T_520 = eq(_T_518, UInt<1>("h00")) @[Misc.scala 261:20]
    node _T_521 = and(UInt<1>("h01"), _T_520) @[Misc.scala 264:27]
    node _T_522 = and(_T_517, _T_521) @[Misc.scala 265:38]
    node _T_523 = or(_T_515, _T_522) @[Misc.scala 265:29]
    node _T_524 = and(UInt<1>("h01"), _T_518) @[Misc.scala 264:27]
    node _T_525 = and(_T_517, _T_524) @[Misc.scala 265:38]
    node _T_526 = or(_T_515, _T_525) @[Misc.scala 265:29]
    node _T_527 = bits(_T_513, 1, 1) @[Misc.scala 259:26]
    node _T_528 = bits(req.addr, 1, 1) @[Misc.scala 260:26]
    node _T_530 = eq(_T_528, UInt<1>("h00")) @[Misc.scala 261:20]
    node _T_531 = and(_T_521, _T_530) @[Misc.scala 264:27]
    node _T_532 = and(_T_527, _T_531) @[Misc.scala 265:38]
    node _T_533 = or(_T_523, _T_532) @[Misc.scala 265:29]
    node _T_534 = and(_T_521, _T_528) @[Misc.scala 264:27]
    node _T_535 = and(_T_527, _T_534) @[Misc.scala 265:38]
    node _T_536 = or(_T_523, _T_535) @[Misc.scala 265:29]
    node _T_537 = and(_T_524, _T_530) @[Misc.scala 264:27]
    node _T_538 = and(_T_527, _T_537) @[Misc.scala 265:38]
    node _T_539 = or(_T_526, _T_538) @[Misc.scala 265:29]
    node _T_540 = and(_T_524, _T_528) @[Misc.scala 264:27]
    node _T_541 = and(_T_527, _T_540) @[Misc.scala 265:38]
    node _T_542 = or(_T_526, _T_541) @[Misc.scala 265:29]
    node _T_543 = bits(_T_513, 0, 0) @[Misc.scala 259:26]
    node _T_544 = bits(req.addr, 0, 0) @[Misc.scala 260:26]
    node _T_546 = eq(_T_544, UInt<1>("h00")) @[Misc.scala 261:20]
    node _T_547 = and(_T_531, _T_546) @[Misc.scala 264:27]
    node _T_548 = and(_T_543, _T_547) @[Misc.scala 265:38]
    node _T_549 = or(_T_533, _T_548) @[Misc.scala 265:29]
    node _T_550 = and(_T_531, _T_544) @[Misc.scala 264:27]
    node _T_551 = and(_T_543, _T_550) @[Misc.scala 265:38]
    node _T_552 = or(_T_533, _T_551) @[Misc.scala 265:29]
    node _T_553 = and(_T_534, _T_546) @[Misc.scala 264:27]
    node _T_554 = and(_T_543, _T_553) @[Misc.scala 265:38]
    node _T_555 = or(_T_536, _T_554) @[Misc.scala 265:29]
    node _T_556 = and(_T_534, _T_544) @[Misc.scala 264:27]
    node _T_557 = and(_T_543, _T_556) @[Misc.scala 265:38]
    node _T_558 = or(_T_536, _T_557) @[Misc.scala 265:29]
    node _T_559 = and(_T_537, _T_546) @[Misc.scala 264:27]
    node _T_560 = and(_T_543, _T_559) @[Misc.scala 265:38]
    node _T_561 = or(_T_539, _T_560) @[Misc.scala 265:29]
    node _T_562 = and(_T_537, _T_544) @[Misc.scala 264:27]
    node _T_563 = and(_T_543, _T_562) @[Misc.scala 265:38]
    node _T_564 = or(_T_539, _T_563) @[Misc.scala 265:29]
    node _T_565 = and(_T_540, _T_546) @[Misc.scala 264:27]
    node _T_566 = and(_T_543, _T_565) @[Misc.scala 265:38]
    node _T_567 = or(_T_542, _T_566) @[Misc.scala 265:29]
    node _T_568 = and(_T_540, _T_544) @[Misc.scala 264:27]
    node _T_569 = and(_T_543, _T_568) @[Misc.scala 265:38]
    node _T_570 = or(_T_542, _T_569) @[Misc.scala 265:29]
    node _T_571 = cat(_T_552, _T_549) @[Cat.scala 30:58]
    node _T_572 = cat(_T_558, _T_555) @[Cat.scala 30:58]
    node _T_573 = cat(_T_572, _T_571) @[Cat.scala 30:58]
    node _T_574 = cat(_T_564, _T_561) @[Cat.scala 30:58]
    node _T_575 = cat(_T_570, _T_567) @[Cat.scala 30:58]
    node _T_576 = cat(_T_575, _T_574) @[Cat.scala 30:58]
    node _T_577 = cat(_T_576, _T_573) @[Cat.scala 30:58]
    _T_506.mask <= _T_577 @[Edges.scala 433:15]
    _T_506.data <= req.data @[Edges.scala 434:15]
    node _T_582 = leq(UInt<1>("h00"), a_size) @[Parameters.scala 88:32]
    node _T_584 = leq(a_size, UInt<2>("h03")) @[Parameters.scala 88:42]
    node _T_585 = and(_T_582, _T_584) @[Parameters.scala 88:37]
    node _T_586 = or(UInt<1>("h00"), _T_585) @[Parameters.scala 157:31]
    node _T_588 = xor(req.addr, UInt<28>("h08000000")) @[Parameters.scala 153:31]
    node _T_589 = cvt(_T_588) @[Parameters.scala 153:49]
    node _T_591 = and(_T_589, asSInt(UInt<33>("h088000000"))) @[Parameters.scala 153:52]
    node _T_592 = asSInt(_T_591) @[Parameters.scala 153:52]
    node _T_594 = eq(_T_592, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_596 = xor(req.addr, UInt<1>("h00")) @[Parameters.scala 153:31]
    node _T_597 = cvt(_T_596) @[Parameters.scala 153:49]
    node _T_599 = and(_T_597, asSInt(UInt<33>("h088010000"))) @[Parameters.scala 153:52]
    node _T_600 = asSInt(_T_599) @[Parameters.scala 153:52]
    node _T_602 = eq(_T_600, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_603 = or(_T_594, _T_602) @[Parameters.scala 158:42]
    node _T_604 = and(_T_586, _T_603) @[Parameters.scala 157:56]
    node _T_607 = or(UInt<1>("h00"), UInt<1>("h00")) @[Parameters.scala 157:31]
    node _T_609 = xor(req.addr, UInt<17>("h010000")) @[Parameters.scala 153:31]
    node _T_610 = cvt(_T_609) @[Parameters.scala 153:49]
    node _T_612 = and(_T_610, asSInt(UInt<33>("h088010000"))) @[Parameters.scala 153:52]
    node _T_613 = asSInt(_T_612) @[Parameters.scala 153:52]
    node _T_615 = eq(_T_613, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_617 = xor(req.addr, UInt<32>("h080000000")) @[Parameters.scala 153:31]
    node _T_618 = cvt(_T_617) @[Parameters.scala 153:49]
    node _T_620 = and(_T_618, asSInt(UInt<33>("h080000000"))) @[Parameters.scala 153:52]
    node _T_621 = asSInt(_T_620) @[Parameters.scala 153:52]
    node _T_623 = eq(_T_621, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_624 = or(_T_615, _T_623) @[Parameters.scala 158:42]
    node _T_625 = and(_T_607, _T_624) @[Parameters.scala 157:56]
    node _T_627 = or(UInt<1>("h00"), _T_604) @[Parameters.scala 159:30]
    node _T_628 = or(_T_627, _T_625) @[Parameters.scala 159:30]
    wire _T_630 : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<2>, address : UInt<32>, mask : UInt<8>, data : UInt<64>} @[Edges.scala 427:17]
    _T_630 is invalid @[Edges.scala 427:17]
    _T_630.opcode <= UInt<2>("h03") @[Edges.scala 428:15]
    _T_630.param <= UInt<3>("h01") @[Edges.scala 429:15]
    _T_630.size <= a_size @[Edges.scala 430:15]
    _T_630.source <= UInt<2>("h02") @[Edges.scala 431:15]
    _T_630.address <= req.addr @[Edges.scala 432:15]
    node _T_632 = bits(a_size, 1, 0) @[OneHot.scala 49:27]
    node _T_634 = dshl(UInt<1>("h01"), _T_632) @[OneHot.scala 50:12]
    node _T_635 = bits(_T_634, 2, 0) @[OneHot.scala 50:27]
    node _T_637 = or(_T_635, UInt<1>("h01")) @[Misc.scala 252:54]
    node _T_639 = geq(a_size, UInt<2>("h03")) @[Misc.scala 256:21]
    node _T_641 = bits(_T_637, 2, 2) @[Misc.scala 259:26]
    node _T_642 = bits(req.addr, 2, 2) @[Misc.scala 260:26]
    node _T_644 = eq(_T_642, UInt<1>("h00")) @[Misc.scala 261:20]
    node _T_645 = and(UInt<1>("h01"), _T_644) @[Misc.scala 264:27]
    node _T_646 = and(_T_641, _T_645) @[Misc.scala 265:38]
    node _T_647 = or(_T_639, _T_646) @[Misc.scala 265:29]
    node _T_648 = and(UInt<1>("h01"), _T_642) @[Misc.scala 264:27]
    node _T_649 = and(_T_641, _T_648) @[Misc.scala 265:38]
    node _T_650 = or(_T_639, _T_649) @[Misc.scala 265:29]
    node _T_651 = bits(_T_637, 1, 1) @[Misc.scala 259:26]
    node _T_652 = bits(req.addr, 1, 1) @[Misc.scala 260:26]
    node _T_654 = eq(_T_652, UInt<1>("h00")) @[Misc.scala 261:20]
    node _T_655 = and(_T_645, _T_654) @[Misc.scala 264:27]
    node _T_656 = and(_T_651, _T_655) @[Misc.scala 265:38]
    node _T_657 = or(_T_647, _T_656) @[Misc.scala 265:29]
    node _T_658 = and(_T_645, _T_652) @[Misc.scala 264:27]
    node _T_659 = and(_T_651, _T_658) @[Misc.scala 265:38]
    node _T_660 = or(_T_647, _T_659) @[Misc.scala 265:29]
    node _T_661 = and(_T_648, _T_654) @[Misc.scala 264:27]
    node _T_662 = and(_T_651, _T_661) @[Misc.scala 265:38]
    node _T_663 = or(_T_650, _T_662) @[Misc.scala 265:29]
    node _T_664 = and(_T_648, _T_652) @[Misc.scala 264:27]
    node _T_665 = and(_T_651, _T_664) @[Misc.scala 265:38]
    node _T_666 = or(_T_650, _T_665) @[Misc.scala 265:29]
    node _T_667 = bits(_T_637, 0, 0) @[Misc.scala 259:26]
    node _T_668 = bits(req.addr, 0, 0) @[Misc.scala 260:26]
    node _T_670 = eq(_T_668, UInt<1>("h00")) @[Misc.scala 261:20]
    node _T_671 = and(_T_655, _T_670) @[Misc.scala 264:27]
    node _T_672 = and(_T_667, _T_671) @[Misc.scala 265:38]
    node _T_673 = or(_T_657, _T_672) @[Misc.scala 265:29]
    node _T_674 = and(_T_655, _T_668) @[Misc.scala 264:27]
    node _T_675 = and(_T_667, _T_674) @[Misc.scala 265:38]
    node _T_676 = or(_T_657, _T_675) @[Misc.scala 265:29]
    node _T_677 = and(_T_658, _T_670) @[Misc.scala 264:27]
    node _T_678 = and(_T_667, _T_677) @[Misc.scala 265:38]
    node _T_679 = or(_T_660, _T_678) @[Misc.scala 265:29]
    node _T_680 = and(_T_658, _T_668) @[Misc.scala 264:27]
    node _T_681 = and(_T_667, _T_680) @[Misc.scala 265:38]
    node _T_682 = or(_T_660, _T_681) @[Misc.scala 265:29]
    node _T_683 = and(_T_661, _T_670) @[Misc.scala 264:27]
    node _T_684 = and(_T_667, _T_683) @[Misc.scala 265:38]
    node _T_685 = or(_T_663, _T_684) @[Misc.scala 265:29]
    node _T_686 = and(_T_661, _T_668) @[Misc.scala 264:27]
    node _T_687 = and(_T_667, _T_686) @[Misc.scala 265:38]
    node _T_688 = or(_T_663, _T_687) @[Misc.scala 265:29]
    node _T_689 = and(_T_664, _T_670) @[Misc.scala 264:27]
    node _T_690 = and(_T_667, _T_689) @[Misc.scala 265:38]
    node _T_691 = or(_T_666, _T_690) @[Misc.scala 265:29]
    node _T_692 = and(_T_664, _T_668) @[Misc.scala 264:27]
    node _T_693 = and(_T_667, _T_692) @[Misc.scala 265:38]
    node _T_694 = or(_T_666, _T_693) @[Misc.scala 265:29]
    node _T_695 = cat(_T_676, _T_673) @[Cat.scala 30:58]
    node _T_696 = cat(_T_682, _T_679) @[Cat.scala 30:58]
    node _T_697 = cat(_T_696, _T_695) @[Cat.scala 30:58]
    node _T_698 = cat(_T_688, _T_685) @[Cat.scala 30:58]
    node _T_699 = cat(_T_694, _T_691) @[Cat.scala 30:58]
    node _T_700 = cat(_T_699, _T_698) @[Cat.scala 30:58]
    node _T_701 = cat(_T_700, _T_697) @[Cat.scala 30:58]
    _T_630.mask <= _T_701 @[Edges.scala 433:15]
    _T_630.data <= req.data @[Edges.scala 434:15]
    node _T_706 = leq(UInt<1>("h00"), a_size) @[Parameters.scala 88:32]
    node _T_708 = leq(a_size, UInt<2>("h03")) @[Parameters.scala 88:42]
    node _T_709 = and(_T_706, _T_708) @[Parameters.scala 88:37]
    node _T_710 = or(UInt<1>("h00"), _T_709) @[Parameters.scala 157:31]
    node _T_712 = xor(req.addr, UInt<28>("h08000000")) @[Parameters.scala 153:31]
    node _T_713 = cvt(_T_712) @[Parameters.scala 153:49]
    node _T_715 = and(_T_713, asSInt(UInt<33>("h088000000"))) @[Parameters.scala 153:52]
    node _T_716 = asSInt(_T_715) @[Parameters.scala 153:52]
    node _T_718 = eq(_T_716, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_720 = xor(req.addr, UInt<1>("h00")) @[Parameters.scala 153:31]
    node _T_721 = cvt(_T_720) @[Parameters.scala 153:49]
    node _T_723 = and(_T_721, asSInt(UInt<33>("h088010000"))) @[Parameters.scala 153:52]
    node _T_724 = asSInt(_T_723) @[Parameters.scala 153:52]
    node _T_726 = eq(_T_724, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_727 = or(_T_718, _T_726) @[Parameters.scala 158:42]
    node _T_728 = and(_T_710, _T_727) @[Parameters.scala 157:56]
    node _T_731 = or(UInt<1>("h00"), UInt<1>("h00")) @[Parameters.scala 157:31]
    node _T_733 = xor(req.addr, UInt<17>("h010000")) @[Parameters.scala 153:31]
    node _T_734 = cvt(_T_733) @[Parameters.scala 153:49]
    node _T_736 = and(_T_734, asSInt(UInt<33>("h088010000"))) @[Parameters.scala 153:52]
    node _T_737 = asSInt(_T_736) @[Parameters.scala 153:52]
    node _T_739 = eq(_T_737, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_741 = xor(req.addr, UInt<32>("h080000000")) @[Parameters.scala 153:31]
    node _T_742 = cvt(_T_741) @[Parameters.scala 153:49]
    node _T_744 = and(_T_742, asSInt(UInt<33>("h080000000"))) @[Parameters.scala 153:52]
    node _T_745 = asSInt(_T_744) @[Parameters.scala 153:52]
    node _T_747 = eq(_T_745, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_748 = or(_T_739, _T_747) @[Parameters.scala 158:42]
    node _T_749 = and(_T_731, _T_748) @[Parameters.scala 157:56]
    node _T_751 = or(UInt<1>("h00"), _T_728) @[Parameters.scala 159:30]
    node _T_752 = or(_T_751, _T_749) @[Parameters.scala 159:30]
    wire _T_754 : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<2>, address : UInt<32>, mask : UInt<8>, data : UInt<64>} @[Edges.scala 427:17]
    _T_754 is invalid @[Edges.scala 427:17]
    _T_754.opcode <= UInt<2>("h03") @[Edges.scala 428:15]
    _T_754.param <= UInt<3>("h02") @[Edges.scala 429:15]
    _T_754.size <= a_size @[Edges.scala 430:15]
    _T_754.source <= UInt<2>("h02") @[Edges.scala 431:15]
    _T_754.address <= req.addr @[Edges.scala 432:15]
    node _T_756 = bits(a_size, 1, 0) @[OneHot.scala 49:27]
    node _T_758 = dshl(UInt<1>("h01"), _T_756) @[OneHot.scala 50:12]
    node _T_759 = bits(_T_758, 2, 0) @[OneHot.scala 50:27]
    node _T_761 = or(_T_759, UInt<1>("h01")) @[Misc.scala 252:54]
    node _T_763 = geq(a_size, UInt<2>("h03")) @[Misc.scala 256:21]
    node _T_765 = bits(_T_761, 2, 2) @[Misc.scala 259:26]
    node _T_766 = bits(req.addr, 2, 2) @[Misc.scala 260:26]
    node _T_768 = eq(_T_766, UInt<1>("h00")) @[Misc.scala 261:20]
    node _T_769 = and(UInt<1>("h01"), _T_768) @[Misc.scala 264:27]
    node _T_770 = and(_T_765, _T_769) @[Misc.scala 265:38]
    node _T_771 = or(_T_763, _T_770) @[Misc.scala 265:29]
    node _T_772 = and(UInt<1>("h01"), _T_766) @[Misc.scala 264:27]
    node _T_773 = and(_T_765, _T_772) @[Misc.scala 265:38]
    node _T_774 = or(_T_763, _T_773) @[Misc.scala 265:29]
    node _T_775 = bits(_T_761, 1, 1) @[Misc.scala 259:26]
    node _T_776 = bits(req.addr, 1, 1) @[Misc.scala 260:26]
    node _T_778 = eq(_T_776, UInt<1>("h00")) @[Misc.scala 261:20]
    node _T_779 = and(_T_769, _T_778) @[Misc.scala 264:27]
    node _T_780 = and(_T_775, _T_779) @[Misc.scala 265:38]
    node _T_781 = or(_T_771, _T_780) @[Misc.scala 265:29]
    node _T_782 = and(_T_769, _T_776) @[Misc.scala 264:27]
    node _T_783 = and(_T_775, _T_782) @[Misc.scala 265:38]
    node _T_784 = or(_T_771, _T_783) @[Misc.scala 265:29]
    node _T_785 = and(_T_772, _T_778) @[Misc.scala 264:27]
    node _T_786 = and(_T_775, _T_785) @[Misc.scala 265:38]
    node _T_787 = or(_T_774, _T_786) @[Misc.scala 265:29]
    node _T_788 = and(_T_772, _T_776) @[Misc.scala 264:27]
    node _T_789 = and(_T_775, _T_788) @[Misc.scala 265:38]
    node _T_790 = or(_T_774, _T_789) @[Misc.scala 265:29]
    node _T_791 = bits(_T_761, 0, 0) @[Misc.scala 259:26]
    node _T_792 = bits(req.addr, 0, 0) @[Misc.scala 260:26]
    node _T_794 = eq(_T_792, UInt<1>("h00")) @[Misc.scala 261:20]
    node _T_795 = and(_T_779, _T_794) @[Misc.scala 264:27]
    node _T_796 = and(_T_791, _T_795) @[Misc.scala 265:38]
    node _T_797 = or(_T_781, _T_796) @[Misc.scala 265:29]
    node _T_798 = and(_T_779, _T_792) @[Misc.scala 264:27]
    node _T_799 = and(_T_791, _T_798) @[Misc.scala 265:38]
    node _T_800 = or(_T_781, _T_799) @[Misc.scala 265:29]
    node _T_801 = and(_T_782, _T_794) @[Misc.scala 264:27]
    node _T_802 = and(_T_791, _T_801) @[Misc.scala 265:38]
    node _T_803 = or(_T_784, _T_802) @[Misc.scala 265:29]
    node _T_804 = and(_T_782, _T_792) @[Misc.scala 264:27]
    node _T_805 = and(_T_791, _T_804) @[Misc.scala 265:38]
    node _T_806 = or(_T_784, _T_805) @[Misc.scala 265:29]
    node _T_807 = and(_T_785, _T_794) @[Misc.scala 264:27]
    node _T_808 = and(_T_791, _T_807) @[Misc.scala 265:38]
    node _T_809 = or(_T_787, _T_808) @[Misc.scala 265:29]
    node _T_810 = and(_T_785, _T_792) @[Misc.scala 264:27]
    node _T_811 = and(_T_791, _T_810) @[Misc.scala 265:38]
    node _T_812 = or(_T_787, _T_811) @[Misc.scala 265:29]
    node _T_813 = and(_T_788, _T_794) @[Misc.scala 264:27]
    node _T_814 = and(_T_791, _T_813) @[Misc.scala 265:38]
    node _T_815 = or(_T_790, _T_814) @[Misc.scala 265:29]
    node _T_816 = and(_T_788, _T_792) @[Misc.scala 264:27]
    node _T_817 = and(_T_791, _T_816) @[Misc.scala 265:38]
    node _T_818 = or(_T_790, _T_817) @[Misc.scala 265:29]
    node _T_819 = cat(_T_800, _T_797) @[Cat.scala 30:58]
    node _T_820 = cat(_T_806, _T_803) @[Cat.scala 30:58]
    node _T_821 = cat(_T_820, _T_819) @[Cat.scala 30:58]
    node _T_822 = cat(_T_812, _T_809) @[Cat.scala 30:58]
    node _T_823 = cat(_T_818, _T_815) @[Cat.scala 30:58]
    node _T_824 = cat(_T_823, _T_822) @[Cat.scala 30:58]
    node _T_825 = cat(_T_824, _T_821) @[Cat.scala 30:58]
    _T_754.mask <= _T_825 @[Edges.scala 433:15]
    _T_754.data <= req.data @[Edges.scala 434:15]
    node _T_830 = leq(UInt<1>("h00"), a_size) @[Parameters.scala 88:32]
    node _T_832 = leq(a_size, UInt<2>("h03")) @[Parameters.scala 88:42]
    node _T_833 = and(_T_830, _T_832) @[Parameters.scala 88:37]
    node _T_834 = or(UInt<1>("h00"), _T_833) @[Parameters.scala 157:31]
    node _T_836 = xor(req.addr, UInt<28>("h08000000")) @[Parameters.scala 153:31]
    node _T_837 = cvt(_T_836) @[Parameters.scala 153:49]
    node _T_839 = and(_T_837, asSInt(UInt<33>("h088000000"))) @[Parameters.scala 153:52]
    node _T_840 = asSInt(_T_839) @[Parameters.scala 153:52]
    node _T_842 = eq(_T_840, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_844 = xor(req.addr, UInt<1>("h00")) @[Parameters.scala 153:31]
    node _T_845 = cvt(_T_844) @[Parameters.scala 153:49]
    node _T_847 = and(_T_845, asSInt(UInt<33>("h088010000"))) @[Parameters.scala 153:52]
    node _T_848 = asSInt(_T_847) @[Parameters.scala 153:52]
    node _T_850 = eq(_T_848, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_851 = or(_T_842, _T_850) @[Parameters.scala 158:42]
    node _T_852 = and(_T_834, _T_851) @[Parameters.scala 157:56]
    node _T_855 = or(UInt<1>("h00"), UInt<1>("h00")) @[Parameters.scala 157:31]
    node _T_857 = xor(req.addr, UInt<17>("h010000")) @[Parameters.scala 153:31]
    node _T_858 = cvt(_T_857) @[Parameters.scala 153:49]
    node _T_860 = and(_T_858, asSInt(UInt<33>("h088010000"))) @[Parameters.scala 153:52]
    node _T_861 = asSInt(_T_860) @[Parameters.scala 153:52]
    node _T_863 = eq(_T_861, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_865 = xor(req.addr, UInt<32>("h080000000")) @[Parameters.scala 153:31]
    node _T_866 = cvt(_T_865) @[Parameters.scala 153:49]
    node _T_868 = and(_T_866, asSInt(UInt<33>("h080000000"))) @[Parameters.scala 153:52]
    node _T_869 = asSInt(_T_868) @[Parameters.scala 153:52]
    node _T_871 = eq(_T_869, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_872 = or(_T_863, _T_871) @[Parameters.scala 158:42]
    node _T_873 = and(_T_855, _T_872) @[Parameters.scala 157:56]
    node _T_875 = or(UInt<1>("h00"), _T_852) @[Parameters.scala 159:30]
    node _T_876 = or(_T_875, _T_873) @[Parameters.scala 159:30]
    wire _T_878 : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<2>, address : UInt<32>, mask : UInt<8>, data : UInt<64>} @[Edges.scala 413:17]
    _T_878 is invalid @[Edges.scala 413:17]
    _T_878.opcode <= UInt<2>("h02") @[Edges.scala 414:15]
    _T_878.param <= UInt<3>("h04") @[Edges.scala 415:15]
    _T_878.size <= a_size @[Edges.scala 416:15]
    _T_878.source <= UInt<2>("h02") @[Edges.scala 417:15]
    _T_878.address <= req.addr @[Edges.scala 418:15]
    node _T_880 = bits(a_size, 1, 0) @[OneHot.scala 49:27]
    node _T_882 = dshl(UInt<1>("h01"), _T_880) @[OneHot.scala 50:12]
    node _T_883 = bits(_T_882, 2, 0) @[OneHot.scala 50:27]
    node _T_885 = or(_T_883, UInt<1>("h01")) @[Misc.scala 252:54]
    node _T_887 = geq(a_size, UInt<2>("h03")) @[Misc.scala 256:21]
    node _T_889 = bits(_T_885, 2, 2) @[Misc.scala 259:26]
    node _T_890 = bits(req.addr, 2, 2) @[Misc.scala 260:26]
    node _T_892 = eq(_T_890, UInt<1>("h00")) @[Misc.scala 261:20]
    node _T_893 = and(UInt<1>("h01"), _T_892) @[Misc.scala 264:27]
    node _T_894 = and(_T_889, _T_893) @[Misc.scala 265:38]
    node _T_895 = or(_T_887, _T_894) @[Misc.scala 265:29]
    node _T_896 = and(UInt<1>("h01"), _T_890) @[Misc.scala 264:27]
    node _T_897 = and(_T_889, _T_896) @[Misc.scala 265:38]
    node _T_898 = or(_T_887, _T_897) @[Misc.scala 265:29]
    node _T_899 = bits(_T_885, 1, 1) @[Misc.scala 259:26]
    node _T_900 = bits(req.addr, 1, 1) @[Misc.scala 260:26]
    node _T_902 = eq(_T_900, UInt<1>("h00")) @[Misc.scala 261:20]
    node _T_903 = and(_T_893, _T_902) @[Misc.scala 264:27]
    node _T_904 = and(_T_899, _T_903) @[Misc.scala 265:38]
    node _T_905 = or(_T_895, _T_904) @[Misc.scala 265:29]
    node _T_906 = and(_T_893, _T_900) @[Misc.scala 264:27]
    node _T_907 = and(_T_899, _T_906) @[Misc.scala 265:38]
    node _T_908 = or(_T_895, _T_907) @[Misc.scala 265:29]
    node _T_909 = and(_T_896, _T_902) @[Misc.scala 264:27]
    node _T_910 = and(_T_899, _T_909) @[Misc.scala 265:38]
    node _T_911 = or(_T_898, _T_910) @[Misc.scala 265:29]
    node _T_912 = and(_T_896, _T_900) @[Misc.scala 264:27]
    node _T_913 = and(_T_899, _T_912) @[Misc.scala 265:38]
    node _T_914 = or(_T_898, _T_913) @[Misc.scala 265:29]
    node _T_915 = bits(_T_885, 0, 0) @[Misc.scala 259:26]
    node _T_916 = bits(req.addr, 0, 0) @[Misc.scala 260:26]
    node _T_918 = eq(_T_916, UInt<1>("h00")) @[Misc.scala 261:20]
    node _T_919 = and(_T_903, _T_918) @[Misc.scala 264:27]
    node _T_920 = and(_T_915, _T_919) @[Misc.scala 265:38]
    node _T_921 = or(_T_905, _T_920) @[Misc.scala 265:29]
    node _T_922 = and(_T_903, _T_916) @[Misc.scala 264:27]
    node _T_923 = and(_T_915, _T_922) @[Misc.scala 265:38]
    node _T_924 = or(_T_905, _T_923) @[Misc.scala 265:29]
    node _T_925 = and(_T_906, _T_918) @[Misc.scala 264:27]
    node _T_926 = and(_T_915, _T_925) @[Misc.scala 265:38]
    node _T_927 = or(_T_908, _T_926) @[Misc.scala 265:29]
    node _T_928 = and(_T_906, _T_916) @[Misc.scala 264:27]
    node _T_929 = and(_T_915, _T_928) @[Misc.scala 265:38]
    node _T_930 = or(_T_908, _T_929) @[Misc.scala 265:29]
    node _T_931 = and(_T_909, _T_918) @[Misc.scala 264:27]
    node _T_932 = and(_T_915, _T_931) @[Misc.scala 265:38]
    node _T_933 = or(_T_911, _T_932) @[Misc.scala 265:29]
    node _T_934 = and(_T_909, _T_916) @[Misc.scala 264:27]
    node _T_935 = and(_T_915, _T_934) @[Misc.scala 265:38]
    node _T_936 = or(_T_911, _T_935) @[Misc.scala 265:29]
    node _T_937 = and(_T_912, _T_918) @[Misc.scala 264:27]
    node _T_938 = and(_T_915, _T_937) @[Misc.scala 265:38]
    node _T_939 = or(_T_914, _T_938) @[Misc.scala 265:29]
    node _T_940 = and(_T_912, _T_916) @[Misc.scala 264:27]
    node _T_941 = and(_T_915, _T_940) @[Misc.scala 265:38]
    node _T_942 = or(_T_914, _T_941) @[Misc.scala 265:29]
    node _T_943 = cat(_T_924, _T_921) @[Cat.scala 30:58]
    node _T_944 = cat(_T_930, _T_927) @[Cat.scala 30:58]
    node _T_945 = cat(_T_944, _T_943) @[Cat.scala 30:58]
    node _T_946 = cat(_T_936, _T_933) @[Cat.scala 30:58]
    node _T_947 = cat(_T_942, _T_939) @[Cat.scala 30:58]
    node _T_948 = cat(_T_947, _T_946) @[Cat.scala 30:58]
    node _T_949 = cat(_T_948, _T_945) @[Cat.scala 30:58]
    _T_878.mask <= _T_949 @[Edges.scala 419:15]
    _T_878.data <= req.data @[Edges.scala 420:15]
    node _T_954 = leq(UInt<1>("h00"), a_size) @[Parameters.scala 88:32]
    node _T_956 = leq(a_size, UInt<2>("h03")) @[Parameters.scala 88:42]
    node _T_957 = and(_T_954, _T_956) @[Parameters.scala 88:37]
    node _T_958 = or(UInt<1>("h00"), _T_957) @[Parameters.scala 157:31]
    node _T_960 = xor(req.addr, UInt<28>("h08000000")) @[Parameters.scala 153:31]
    node _T_961 = cvt(_T_960) @[Parameters.scala 153:49]
    node _T_963 = and(_T_961, asSInt(UInt<33>("h088000000"))) @[Parameters.scala 153:52]
    node _T_964 = asSInt(_T_963) @[Parameters.scala 153:52]
    node _T_966 = eq(_T_964, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_968 = xor(req.addr, UInt<1>("h00")) @[Parameters.scala 153:31]
    node _T_969 = cvt(_T_968) @[Parameters.scala 153:49]
    node _T_971 = and(_T_969, asSInt(UInt<33>("h088010000"))) @[Parameters.scala 153:52]
    node _T_972 = asSInt(_T_971) @[Parameters.scala 153:52]
    node _T_974 = eq(_T_972, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_975 = or(_T_966, _T_974) @[Parameters.scala 158:42]
    node _T_976 = and(_T_958, _T_975) @[Parameters.scala 157:56]
    node _T_979 = or(UInt<1>("h00"), UInt<1>("h00")) @[Parameters.scala 157:31]
    node _T_981 = xor(req.addr, UInt<17>("h010000")) @[Parameters.scala 153:31]
    node _T_982 = cvt(_T_981) @[Parameters.scala 153:49]
    node _T_984 = and(_T_982, asSInt(UInt<33>("h088010000"))) @[Parameters.scala 153:52]
    node _T_985 = asSInt(_T_984) @[Parameters.scala 153:52]
    node _T_987 = eq(_T_985, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_989 = xor(req.addr, UInt<32>("h080000000")) @[Parameters.scala 153:31]
    node _T_990 = cvt(_T_989) @[Parameters.scala 153:49]
    node _T_992 = and(_T_990, asSInt(UInt<33>("h080000000"))) @[Parameters.scala 153:52]
    node _T_993 = asSInt(_T_992) @[Parameters.scala 153:52]
    node _T_995 = eq(_T_993, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_996 = or(_T_987, _T_995) @[Parameters.scala 158:42]
    node _T_997 = and(_T_979, _T_996) @[Parameters.scala 157:56]
    node _T_999 = or(UInt<1>("h00"), _T_976) @[Parameters.scala 159:30]
    node _T_1000 = or(_T_999, _T_997) @[Parameters.scala 159:30]
    wire _T_1002 : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<2>, address : UInt<32>, mask : UInt<8>, data : UInt<64>} @[Edges.scala 413:17]
    _T_1002 is invalid @[Edges.scala 413:17]
    _T_1002.opcode <= UInt<2>("h02") @[Edges.scala 414:15]
    _T_1002.param <= UInt<3>("h00") @[Edges.scala 415:15]
    _T_1002.size <= a_size @[Edges.scala 416:15]
    _T_1002.source <= UInt<2>("h02") @[Edges.scala 417:15]
    _T_1002.address <= req.addr @[Edges.scala 418:15]
    node _T_1004 = bits(a_size, 1, 0) @[OneHot.scala 49:27]
    node _T_1006 = dshl(UInt<1>("h01"), _T_1004) @[OneHot.scala 50:12]
    node _T_1007 = bits(_T_1006, 2, 0) @[OneHot.scala 50:27]
    node _T_1009 = or(_T_1007, UInt<1>("h01")) @[Misc.scala 252:54]
    node _T_1011 = geq(a_size, UInt<2>("h03")) @[Misc.scala 256:21]
    node _T_1013 = bits(_T_1009, 2, 2) @[Misc.scala 259:26]
    node _T_1014 = bits(req.addr, 2, 2) @[Misc.scala 260:26]
    node _T_1016 = eq(_T_1014, UInt<1>("h00")) @[Misc.scala 261:20]
    node _T_1017 = and(UInt<1>("h01"), _T_1016) @[Misc.scala 264:27]
    node _T_1018 = and(_T_1013, _T_1017) @[Misc.scala 265:38]
    node _T_1019 = or(_T_1011, _T_1018) @[Misc.scala 265:29]
    node _T_1020 = and(UInt<1>("h01"), _T_1014) @[Misc.scala 264:27]
    node _T_1021 = and(_T_1013, _T_1020) @[Misc.scala 265:38]
    node _T_1022 = or(_T_1011, _T_1021) @[Misc.scala 265:29]
    node _T_1023 = bits(_T_1009, 1, 1) @[Misc.scala 259:26]
    node _T_1024 = bits(req.addr, 1, 1) @[Misc.scala 260:26]
    node _T_1026 = eq(_T_1024, UInt<1>("h00")) @[Misc.scala 261:20]
    node _T_1027 = and(_T_1017, _T_1026) @[Misc.scala 264:27]
    node _T_1028 = and(_T_1023, _T_1027) @[Misc.scala 265:38]
    node _T_1029 = or(_T_1019, _T_1028) @[Misc.scala 265:29]
    node _T_1030 = and(_T_1017, _T_1024) @[Misc.scala 264:27]
    node _T_1031 = and(_T_1023, _T_1030) @[Misc.scala 265:38]
    node _T_1032 = or(_T_1019, _T_1031) @[Misc.scala 265:29]
    node _T_1033 = and(_T_1020, _T_1026) @[Misc.scala 264:27]
    node _T_1034 = and(_T_1023, _T_1033) @[Misc.scala 265:38]
    node _T_1035 = or(_T_1022, _T_1034) @[Misc.scala 265:29]
    node _T_1036 = and(_T_1020, _T_1024) @[Misc.scala 264:27]
    node _T_1037 = and(_T_1023, _T_1036) @[Misc.scala 265:38]
    node _T_1038 = or(_T_1022, _T_1037) @[Misc.scala 265:29]
    node _T_1039 = bits(_T_1009, 0, 0) @[Misc.scala 259:26]
    node _T_1040 = bits(req.addr, 0, 0) @[Misc.scala 260:26]
    node _T_1042 = eq(_T_1040, UInt<1>("h00")) @[Misc.scala 261:20]
    node _T_1043 = and(_T_1027, _T_1042) @[Misc.scala 264:27]
    node _T_1044 = and(_T_1039, _T_1043) @[Misc.scala 265:38]
    node _T_1045 = or(_T_1029, _T_1044) @[Misc.scala 265:29]
    node _T_1046 = and(_T_1027, _T_1040) @[Misc.scala 264:27]
    node _T_1047 = and(_T_1039, _T_1046) @[Misc.scala 265:38]
    node _T_1048 = or(_T_1029, _T_1047) @[Misc.scala 265:29]
    node _T_1049 = and(_T_1030, _T_1042) @[Misc.scala 264:27]
    node _T_1050 = and(_T_1039, _T_1049) @[Misc.scala 265:38]
    node _T_1051 = or(_T_1032, _T_1050) @[Misc.scala 265:29]
    node _T_1052 = and(_T_1030, _T_1040) @[Misc.scala 264:27]
    node _T_1053 = and(_T_1039, _T_1052) @[Misc.scala 265:38]
    node _T_1054 = or(_T_1032, _T_1053) @[Misc.scala 265:29]
    node _T_1055 = and(_T_1033, _T_1042) @[Misc.scala 264:27]
    node _T_1056 = and(_T_1039, _T_1055) @[Misc.scala 265:38]
    node _T_1057 = or(_T_1035, _T_1056) @[Misc.scala 265:29]
    node _T_1058 = and(_T_1033, _T_1040) @[Misc.scala 264:27]
    node _T_1059 = and(_T_1039, _T_1058) @[Misc.scala 265:38]
    node _T_1060 = or(_T_1035, _T_1059) @[Misc.scala 265:29]
    node _T_1061 = and(_T_1036, _T_1042) @[Misc.scala 264:27]
    node _T_1062 = and(_T_1039, _T_1061) @[Misc.scala 265:38]
    node _T_1063 = or(_T_1038, _T_1062) @[Misc.scala 265:29]
    node _T_1064 = and(_T_1036, _T_1040) @[Misc.scala 264:27]
    node _T_1065 = and(_T_1039, _T_1064) @[Misc.scala 265:38]
    node _T_1066 = or(_T_1038, _T_1065) @[Misc.scala 265:29]
    node _T_1067 = cat(_T_1048, _T_1045) @[Cat.scala 30:58]
    node _T_1068 = cat(_T_1054, _T_1051) @[Cat.scala 30:58]
    node _T_1069 = cat(_T_1068, _T_1067) @[Cat.scala 30:58]
    node _T_1070 = cat(_T_1060, _T_1057) @[Cat.scala 30:58]
    node _T_1071 = cat(_T_1066, _T_1063) @[Cat.scala 30:58]
    node _T_1072 = cat(_T_1071, _T_1070) @[Cat.scala 30:58]
    node _T_1073 = cat(_T_1072, _T_1069) @[Cat.scala 30:58]
    _T_1002.mask <= _T_1073 @[Edges.scala 419:15]
    _T_1002.data <= req.data @[Edges.scala 420:15]
    node _T_1078 = leq(UInt<1>("h00"), a_size) @[Parameters.scala 88:32]
    node _T_1080 = leq(a_size, UInt<2>("h03")) @[Parameters.scala 88:42]
    node _T_1081 = and(_T_1078, _T_1080) @[Parameters.scala 88:37]
    node _T_1082 = or(UInt<1>("h00"), _T_1081) @[Parameters.scala 157:31]
    node _T_1084 = xor(req.addr, UInt<28>("h08000000")) @[Parameters.scala 153:31]
    node _T_1085 = cvt(_T_1084) @[Parameters.scala 153:49]
    node _T_1087 = and(_T_1085, asSInt(UInt<33>("h088000000"))) @[Parameters.scala 153:52]
    node _T_1088 = asSInt(_T_1087) @[Parameters.scala 153:52]
    node _T_1090 = eq(_T_1088, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_1092 = xor(req.addr, UInt<1>("h00")) @[Parameters.scala 153:31]
    node _T_1093 = cvt(_T_1092) @[Parameters.scala 153:49]
    node _T_1095 = and(_T_1093, asSInt(UInt<33>("h088010000"))) @[Parameters.scala 153:52]
    node _T_1096 = asSInt(_T_1095) @[Parameters.scala 153:52]
    node _T_1098 = eq(_T_1096, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_1099 = or(_T_1090, _T_1098) @[Parameters.scala 158:42]
    node _T_1100 = and(_T_1082, _T_1099) @[Parameters.scala 157:56]
    node _T_1103 = or(UInt<1>("h00"), UInt<1>("h00")) @[Parameters.scala 157:31]
    node _T_1105 = xor(req.addr, UInt<17>("h010000")) @[Parameters.scala 153:31]
    node _T_1106 = cvt(_T_1105) @[Parameters.scala 153:49]
    node _T_1108 = and(_T_1106, asSInt(UInt<33>("h088010000"))) @[Parameters.scala 153:52]
    node _T_1109 = asSInt(_T_1108) @[Parameters.scala 153:52]
    node _T_1111 = eq(_T_1109, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_1113 = xor(req.addr, UInt<32>("h080000000")) @[Parameters.scala 153:31]
    node _T_1114 = cvt(_T_1113) @[Parameters.scala 153:49]
    node _T_1116 = and(_T_1114, asSInt(UInt<33>("h080000000"))) @[Parameters.scala 153:52]
    node _T_1117 = asSInt(_T_1116) @[Parameters.scala 153:52]
    node _T_1119 = eq(_T_1117, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_1120 = or(_T_1111, _T_1119) @[Parameters.scala 158:42]
    node _T_1121 = and(_T_1103, _T_1120) @[Parameters.scala 157:56]
    node _T_1123 = or(UInt<1>("h00"), _T_1100) @[Parameters.scala 159:30]
    node _T_1124 = or(_T_1123, _T_1121) @[Parameters.scala 159:30]
    wire _T_1126 : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<2>, address : UInt<32>, mask : UInt<8>, data : UInt<64>} @[Edges.scala 413:17]
    _T_1126 is invalid @[Edges.scala 413:17]
    _T_1126.opcode <= UInt<2>("h02") @[Edges.scala 414:15]
    _T_1126.param <= UInt<3>("h01") @[Edges.scala 415:15]
    _T_1126.size <= a_size @[Edges.scala 416:15]
    _T_1126.source <= UInt<2>("h02") @[Edges.scala 417:15]
    _T_1126.address <= req.addr @[Edges.scala 418:15]
    node _T_1128 = bits(a_size, 1, 0) @[OneHot.scala 49:27]
    node _T_1130 = dshl(UInt<1>("h01"), _T_1128) @[OneHot.scala 50:12]
    node _T_1131 = bits(_T_1130, 2, 0) @[OneHot.scala 50:27]
    node _T_1133 = or(_T_1131, UInt<1>("h01")) @[Misc.scala 252:54]
    node _T_1135 = geq(a_size, UInt<2>("h03")) @[Misc.scala 256:21]
    node _T_1137 = bits(_T_1133, 2, 2) @[Misc.scala 259:26]
    node _T_1138 = bits(req.addr, 2, 2) @[Misc.scala 260:26]
    node _T_1140 = eq(_T_1138, UInt<1>("h00")) @[Misc.scala 261:20]
    node _T_1141 = and(UInt<1>("h01"), _T_1140) @[Misc.scala 264:27]
    node _T_1142 = and(_T_1137, _T_1141) @[Misc.scala 265:38]
    node _T_1143 = or(_T_1135, _T_1142) @[Misc.scala 265:29]
    node _T_1144 = and(UInt<1>("h01"), _T_1138) @[Misc.scala 264:27]
    node _T_1145 = and(_T_1137, _T_1144) @[Misc.scala 265:38]
    node _T_1146 = or(_T_1135, _T_1145) @[Misc.scala 265:29]
    node _T_1147 = bits(_T_1133, 1, 1) @[Misc.scala 259:26]
    node _T_1148 = bits(req.addr, 1, 1) @[Misc.scala 260:26]
    node _T_1150 = eq(_T_1148, UInt<1>("h00")) @[Misc.scala 261:20]
    node _T_1151 = and(_T_1141, _T_1150) @[Misc.scala 264:27]
    node _T_1152 = and(_T_1147, _T_1151) @[Misc.scala 265:38]
    node _T_1153 = or(_T_1143, _T_1152) @[Misc.scala 265:29]
    node _T_1154 = and(_T_1141, _T_1148) @[Misc.scala 264:27]
    node _T_1155 = and(_T_1147, _T_1154) @[Misc.scala 265:38]
    node _T_1156 = or(_T_1143, _T_1155) @[Misc.scala 265:29]
    node _T_1157 = and(_T_1144, _T_1150) @[Misc.scala 264:27]
    node _T_1158 = and(_T_1147, _T_1157) @[Misc.scala 265:38]
    node _T_1159 = or(_T_1146, _T_1158) @[Misc.scala 265:29]
    node _T_1160 = and(_T_1144, _T_1148) @[Misc.scala 264:27]
    node _T_1161 = and(_T_1147, _T_1160) @[Misc.scala 265:38]
    node _T_1162 = or(_T_1146, _T_1161) @[Misc.scala 265:29]
    node _T_1163 = bits(_T_1133, 0, 0) @[Misc.scala 259:26]
    node _T_1164 = bits(req.addr, 0, 0) @[Misc.scala 260:26]
    node _T_1166 = eq(_T_1164, UInt<1>("h00")) @[Misc.scala 261:20]
    node _T_1167 = and(_T_1151, _T_1166) @[Misc.scala 264:27]
    node _T_1168 = and(_T_1163, _T_1167) @[Misc.scala 265:38]
    node _T_1169 = or(_T_1153, _T_1168) @[Misc.scala 265:29]
    node _T_1170 = and(_T_1151, _T_1164) @[Misc.scala 264:27]
    node _T_1171 = and(_T_1163, _T_1170) @[Misc.scala 265:38]
    node _T_1172 = or(_T_1153, _T_1171) @[Misc.scala 265:29]
    node _T_1173 = and(_T_1154, _T_1166) @[Misc.scala 264:27]
    node _T_1174 = and(_T_1163, _T_1173) @[Misc.scala 265:38]
    node _T_1175 = or(_T_1156, _T_1174) @[Misc.scala 265:29]
    node _T_1176 = and(_T_1154, _T_1164) @[Misc.scala 264:27]
    node _T_1177 = and(_T_1163, _T_1176) @[Misc.scala 265:38]
    node _T_1178 = or(_T_1156, _T_1177) @[Misc.scala 265:29]
    node _T_1179 = and(_T_1157, _T_1166) @[Misc.scala 264:27]
    node _T_1180 = and(_T_1163, _T_1179) @[Misc.scala 265:38]
    node _T_1181 = or(_T_1159, _T_1180) @[Misc.scala 265:29]
    node _T_1182 = and(_T_1157, _T_1164) @[Misc.scala 264:27]
    node _T_1183 = and(_T_1163, _T_1182) @[Misc.scala 265:38]
    node _T_1184 = or(_T_1159, _T_1183) @[Misc.scala 265:29]
    node _T_1185 = and(_T_1160, _T_1166) @[Misc.scala 264:27]
    node _T_1186 = and(_T_1163, _T_1185) @[Misc.scala 265:38]
    node _T_1187 = or(_T_1162, _T_1186) @[Misc.scala 265:29]
    node _T_1188 = and(_T_1160, _T_1164) @[Misc.scala 264:27]
    node _T_1189 = and(_T_1163, _T_1188) @[Misc.scala 265:38]
    node _T_1190 = or(_T_1162, _T_1189) @[Misc.scala 265:29]
    node _T_1191 = cat(_T_1172, _T_1169) @[Cat.scala 30:58]
    node _T_1192 = cat(_T_1178, _T_1175) @[Cat.scala 30:58]
    node _T_1193 = cat(_T_1192, _T_1191) @[Cat.scala 30:58]
    node _T_1194 = cat(_T_1184, _T_1181) @[Cat.scala 30:58]
    node _T_1195 = cat(_T_1190, _T_1187) @[Cat.scala 30:58]
    node _T_1196 = cat(_T_1195, _T_1194) @[Cat.scala 30:58]
    node _T_1197 = cat(_T_1196, _T_1193) @[Cat.scala 30:58]
    _T_1126.mask <= _T_1197 @[Edges.scala 419:15]
    _T_1126.data <= req.data @[Edges.scala 420:15]
    node _T_1202 = leq(UInt<1>("h00"), a_size) @[Parameters.scala 88:32]
    node _T_1204 = leq(a_size, UInt<2>("h03")) @[Parameters.scala 88:42]
    node _T_1205 = and(_T_1202, _T_1204) @[Parameters.scala 88:37]
    node _T_1206 = or(UInt<1>("h00"), _T_1205) @[Parameters.scala 157:31]
    node _T_1208 = xor(req.addr, UInt<28>("h08000000")) @[Parameters.scala 153:31]
    node _T_1209 = cvt(_T_1208) @[Parameters.scala 153:49]
    node _T_1211 = and(_T_1209, asSInt(UInt<33>("h088000000"))) @[Parameters.scala 153:52]
    node _T_1212 = asSInt(_T_1211) @[Parameters.scala 153:52]
    node _T_1214 = eq(_T_1212, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_1216 = xor(req.addr, UInt<1>("h00")) @[Parameters.scala 153:31]
    node _T_1217 = cvt(_T_1216) @[Parameters.scala 153:49]
    node _T_1219 = and(_T_1217, asSInt(UInt<33>("h088010000"))) @[Parameters.scala 153:52]
    node _T_1220 = asSInt(_T_1219) @[Parameters.scala 153:52]
    node _T_1222 = eq(_T_1220, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_1223 = or(_T_1214, _T_1222) @[Parameters.scala 158:42]
    node _T_1224 = and(_T_1206, _T_1223) @[Parameters.scala 157:56]
    node _T_1227 = or(UInt<1>("h00"), UInt<1>("h00")) @[Parameters.scala 157:31]
    node _T_1229 = xor(req.addr, UInt<17>("h010000")) @[Parameters.scala 153:31]
    node _T_1230 = cvt(_T_1229) @[Parameters.scala 153:49]
    node _T_1232 = and(_T_1230, asSInt(UInt<33>("h088010000"))) @[Parameters.scala 153:52]
    node _T_1233 = asSInt(_T_1232) @[Parameters.scala 153:52]
    node _T_1235 = eq(_T_1233, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_1237 = xor(req.addr, UInt<32>("h080000000")) @[Parameters.scala 153:31]
    node _T_1238 = cvt(_T_1237) @[Parameters.scala 153:49]
    node _T_1240 = and(_T_1238, asSInt(UInt<33>("h080000000"))) @[Parameters.scala 153:52]
    node _T_1241 = asSInt(_T_1240) @[Parameters.scala 153:52]
    node _T_1243 = eq(_T_1241, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_1244 = or(_T_1235, _T_1243) @[Parameters.scala 158:42]
    node _T_1245 = and(_T_1227, _T_1244) @[Parameters.scala 157:56]
    node _T_1247 = or(UInt<1>("h00"), _T_1224) @[Parameters.scala 159:30]
    node _T_1248 = or(_T_1247, _T_1245) @[Parameters.scala 159:30]
    wire _T_1250 : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<2>, address : UInt<32>, mask : UInt<8>, data : UInt<64>} @[Edges.scala 413:17]
    _T_1250 is invalid @[Edges.scala 413:17]
    _T_1250.opcode <= UInt<2>("h02") @[Edges.scala 414:15]
    _T_1250.param <= UInt<3>("h02") @[Edges.scala 415:15]
    _T_1250.size <= a_size @[Edges.scala 416:15]
    _T_1250.source <= UInt<2>("h02") @[Edges.scala 417:15]
    _T_1250.address <= req.addr @[Edges.scala 418:15]
    node _T_1252 = bits(a_size, 1, 0) @[OneHot.scala 49:27]
    node _T_1254 = dshl(UInt<1>("h01"), _T_1252) @[OneHot.scala 50:12]
    node _T_1255 = bits(_T_1254, 2, 0) @[OneHot.scala 50:27]
    node _T_1257 = or(_T_1255, UInt<1>("h01")) @[Misc.scala 252:54]
    node _T_1259 = geq(a_size, UInt<2>("h03")) @[Misc.scala 256:21]
    node _T_1261 = bits(_T_1257, 2, 2) @[Misc.scala 259:26]
    node _T_1262 = bits(req.addr, 2, 2) @[Misc.scala 260:26]
    node _T_1264 = eq(_T_1262, UInt<1>("h00")) @[Misc.scala 261:20]
    node _T_1265 = and(UInt<1>("h01"), _T_1264) @[Misc.scala 264:27]
    node _T_1266 = and(_T_1261, _T_1265) @[Misc.scala 265:38]
    node _T_1267 = or(_T_1259, _T_1266) @[Misc.scala 265:29]
    node _T_1268 = and(UInt<1>("h01"), _T_1262) @[Misc.scala 264:27]
    node _T_1269 = and(_T_1261, _T_1268) @[Misc.scala 265:38]
    node _T_1270 = or(_T_1259, _T_1269) @[Misc.scala 265:29]
    node _T_1271 = bits(_T_1257, 1, 1) @[Misc.scala 259:26]
    node _T_1272 = bits(req.addr, 1, 1) @[Misc.scala 260:26]
    node _T_1274 = eq(_T_1272, UInt<1>("h00")) @[Misc.scala 261:20]
    node _T_1275 = and(_T_1265, _T_1274) @[Misc.scala 264:27]
    node _T_1276 = and(_T_1271, _T_1275) @[Misc.scala 265:38]
    node _T_1277 = or(_T_1267, _T_1276) @[Misc.scala 265:29]
    node _T_1278 = and(_T_1265, _T_1272) @[Misc.scala 264:27]
    node _T_1279 = and(_T_1271, _T_1278) @[Misc.scala 265:38]
    node _T_1280 = or(_T_1267, _T_1279) @[Misc.scala 265:29]
    node _T_1281 = and(_T_1268, _T_1274) @[Misc.scala 264:27]
    node _T_1282 = and(_T_1271, _T_1281) @[Misc.scala 265:38]
    node _T_1283 = or(_T_1270, _T_1282) @[Misc.scala 265:29]
    node _T_1284 = and(_T_1268, _T_1272) @[Misc.scala 264:27]
    node _T_1285 = and(_T_1271, _T_1284) @[Misc.scala 265:38]
    node _T_1286 = or(_T_1270, _T_1285) @[Misc.scala 265:29]
    node _T_1287 = bits(_T_1257, 0, 0) @[Misc.scala 259:26]
    node _T_1288 = bits(req.addr, 0, 0) @[Misc.scala 260:26]
    node _T_1290 = eq(_T_1288, UInt<1>("h00")) @[Misc.scala 261:20]
    node _T_1291 = and(_T_1275, _T_1290) @[Misc.scala 264:27]
    node _T_1292 = and(_T_1287, _T_1291) @[Misc.scala 265:38]
    node _T_1293 = or(_T_1277, _T_1292) @[Misc.scala 265:29]
    node _T_1294 = and(_T_1275, _T_1288) @[Misc.scala 264:27]
    node _T_1295 = and(_T_1287, _T_1294) @[Misc.scala 265:38]
    node _T_1296 = or(_T_1277, _T_1295) @[Misc.scala 265:29]
    node _T_1297 = and(_T_1278, _T_1290) @[Misc.scala 264:27]
    node _T_1298 = and(_T_1287, _T_1297) @[Misc.scala 265:38]
    node _T_1299 = or(_T_1280, _T_1298) @[Misc.scala 265:29]
    node _T_1300 = and(_T_1278, _T_1288) @[Misc.scala 264:27]
    node _T_1301 = and(_T_1287, _T_1300) @[Misc.scala 265:38]
    node _T_1302 = or(_T_1280, _T_1301) @[Misc.scala 265:29]
    node _T_1303 = and(_T_1281, _T_1290) @[Misc.scala 264:27]
    node _T_1304 = and(_T_1287, _T_1303) @[Misc.scala 265:38]
    node _T_1305 = or(_T_1283, _T_1304) @[Misc.scala 265:29]
    node _T_1306 = and(_T_1281, _T_1288) @[Misc.scala 264:27]
    node _T_1307 = and(_T_1287, _T_1306) @[Misc.scala 265:38]
    node _T_1308 = or(_T_1283, _T_1307) @[Misc.scala 265:29]
    node _T_1309 = and(_T_1284, _T_1290) @[Misc.scala 264:27]
    node _T_1310 = and(_T_1287, _T_1309) @[Misc.scala 265:38]
    node _T_1311 = or(_T_1286, _T_1310) @[Misc.scala 265:29]
    node _T_1312 = and(_T_1284, _T_1288) @[Misc.scala 264:27]
    node _T_1313 = and(_T_1287, _T_1312) @[Misc.scala 265:38]
    node _T_1314 = or(_T_1286, _T_1313) @[Misc.scala 265:29]
    node _T_1315 = cat(_T_1296, _T_1293) @[Cat.scala 30:58]
    node _T_1316 = cat(_T_1302, _T_1299) @[Cat.scala 30:58]
    node _T_1317 = cat(_T_1316, _T_1315) @[Cat.scala 30:58]
    node _T_1318 = cat(_T_1308, _T_1305) @[Cat.scala 30:58]
    node _T_1319 = cat(_T_1314, _T_1311) @[Cat.scala 30:58]
    node _T_1320 = cat(_T_1319, _T_1318) @[Cat.scala 30:58]
    node _T_1321 = cat(_T_1320, _T_1317) @[Cat.scala 30:58]
    _T_1250.mask <= _T_1321 @[Edges.scala 419:15]
    _T_1250.data <= req.data @[Edges.scala 420:15]
    node _T_1326 = leq(UInt<1>("h00"), a_size) @[Parameters.scala 88:32]
    node _T_1328 = leq(a_size, UInt<2>("h03")) @[Parameters.scala 88:42]
    node _T_1329 = and(_T_1326, _T_1328) @[Parameters.scala 88:37]
    node _T_1330 = or(UInt<1>("h00"), _T_1329) @[Parameters.scala 157:31]
    node _T_1332 = xor(req.addr, UInt<28>("h08000000")) @[Parameters.scala 153:31]
    node _T_1333 = cvt(_T_1332) @[Parameters.scala 153:49]
    node _T_1335 = and(_T_1333, asSInt(UInt<33>("h088000000"))) @[Parameters.scala 153:52]
    node _T_1336 = asSInt(_T_1335) @[Parameters.scala 153:52]
    node _T_1338 = eq(_T_1336, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_1340 = xor(req.addr, UInt<1>("h00")) @[Parameters.scala 153:31]
    node _T_1341 = cvt(_T_1340) @[Parameters.scala 153:49]
    node _T_1343 = and(_T_1341, asSInt(UInt<33>("h088010000"))) @[Parameters.scala 153:52]
    node _T_1344 = asSInt(_T_1343) @[Parameters.scala 153:52]
    node _T_1346 = eq(_T_1344, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_1347 = or(_T_1338, _T_1346) @[Parameters.scala 158:42]
    node _T_1348 = and(_T_1330, _T_1347) @[Parameters.scala 157:56]
    node _T_1351 = or(UInt<1>("h00"), UInt<1>("h00")) @[Parameters.scala 157:31]
    node _T_1353 = xor(req.addr, UInt<17>("h010000")) @[Parameters.scala 153:31]
    node _T_1354 = cvt(_T_1353) @[Parameters.scala 153:49]
    node _T_1356 = and(_T_1354, asSInt(UInt<33>("h088010000"))) @[Parameters.scala 153:52]
    node _T_1357 = asSInt(_T_1356) @[Parameters.scala 153:52]
    node _T_1359 = eq(_T_1357, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_1361 = xor(req.addr, UInt<32>("h080000000")) @[Parameters.scala 153:31]
    node _T_1362 = cvt(_T_1361) @[Parameters.scala 153:49]
    node _T_1364 = and(_T_1362, asSInt(UInt<33>("h080000000"))) @[Parameters.scala 153:52]
    node _T_1365 = asSInt(_T_1364) @[Parameters.scala 153:52]
    node _T_1367 = eq(_T_1365, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_1368 = or(_T_1359, _T_1367) @[Parameters.scala 158:42]
    node _T_1369 = and(_T_1351, _T_1368) @[Parameters.scala 157:56]
    node _T_1371 = or(UInt<1>("h00"), _T_1348) @[Parameters.scala 159:30]
    node _T_1372 = or(_T_1371, _T_1369) @[Parameters.scala 159:30]
    wire _T_1374 : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<2>, address : UInt<32>, mask : UInt<8>, data : UInt<64>} @[Edges.scala 413:17]
    _T_1374 is invalid @[Edges.scala 413:17]
    _T_1374.opcode <= UInt<2>("h02") @[Edges.scala 414:15]
    _T_1374.param <= UInt<3>("h03") @[Edges.scala 415:15]
    _T_1374.size <= a_size @[Edges.scala 416:15]
    _T_1374.source <= UInt<2>("h02") @[Edges.scala 417:15]
    _T_1374.address <= req.addr @[Edges.scala 418:15]
    node _T_1376 = bits(a_size, 1, 0) @[OneHot.scala 49:27]
    node _T_1378 = dshl(UInt<1>("h01"), _T_1376) @[OneHot.scala 50:12]
    node _T_1379 = bits(_T_1378, 2, 0) @[OneHot.scala 50:27]
    node _T_1381 = or(_T_1379, UInt<1>("h01")) @[Misc.scala 252:54]
    node _T_1383 = geq(a_size, UInt<2>("h03")) @[Misc.scala 256:21]
    node _T_1385 = bits(_T_1381, 2, 2) @[Misc.scala 259:26]
    node _T_1386 = bits(req.addr, 2, 2) @[Misc.scala 260:26]
    node _T_1388 = eq(_T_1386, UInt<1>("h00")) @[Misc.scala 261:20]
    node _T_1389 = and(UInt<1>("h01"), _T_1388) @[Misc.scala 264:27]
    node _T_1390 = and(_T_1385, _T_1389) @[Misc.scala 265:38]
    node _T_1391 = or(_T_1383, _T_1390) @[Misc.scala 265:29]
    node _T_1392 = and(UInt<1>("h01"), _T_1386) @[Misc.scala 264:27]
    node _T_1393 = and(_T_1385, _T_1392) @[Misc.scala 265:38]
    node _T_1394 = or(_T_1383, _T_1393) @[Misc.scala 265:29]
    node _T_1395 = bits(_T_1381, 1, 1) @[Misc.scala 259:26]
    node _T_1396 = bits(req.addr, 1, 1) @[Misc.scala 260:26]
    node _T_1398 = eq(_T_1396, UInt<1>("h00")) @[Misc.scala 261:20]
    node _T_1399 = and(_T_1389, _T_1398) @[Misc.scala 264:27]
    node _T_1400 = and(_T_1395, _T_1399) @[Misc.scala 265:38]
    node _T_1401 = or(_T_1391, _T_1400) @[Misc.scala 265:29]
    node _T_1402 = and(_T_1389, _T_1396) @[Misc.scala 264:27]
    node _T_1403 = and(_T_1395, _T_1402) @[Misc.scala 265:38]
    node _T_1404 = or(_T_1391, _T_1403) @[Misc.scala 265:29]
    node _T_1405 = and(_T_1392, _T_1398) @[Misc.scala 264:27]
    node _T_1406 = and(_T_1395, _T_1405) @[Misc.scala 265:38]
    node _T_1407 = or(_T_1394, _T_1406) @[Misc.scala 265:29]
    node _T_1408 = and(_T_1392, _T_1396) @[Misc.scala 264:27]
    node _T_1409 = and(_T_1395, _T_1408) @[Misc.scala 265:38]
    node _T_1410 = or(_T_1394, _T_1409) @[Misc.scala 265:29]
    node _T_1411 = bits(_T_1381, 0, 0) @[Misc.scala 259:26]
    node _T_1412 = bits(req.addr, 0, 0) @[Misc.scala 260:26]
    node _T_1414 = eq(_T_1412, UInt<1>("h00")) @[Misc.scala 261:20]
    node _T_1415 = and(_T_1399, _T_1414) @[Misc.scala 264:27]
    node _T_1416 = and(_T_1411, _T_1415) @[Misc.scala 265:38]
    node _T_1417 = or(_T_1401, _T_1416) @[Misc.scala 265:29]
    node _T_1418 = and(_T_1399, _T_1412) @[Misc.scala 264:27]
    node _T_1419 = and(_T_1411, _T_1418) @[Misc.scala 265:38]
    node _T_1420 = or(_T_1401, _T_1419) @[Misc.scala 265:29]
    node _T_1421 = and(_T_1402, _T_1414) @[Misc.scala 264:27]
    node _T_1422 = and(_T_1411, _T_1421) @[Misc.scala 265:38]
    node _T_1423 = or(_T_1404, _T_1422) @[Misc.scala 265:29]
    node _T_1424 = and(_T_1402, _T_1412) @[Misc.scala 264:27]
    node _T_1425 = and(_T_1411, _T_1424) @[Misc.scala 265:38]
    node _T_1426 = or(_T_1404, _T_1425) @[Misc.scala 265:29]
    node _T_1427 = and(_T_1405, _T_1414) @[Misc.scala 264:27]
    node _T_1428 = and(_T_1411, _T_1427) @[Misc.scala 265:38]
    node _T_1429 = or(_T_1407, _T_1428) @[Misc.scala 265:29]
    node _T_1430 = and(_T_1405, _T_1412) @[Misc.scala 264:27]
    node _T_1431 = and(_T_1411, _T_1430) @[Misc.scala 265:38]
    node _T_1432 = or(_T_1407, _T_1431) @[Misc.scala 265:29]
    node _T_1433 = and(_T_1408, _T_1414) @[Misc.scala 264:27]
    node _T_1434 = and(_T_1411, _T_1433) @[Misc.scala 265:38]
    node _T_1435 = or(_T_1410, _T_1434) @[Misc.scala 265:29]
    node _T_1436 = and(_T_1408, _T_1412) @[Misc.scala 264:27]
    node _T_1437 = and(_T_1411, _T_1436) @[Misc.scala 265:38]
    node _T_1438 = or(_T_1410, _T_1437) @[Misc.scala 265:29]
    node _T_1439 = cat(_T_1420, _T_1417) @[Cat.scala 30:58]
    node _T_1440 = cat(_T_1426, _T_1423) @[Cat.scala 30:58]
    node _T_1441 = cat(_T_1440, _T_1439) @[Cat.scala 30:58]
    node _T_1442 = cat(_T_1432, _T_1429) @[Cat.scala 30:58]
    node _T_1443 = cat(_T_1438, _T_1435) @[Cat.scala 30:58]
    node _T_1444 = cat(_T_1443, _T_1442) @[Cat.scala 30:58]
    node _T_1445 = cat(_T_1444, _T_1441) @[Cat.scala 30:58]
    _T_1374.mask <= _T_1445 @[Edges.scala 419:15]
    _T_1374.data <= req.data @[Edges.scala 420:15]
    node _T_1446 = eq(UInt<4>("h0f"), req.cmd) @[Mux.scala 46:19]
    node _T_1447 = mux(_T_1446, _T_1374, _T_329) @[Mux.scala 46:16]
    node _T_1448 = eq(UInt<4>("h0e"), req.cmd) @[Mux.scala 46:19]
    node _T_1449 = mux(_T_1448, _T_1250, _T_1447) @[Mux.scala 46:16]
    node _T_1450 = eq(UInt<4>("h0d"), req.cmd) @[Mux.scala 46:19]
    node _T_1451 = mux(_T_1450, _T_1126, _T_1449) @[Mux.scala 46:16]
    node _T_1452 = eq(UInt<4>("h0c"), req.cmd) @[Mux.scala 46:19]
    node _T_1453 = mux(_T_1452, _T_1002, _T_1451) @[Mux.scala 46:16]
    node _T_1454 = eq(UInt<4>("h08"), req.cmd) @[Mux.scala 46:19]
    node _T_1455 = mux(_T_1454, _T_878, _T_1453) @[Mux.scala 46:16]
    node _T_1456 = eq(UInt<4>("h0b"), req.cmd) @[Mux.scala 46:19]
    node _T_1457 = mux(_T_1456, _T_754, _T_1455) @[Mux.scala 46:16]
    node _T_1458 = eq(UInt<4>("h0a"), req.cmd) @[Mux.scala 46:19]
    node _T_1459 = mux(_T_1458, _T_630, _T_1457) @[Mux.scala 46:16]
    node _T_1460 = eq(UInt<4>("h09"), req.cmd) @[Mux.scala 46:19]
    node _T_1461 = mux(_T_1460, _T_506, _T_1459) @[Mux.scala 46:16]
    node _T_1462 = eq(UInt<3>("h04"), req.cmd) @[Mux.scala 46:19]
    node atomics = mux(_T_1462, _T_382, _T_1461) @[Mux.scala 46:16]
    node _T_1463 = eq(state, UInt<2>("h00")) @[NBDcache.scala 101:16]
    node _T_1465 = neq(req.cmd, UInt<3>("h07")) @[NBDcache.scala 101:38]
    node _T_1466 = or(_T_1463, _T_1465) @[NBDcache.scala 101:27]
    node _T_1467 = bits(reset, 0, 0) @[NBDcache.scala 101:9]
    node _T_1468 = or(_T_1466, _T_1467) @[NBDcache.scala 101:9]
    node _T_1470 = eq(_T_1468, UInt<1>("h00")) @[NBDcache.scala 101:9]
    when _T_1470 : @[NBDcache.scala 101:9]
      printf(clock, UInt<1>(1), "Assertion failed\n    at NBDcache.scala:101 assert(state === s_idle || req.cmd =/= M_XSC)\n") @[NBDcache.scala 101:9]
      stop(clock, UInt<1>(1), 1) @[NBDcache.scala 101:9]
      skip @[NBDcache.scala 101:9]
    node _T_1471 = eq(state, UInt<2>("h01")) @[NBDcache.scala 103:33]
    io.mem_access.valid <= _T_1471 @[NBDcache.scala 103:23]
    node _T_1476 = eq(req.cmd, UInt<3>("h04")) @[package.scala 14:47]
    node _T_1477 = eq(req.cmd, UInt<4>("h09")) @[package.scala 14:47]
    node _T_1478 = eq(req.cmd, UInt<4>("h0a")) @[package.scala 14:47]
    node _T_1479 = eq(req.cmd, UInt<4>("h0b")) @[package.scala 14:47]
    node _T_1480 = or(_T_1476, _T_1477) @[package.scala 14:62]
    node _T_1481 = or(_T_1480, _T_1478) @[package.scala 14:62]
    node _T_1482 = or(_T_1481, _T_1479) @[package.scala 14:62]
    node _T_1488 = eq(req.cmd, UInt<4>("h08")) @[package.scala 14:47]
    node _T_1489 = eq(req.cmd, UInt<4>("h0c")) @[package.scala 14:47]
    node _T_1490 = eq(req.cmd, UInt<4>("h0d")) @[package.scala 14:47]
    node _T_1491 = eq(req.cmd, UInt<4>("h0e")) @[package.scala 14:47]
    node _T_1492 = eq(req.cmd, UInt<4>("h0f")) @[package.scala 14:47]
    node _T_1493 = or(_T_1488, _T_1489) @[package.scala 14:62]
    node _T_1494 = or(_T_1493, _T_1490) @[package.scala 14:62]
    node _T_1495 = or(_T_1494, _T_1491) @[package.scala 14:62]
    node _T_1496 = or(_T_1495, _T_1492) @[package.scala 14:62]
    node _T_1497 = or(_T_1482, _T_1496) @[Consts.scala 91:44]
    node _T_1499 = eq(req.cmd, UInt<1>("h00")) @[Consts.scala 93:31]
    node _T_1501 = eq(req.cmd, UInt<3>("h06")) @[Consts.scala 93:48]
    node _T_1502 = or(_T_1499, _T_1501) @[Consts.scala 93:41]
    node _T_1504 = eq(req.cmd, UInt<3>("h07")) @[Consts.scala 93:65]
    node _T_1505 = or(_T_1502, _T_1504) @[Consts.scala 93:58]
    node _T_1510 = eq(req.cmd, UInt<3>("h04")) @[package.scala 14:47]
    node _T_1511 = eq(req.cmd, UInt<4>("h09")) @[package.scala 14:47]
    node _T_1512 = eq(req.cmd, UInt<4>("h0a")) @[package.scala 14:47]
    node _T_1513 = eq(req.cmd, UInt<4>("h0b")) @[package.scala 14:47]
    node _T_1514 = or(_T_1510, _T_1511) @[package.scala 14:62]
    node _T_1515 = or(_T_1514, _T_1512) @[package.scala 14:62]
    node _T_1516 = or(_T_1515, _T_1513) @[package.scala 14:62]
    node _T_1522 = eq(req.cmd, UInt<4>("h08")) @[package.scala 14:47]
    node _T_1523 = eq(req.cmd, UInt<4>("h0c")) @[package.scala 14:47]
    node _T_1524 = eq(req.cmd, UInt<4>("h0d")) @[package.scala 14:47]
    node _T_1525 = eq(req.cmd, UInt<4>("h0e")) @[package.scala 14:47]
    node _T_1526 = eq(req.cmd, UInt<4>("h0f")) @[package.scala 14:47]
    node _T_1527 = or(_T_1522, _T_1523) @[package.scala 14:62]
    node _T_1528 = or(_T_1527, _T_1524) @[package.scala 14:62]
    node _T_1529 = or(_T_1528, _T_1525) @[package.scala 14:62]
    node _T_1530 = or(_T_1529, _T_1526) @[package.scala 14:62]
    node _T_1531 = or(_T_1516, _T_1530) @[Consts.scala 91:44]
    node _T_1532 = or(_T_1505, _T_1531) @[Consts.scala 93:75]
    node _T_1533 = mux(_T_1532, get, put) @[NBDcache.scala 104:57]
    node _T_1534 = mux(_T_1497, atomics, _T_1533) @[NBDcache.scala 104:28]
    io.mem_access.bits <- _T_1534 @[NBDcache.scala 104:22]
    node _T_1535 = eq(state, UInt<2>("h02")) @[NBDcache.scala 106:28]
    node _T_1537 = eq(io.resp.ready, UInt<1>("h00")) @[NBDcache.scala 106:63]
    node _T_1538 = and(io.resp.valid, _T_1537) @[NBDcache.scala 106:60]
    node _T_1539 = or(_T_1535, _T_1538) @[NBDcache.scala 106:43]
    io.replay_next <= _T_1539 @[NBDcache.scala 106:18]
    node _T_1540 = eq(state, UInt<2>("h03")) @[NBDcache.scala 107:27]
    io.resp.valid <= _T_1540 @[NBDcache.scala 107:17]
    io.resp.bits <- req @[NBDcache.scala 108:16]
    node _T_1542 = eq(req.cmd, UInt<1>("h00")) @[Consts.scala 93:31]
    node _T_1544 = eq(req.cmd, UInt<3>("h06")) @[Consts.scala 93:48]
    node _T_1545 = or(_T_1542, _T_1544) @[Consts.scala 93:41]
    node _T_1547 = eq(req.cmd, UInt<3>("h07")) @[Consts.scala 93:65]
    node _T_1548 = or(_T_1545, _T_1547) @[Consts.scala 93:58]
    node _T_1553 = eq(req.cmd, UInt<3>("h04")) @[package.scala 14:47]
    node _T_1554 = eq(req.cmd, UInt<4>("h09")) @[package.scala 14:47]
    node _T_1555 = eq(req.cmd, UInt<4>("h0a")) @[package.scala 14:47]
    node _T_1556 = eq(req.cmd, UInt<4>("h0b")) @[package.scala 14:47]
    node _T_1557 = or(_T_1553, _T_1554) @[package.scala 14:62]
    node _T_1558 = or(_T_1557, _T_1555) @[package.scala 14:62]
    node _T_1559 = or(_T_1558, _T_1556) @[package.scala 14:62]
    node _T_1565 = eq(req.cmd, UInt<4>("h08")) @[package.scala 14:47]
    node _T_1566 = eq(req.cmd, UInt<4>("h0c")) @[package.scala 14:47]
    node _T_1567 = eq(req.cmd, UInt<4>("h0d")) @[package.scala 14:47]
    node _T_1568 = eq(req.cmd, UInt<4>("h0e")) @[package.scala 14:47]
    node _T_1569 = eq(req.cmd, UInt<4>("h0f")) @[package.scala 14:47]
    node _T_1570 = or(_T_1565, _T_1566) @[package.scala 14:62]
    node _T_1571 = or(_T_1570, _T_1567) @[package.scala 14:62]
    node _T_1572 = or(_T_1571, _T_1568) @[package.scala 14:62]
    node _T_1573 = or(_T_1572, _T_1569) @[package.scala 14:62]
    node _T_1574 = or(_T_1559, _T_1573) @[Consts.scala 91:44]
    node _T_1575 = or(_T_1548, _T_1574) @[Consts.scala 93:75]
    io.resp.bits.has_data <= _T_1575 @[NBDcache.scala 109:25]
    node _T_1576 = bits(req.addr, 2, 2) @[AMOALU.scala 39:29]
    node _T_1577 = bits(grant_word, 63, 32) @[AMOALU.scala 39:37]
    node _T_1578 = bits(grant_word, 31, 0) @[AMOALU.scala 39:55]
    node _T_1579 = mux(_T_1576, _T_1577, _T_1578) @[AMOALU.scala 39:24]
    node _T_1581 = and(UInt<1>("h00"), UInt<1>("h00")) @[AMOALU.scala 40:33]
    node _T_1583 = mux(_T_1581, UInt<1>("h00"), _T_1579) @[AMOALU.scala 41:23]
    node _T_1585 = eq(_T_34, UInt<2>("h02")) @[AMOALU.scala 42:26]
    node _T_1586 = or(_T_1585, _T_1581) @[AMOALU.scala 42:38]
    node _T_1587 = bits(_T_1583, 31, 31) @[AMOALU.scala 42:85]
    node _T_1588 = and(_T_32, _T_1587) @[AMOALU.scala 42:76]
    node _T_1589 = bits(_T_1588, 0, 0) @[Bitwise.scala 72:15]
    node _T_1592 = mux(_T_1589, UInt<32>("h0ffffffff"), UInt<32>("h00")) @[Bitwise.scala 72:12]
    node _T_1593 = bits(grant_word, 63, 32) @[AMOALU.scala 42:98]
    node _T_1594 = mux(_T_1586, _T_1592, _T_1593) @[AMOALU.scala 42:20]
    node _T_1595 = cat(_T_1594, _T_1583) @[Cat.scala 30:58]
    node _T_1596 = bits(req.addr, 1, 1) @[AMOALU.scala 39:29]
    node _T_1597 = bits(_T_1595, 31, 16) @[AMOALU.scala 39:37]
    node _T_1598 = bits(_T_1595, 15, 0) @[AMOALU.scala 39:55]
    node _T_1599 = mux(_T_1596, _T_1597, _T_1598) @[AMOALU.scala 39:24]
    node _T_1601 = and(UInt<1>("h00"), UInt<1>("h00")) @[AMOALU.scala 40:33]
    node _T_1603 = mux(_T_1601, UInt<1>("h00"), _T_1599) @[AMOALU.scala 41:23]
    node _T_1605 = eq(_T_34, UInt<1>("h01")) @[AMOALU.scala 42:26]
    node _T_1606 = or(_T_1605, _T_1601) @[AMOALU.scala 42:38]
    node _T_1607 = bits(_T_1603, 15, 15) @[AMOALU.scala 42:85]
    node _T_1608 = and(_T_32, _T_1607) @[AMOALU.scala 42:76]
    node _T_1609 = bits(_T_1608, 0, 0) @[Bitwise.scala 72:15]
    node _T_1612 = mux(_T_1609, UInt<48>("h0ffffffffffff"), UInt<48>("h00")) @[Bitwise.scala 72:12]
    node _T_1613 = bits(_T_1595, 63, 16) @[AMOALU.scala 42:98]
    node _T_1614 = mux(_T_1606, _T_1612, _T_1613) @[AMOALU.scala 42:20]
    node _T_1615 = cat(_T_1614, _T_1603) @[Cat.scala 30:58]
    node _T_1616 = bits(req.addr, 0, 0) @[AMOALU.scala 39:29]
    node _T_1617 = bits(_T_1615, 15, 8) @[AMOALU.scala 39:37]
    node _T_1618 = bits(_T_1615, 7, 0) @[AMOALU.scala 39:55]
    node _T_1619 = mux(_T_1616, _T_1617, _T_1618) @[AMOALU.scala 39:24]
    node _T_1621 = and(UInt<1>("h01"), UInt<1>("h00")) @[AMOALU.scala 40:33]
    node _T_1623 = mux(_T_1621, UInt<1>("h00"), _T_1619) @[AMOALU.scala 41:23]
    node _T_1625 = eq(_T_34, UInt<1>("h00")) @[AMOALU.scala 42:26]
    node _T_1626 = or(_T_1625, _T_1621) @[AMOALU.scala 42:38]
    node _T_1627 = bits(_T_1623, 7, 7) @[AMOALU.scala 42:85]
    node _T_1628 = and(_T_32, _T_1627) @[AMOALU.scala 42:76]
    node _T_1629 = bits(_T_1628, 0, 0) @[Bitwise.scala 72:15]
    node _T_1632 = mux(_T_1629, UInt<56>("h0ffffffffffffff"), UInt<56>("h00")) @[Bitwise.scala 72:12]
    node _T_1633 = bits(_T_1615, 63, 8) @[AMOALU.scala 42:98]
    node _T_1634 = mux(_T_1626, _T_1632, _T_1633) @[AMOALU.scala 42:20]
    node _T_1635 = cat(_T_1634, _T_1623) @[Cat.scala 30:58]
    io.resp.bits.data <= _T_1635 @[NBDcache.scala 110:21]
    io.resp.bits.store_data <= req.data @[NBDcache.scala 111:27]
    io.resp.bits.replay <= UInt<1>("h01") @[NBDcache.scala 112:23]
    node _T_1637 = and(io.req.ready, io.req.valid) @[Decoupled.scala 30:37]
    when _T_1637 : @[NBDcache.scala 114:24]
      req <- io.req.bits @[NBDcache.scala 115:9]
      state <= UInt<2>("h01") @[NBDcache.scala 116:11]
      skip @[NBDcache.scala 114:24]
    node _T_1638 = and(io.mem_access.ready, io.mem_access.valid) @[Decoupled.scala 30:37]
    when _T_1638 : @[NBDcache.scala 119:31]
      state <= UInt<2>("h02") @[NBDcache.scala 120:11]
      skip @[NBDcache.scala 119:31]
    node _T_1639 = eq(state, UInt<2>("h02")) @[NBDcache.scala 123:15]
    node _T_1640 = and(_T_1639, io.mem_ack.valid) @[NBDcache.scala 123:29]
    when _T_1640 : @[NBDcache.scala 123:50]
      state <= UInt<2>("h03") @[NBDcache.scala 124:11]
      node _T_1642 = eq(req.cmd, UInt<1>("h00")) @[Consts.scala 93:31]
      node _T_1644 = eq(req.cmd, UInt<3>("h06")) @[Consts.scala 93:48]
      node _T_1645 = or(_T_1642, _T_1644) @[Consts.scala 93:41]
      node _T_1647 = eq(req.cmd, UInt<3>("h07")) @[Consts.scala 93:65]
      node _T_1648 = or(_T_1645, _T_1647) @[Consts.scala 93:58]
      node _T_1653 = eq(req.cmd, UInt<3>("h04")) @[package.scala 14:47]
      node _T_1654 = eq(req.cmd, UInt<4>("h09")) @[package.scala 14:47]
      node _T_1655 = eq(req.cmd, UInt<4>("h0a")) @[package.scala 14:47]
      node _T_1656 = eq(req.cmd, UInt<4>("h0b")) @[package.scala 14:47]
      node _T_1657 = or(_T_1653, _T_1654) @[package.scala 14:62]
      node _T_1658 = or(_T_1657, _T_1655) @[package.scala 14:62]
      node _T_1659 = or(_T_1658, _T_1656) @[package.scala 14:62]
      node _T_1665 = eq(req.cmd, UInt<4>("h08")) @[package.scala 14:47]
      node _T_1666 = eq(req.cmd, UInt<4>("h0c")) @[package.scala 14:47]
      node _T_1667 = eq(req.cmd, UInt<4>("h0d")) @[package.scala 14:47]
      node _T_1668 = eq(req.cmd, UInt<4>("h0e")) @[package.scala 14:47]
      node _T_1669 = eq(req.cmd, UInt<4>("h0f")) @[package.scala 14:47]
      node _T_1670 = or(_T_1665, _T_1666) @[package.scala 14:62]
      node _T_1671 = or(_T_1670, _T_1667) @[package.scala 14:62]
      node _T_1672 = or(_T_1671, _T_1668) @[package.scala 14:62]
      node _T_1673 = or(_T_1672, _T_1669) @[package.scala 14:62]
      node _T_1674 = or(_T_1659, _T_1673) @[Consts.scala 91:44]
      node _T_1675 = or(_T_1648, _T_1674) @[Consts.scala 93:75]
      when _T_1675 : @[NBDcache.scala 125:28]
        node _T_1678 = cat(UInt<1>("h00"), UInt<6>("h00")) @[Cat.scala 30:58]
        node _T_1679 = dshr(io.mem_ack.bits.data, _T_1678) @[NBDcache.scala 66:10]
        node _T_1680 = bits(_T_1679, 63, 0) @[NBDcache.scala 66:19]
        grant_word <= _T_1680 @[NBDcache.scala 126:18]
        skip @[NBDcache.scala 125:28]
      skip @[NBDcache.scala 123:50]
    node _T_1681 = and(io.resp.ready, io.resp.valid) @[Decoupled.scala 30:37]
    when _T_1681 : @[NBDcache.scala 130:25]
      state <= UInt<2>("h00") @[NBDcache.scala 131:11]
      skip @[NBDcache.scala 130:25]
    
  module MSHRFile : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip req : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<40>, tag : UInt<7>, cmd : UInt<5>, typ : UInt<3>, phys : UInt<1>, data : UInt<64>, tag_match : UInt<1>, old_meta : {coh : {state : UInt<2>}, tag : UInt<20>}, way_en : UInt<4>}}, resp : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<40>, tag : UInt<7>, cmd : UInt<5>, typ : UInt<3>, data : UInt<64>, replay : UInt<1>, has_data : UInt<1>, data_word_bypass : UInt<64>, data_raw : UInt<64>, store_data : UInt<64>}}, secondary_miss : UInt<1>, mem_acquire : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<2>, address : UInt<32>, mask : UInt<8>, data : UInt<64>}}, flip mem_grant : {valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<2>, sink : UInt<3>, data : UInt<64>, error : UInt<1>}}, mem_finish : {flip ready : UInt<1>, valid : UInt<1>, bits : {sink : UInt<3>}}, refill : {way_en : UInt<4>, addr : UInt<12>}, meta_read : {flip ready : UInt<1>, valid : UInt<1>, bits : {idx : UInt<6>, way_en : UInt<4>, tag : UInt<20>}}, meta_write : {flip ready : UInt<1>, valid : UInt<1>, bits : {idx : UInt<6>, way_en : UInt<4>, tag : UInt<20>, data : {coh : {state : UInt<2>}, tag : UInt<20>}}}, replay : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<40>, tag : UInt<7>, cmd : UInt<5>, typ : UInt<3>, phys : UInt<1>, data : UInt<64>}}, wb_req : {flip ready : UInt<1>, valid : UInt<1>, bits : {tag : UInt<20>, idx : UInt<6>, source : UInt<2>, param : UInt<3>, way_en : UInt<4>, voluntary : UInt<1>}}, probe_rdy : UInt<1>, fence_rdy : UInt<1>, replay_next : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node _T_52 = leq(UInt<1>("h00"), UInt<3>("h06")) @[Parameters.scala 88:32]
    node _T_54 = leq(UInt<3>("h06"), UInt<4>("h0c")) @[Parameters.scala 88:42]
    node _T_55 = and(_T_52, _T_54) @[Parameters.scala 88:37]
    node _T_56 = or(UInt<1>("h00"), _T_55) @[Parameters.scala 157:31]
    node _T_58 = xor(io.req.bits.addr, UInt<14>("h02000")) @[Parameters.scala 153:31]
    node _T_59 = cvt(_T_58) @[Parameters.scala 153:49]
    node _T_61 = and(_T_59, asSInt(UInt<33>("h08a012000"))) @[Parameters.scala 153:52]
    node _T_62 = asSInt(_T_61) @[Parameters.scala 153:52]
    node _T_64 = eq(_T_62, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_65 = and(_T_56, _T_64) @[Parameters.scala 157:56]
    node _T_68 = leq(UInt<1>("h00"), UInt<3>("h06")) @[Parameters.scala 88:32]
    node _T_70 = leq(UInt<3>("h06"), UInt<3>("h06")) @[Parameters.scala 88:42]
    node _T_71 = and(_T_68, _T_70) @[Parameters.scala 88:37]
    node _T_72 = or(UInt<1>("h00"), _T_71) @[Parameters.scala 157:31]
    node _T_74 = xor(io.req.bits.addr, UInt<32>("h080000000")) @[Parameters.scala 153:31]
    node _T_75 = cvt(_T_74) @[Parameters.scala 153:49]
    node _T_77 = and(_T_75, asSInt(UInt<33>("h080000000"))) @[Parameters.scala 153:52]
    node _T_78 = asSInt(_T_77) @[Parameters.scala 153:52]
    node _T_80 = eq(_T_78, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_81 = and(_T_72, _T_80) @[Parameters.scala 157:56]
    node _T_84 = or(UInt<1>("h00"), UInt<1>("h00")) @[Parameters.scala 157:31]
    node _T_86 = xor(io.req.bits.addr, UInt<28>("h08000000")) @[Parameters.scala 153:31]
    node _T_87 = cvt(_T_86) @[Parameters.scala 153:49]
    node _T_89 = and(_T_87, asSInt(UInt<33>("h088000000"))) @[Parameters.scala 153:52]
    node _T_90 = asSInt(_T_89) @[Parameters.scala 153:52]
    node _T_92 = eq(_T_90, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_94 = xor(io.req.bits.addr, UInt<26>("h02000000")) @[Parameters.scala 153:31]
    node _T_95 = cvt(_T_94) @[Parameters.scala 153:49]
    node _T_97 = and(_T_95, asSInt(UInt<33>("h08a010000"))) @[Parameters.scala 153:52]
    node _T_98 = asSInt(_T_97) @[Parameters.scala 153:52]
    node _T_100 = eq(_T_98, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_102 = xor(io.req.bits.addr, UInt<1>("h00")) @[Parameters.scala 153:31]
    node _T_103 = cvt(_T_102) @[Parameters.scala 153:49]
    node _T_105 = and(_T_103, asSInt(UInt<33>("h08a012000"))) @[Parameters.scala 153:52]
    node _T_106 = asSInt(_T_105) @[Parameters.scala 153:52]
    node _T_108 = eq(_T_106, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_110 = xor(io.req.bits.addr, UInt<17>("h010000")) @[Parameters.scala 153:31]
    node _T_111 = cvt(_T_110) @[Parameters.scala 153:49]
    node _T_113 = and(_T_111, asSInt(UInt<33>("h08a010000"))) @[Parameters.scala 153:52]
    node _T_114 = asSInt(_T_113) @[Parameters.scala 153:52]
    node _T_116 = eq(_T_114, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_117 = or(_T_92, _T_100) @[Parameters.scala 158:42]
    node _T_118 = or(_T_117, _T_108) @[Parameters.scala 158:42]
    node _T_119 = or(_T_118, _T_116) @[Parameters.scala 158:42]
    node _T_120 = and(_T_84, _T_119) @[Parameters.scala 157:56]
    node _T_122 = or(UInt<1>("h00"), _T_65) @[Parameters.scala 159:30]
    node _T_123 = or(_T_122, _T_81) @[Parameters.scala 159:30]
    node cacheable = or(_T_123, _T_120) @[Parameters.scala 159:30]
    reg sdq_val : UInt<17>, clock with : (reset => (reset, UInt<17>("h00"))) @[NBDcache.scala 324:20]
    node _T_126 = bits(sdq_val, 16, 0) @[NBDcache.scala 325:46]
    node _T_127 = not(_T_126) @[NBDcache.scala 325:38]
    node _T_128 = bits(_T_127, 0, 0) @[OneHot.scala 39:40]
    node _T_129 = bits(_T_127, 1, 1) @[OneHot.scala 39:40]
    node _T_130 = bits(_T_127, 2, 2) @[OneHot.scala 39:40]
    node _T_131 = bits(_T_127, 3, 3) @[OneHot.scala 39:40]
    node _T_132 = bits(_T_127, 4, 4) @[OneHot.scala 39:40]
    node _T_133 = bits(_T_127, 5, 5) @[OneHot.scala 39:40]
    node _T_134 = bits(_T_127, 6, 6) @[OneHot.scala 39:40]
    node _T_135 = bits(_T_127, 7, 7) @[OneHot.scala 39:40]
    node _T_136 = bits(_T_127, 8, 8) @[OneHot.scala 39:40]
    node _T_137 = bits(_T_127, 9, 9) @[OneHot.scala 39:40]
    node _T_138 = bits(_T_127, 10, 10) @[OneHot.scala 39:40]
    node _T_139 = bits(_T_127, 11, 11) @[OneHot.scala 39:40]
    node _T_140 = bits(_T_127, 12, 12) @[OneHot.scala 39:40]
    node _T_141 = bits(_T_127, 13, 13) @[OneHot.scala 39:40]
    node _T_142 = bits(_T_127, 14, 14) @[OneHot.scala 39:40]
    node _T_143 = bits(_T_127, 15, 15) @[OneHot.scala 39:40]
    node _T_144 = bits(_T_127, 16, 16) @[OneHot.scala 39:40]
    node _T_162 = mux(_T_143, UInt<4>("h0f"), UInt<5>("h010")) @[Mux.scala 31:69]
    node _T_163 = mux(_T_142, UInt<4>("h0e"), _T_162) @[Mux.scala 31:69]
    node _T_164 = mux(_T_141, UInt<4>("h0d"), _T_163) @[Mux.scala 31:69]
    node _T_165 = mux(_T_140, UInt<4>("h0c"), _T_164) @[Mux.scala 31:69]
    node _T_166 = mux(_T_139, UInt<4>("h0b"), _T_165) @[Mux.scala 31:69]
    node _T_167 = mux(_T_138, UInt<4>("h0a"), _T_166) @[Mux.scala 31:69]
    node _T_168 = mux(_T_137, UInt<4>("h09"), _T_167) @[Mux.scala 31:69]
    node _T_169 = mux(_T_136, UInt<4>("h08"), _T_168) @[Mux.scala 31:69]
    node _T_170 = mux(_T_135, UInt<3>("h07"), _T_169) @[Mux.scala 31:69]
    node _T_171 = mux(_T_134, UInt<3>("h06"), _T_170) @[Mux.scala 31:69]
    node _T_172 = mux(_T_133, UInt<3>("h05"), _T_171) @[Mux.scala 31:69]
    node _T_173 = mux(_T_132, UInt<3>("h04"), _T_172) @[Mux.scala 31:69]
    node _T_174 = mux(_T_131, UInt<2>("h03"), _T_173) @[Mux.scala 31:69]
    node _T_175 = mux(_T_130, UInt<2>("h02"), _T_174) @[Mux.scala 31:69]
    node _T_176 = mux(_T_129, UInt<1>("h01"), _T_175) @[Mux.scala 31:69]
    node sdq_alloc_id = mux(_T_128, UInt<1>("h00"), _T_176) @[Mux.scala 31:69]
    node _T_177 = not(sdq_val) @[NBDcache.scala 326:26]
    node _T_179 = eq(_T_177, UInt<1>("h00")) @[NBDcache.scala 326:26]
    node sdq_rdy = eq(_T_179, UInt<1>("h00")) @[NBDcache.scala 326:17]
    node _T_181 = and(io.req.valid, io.req.ready) @[NBDcache.scala 327:30]
    node _T_182 = and(_T_181, cacheable) @[NBDcache.scala 327:46]
    node _T_184 = eq(io.req.bits.cmd, UInt<1>("h01")) @[Consts.scala 94:32]
    node _T_186 = eq(io.req.bits.cmd, UInt<5>("h011")) @[Consts.scala 94:49]
    node _T_187 = or(_T_184, _T_186) @[Consts.scala 94:42]
    node _T_189 = eq(io.req.bits.cmd, UInt<3>("h07")) @[Consts.scala 94:66]
    node _T_190 = or(_T_187, _T_189) @[Consts.scala 94:59]
    node _T_195 = eq(io.req.bits.cmd, UInt<3>("h04")) @[package.scala 14:47]
    node _T_196 = eq(io.req.bits.cmd, UInt<4>("h09")) @[package.scala 14:47]
    node _T_197 = eq(io.req.bits.cmd, UInt<4>("h0a")) @[package.scala 14:47]
    node _T_198 = eq(io.req.bits.cmd, UInt<4>("h0b")) @[package.scala 14:47]
    node _T_199 = or(_T_195, _T_196) @[package.scala 14:62]
    node _T_200 = or(_T_199, _T_197) @[package.scala 14:62]
    node _T_201 = or(_T_200, _T_198) @[package.scala 14:62]
    node _T_207 = eq(io.req.bits.cmd, UInt<4>("h08")) @[package.scala 14:47]
    node _T_208 = eq(io.req.bits.cmd, UInt<4>("h0c")) @[package.scala 14:47]
    node _T_209 = eq(io.req.bits.cmd, UInt<4>("h0d")) @[package.scala 14:47]
    node _T_210 = eq(io.req.bits.cmd, UInt<4>("h0e")) @[package.scala 14:47]
    node _T_211 = eq(io.req.bits.cmd, UInt<4>("h0f")) @[package.scala 14:47]
    node _T_212 = or(_T_207, _T_208) @[package.scala 14:62]
    node _T_213 = or(_T_212, _T_209) @[package.scala 14:62]
    node _T_214 = or(_T_213, _T_210) @[package.scala 14:62]
    node _T_215 = or(_T_214, _T_211) @[package.scala 14:62]
    node _T_216 = or(_T_201, _T_215) @[Consts.scala 91:44]
    node _T_217 = or(_T_190, _T_216) @[Consts.scala 94:76]
    node sdq_enq = and(_T_182, _T_217) @[NBDcache.scala 327:59]
    cmem sdq : UInt<64>[17] @[NBDcache.scala 328:16]
    when sdq_enq : @[NBDcache.scala 329:18]
      infer mport _T_219 = sdq[sdq_alloc_id], clock @[NBDcache.scala 329:23]
      _T_219 <= io.req.bits.data @[NBDcache.scala 329:38]
      skip @[NBDcache.scala 329:18]
    wire idxMatch : UInt<1>[2] @[NBDcache.scala 331:22]
    idxMatch is invalid @[NBDcache.scala 331:22]
    wire tagList : UInt<20>[2] @[NBDcache.scala 332:21]
    tagList is invalid @[NBDcache.scala 332:21]
    node _T_236 = mux(idxMatch[0], tagList[0], UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_238 = mux(idxMatch[1], tagList[1], UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_239 = or(_T_236, _T_238) @[Mux.scala 19:72]
    wire _T_241 : UInt<20> @[Mux.scala 19:72]
    _T_241 <= _T_239 @[Mux.scala 19:72]
    node _T_242 = shr(io.req.bits.addr, 12) @[NBDcache.scala 333:65]
    node tag_match = eq(_T_241, _T_242) @[NBDcache.scala 333:44]
    wire wbTagList : UInt[2] @[NBDcache.scala 335:23]
    wbTagList is invalid @[NBDcache.scala 335:23]
    wire refillMux : {way_en : UInt<4>, addr : UInt<12>}[2] @[NBDcache.scala 336:23]
    refillMux is invalid @[NBDcache.scala 336:23]
    inst meta_read_arb of Arbiter @[NBDcache.scala 337:29]
    meta_read_arb.io is invalid
    meta_read_arb.clock <= clock
    meta_read_arb.reset <= reset
    inst meta_write_arb of Arbiter_1 @[NBDcache.scala 338:30]
    meta_write_arb.io is invalid
    meta_write_arb.clock <= clock
    meta_write_arb.reset <= reset
    inst wb_req_arb of Arbiter_2 @[NBDcache.scala 339:26]
    wb_req_arb.io is invalid
    wb_req_arb.clock <= clock
    wb_req_arb.reset <= reset
    inst replay_arb of Arbiter_3 @[NBDcache.scala 340:26]
    replay_arb.io is invalid
    replay_arb.clock <= clock
    replay_arb.reset <= reset
    inst alloc_arb of Arbiter_4 @[NBDcache.scala 341:25]
    alloc_arb.io is invalid
    alloc_arb.clock <= clock
    alloc_arb.reset <= reset
    io.fence_rdy <= UInt<1>("h01") @[NBDcache.scala 347:16]
    io.probe_rdy <= UInt<1>("h01") @[NBDcache.scala 348:16]
    inst mshrs_0 of MSHR @[NBDcache.scala 351:22]
    mshrs_0.io is invalid
    mshrs_0.clock <= clock
    mshrs_0.reset <= reset
    idxMatch[0] <= mshrs_0.io.idx_match @[NBDcache.scala 353:17]
    tagList[0] <= mshrs_0.io.tag @[NBDcache.scala 354:16]
    wbTagList[0] <= mshrs_0.io.wb_req.bits.tag @[NBDcache.scala 355:18]
    alloc_arb.io.in[0].valid <= mshrs_0.io.req_pri_rdy @[NBDcache.scala 357:30]
    mshrs_0.io.req_pri_val <= alloc_arb.io.in[0].ready @[NBDcache.scala 358:25]
    node _T_267 = and(io.req.valid, sdq_rdy) @[NBDcache.scala 360:41]
    node _T_268 = and(_T_267, tag_match) @[NBDcache.scala 360:52]
    mshrs_0.io.req_sec_val <= _T_268 @[NBDcache.scala 360:25]
    mshrs_0.io.req_bits <- io.req.bits @[NBDcache.scala 361:22]
    mshrs_0.io.req_bits.sdq_id <= sdq_alloc_id @[NBDcache.scala 362:29]
    meta_read_arb.io.in[0] <- mshrs_0.io.meta_read @[NBDcache.scala 364:28]
    meta_write_arb.io.in[0] <- mshrs_0.io.meta_write @[NBDcache.scala 365:29]
    wb_req_arb.io.in[0] <- mshrs_0.io.wb_req @[NBDcache.scala 366:25]
    replay_arb.io.in[0] <- mshrs_0.io.replay @[NBDcache.scala 367:25]
    node _T_270 = eq(io.mem_grant.bits.source, UInt<1>("h00")) @[NBDcache.scala 369:79]
    node _T_271 = and(io.mem_grant.valid, _T_270) @[NBDcache.scala 369:51]
    mshrs_0.io.mem_grant.valid <= _T_271 @[NBDcache.scala 369:29]
    mshrs_0.io.mem_grant.bits <- io.mem_grant.bits @[NBDcache.scala 370:28]
    refillMux[0] <- mshrs_0.io.refill @[NBDcache.scala 371:18]
    node _T_272 = or(UInt<1>("h00"), mshrs_0.io.req_pri_rdy) @[NBDcache.scala 373:23]
    node _T_273 = or(UInt<1>("h00"), mshrs_0.io.req_sec_rdy) @[NBDcache.scala 374:23]
    node _T_274 = or(UInt<1>("h00"), mshrs_0.io.idx_match) @[NBDcache.scala 375:27]
    node _T_276 = eq(mshrs_0.io.req_pri_rdy, UInt<1>("h00")) @[NBDcache.scala 377:11]
    when _T_276 : @[NBDcache.scala 377:33]
      io.fence_rdy <= UInt<1>("h00") @[NBDcache.scala 377:48]
      skip @[NBDcache.scala 377:33]
    node _T_279 = eq(mshrs_0.io.probe_rdy, UInt<1>("h00")) @[NBDcache.scala 378:11]
    when _T_279 : @[NBDcache.scala 378:31]
      io.probe_rdy <= UInt<1>("h00") @[NBDcache.scala 378:46]
      skip @[NBDcache.scala 378:31]
    inst mshrs_1 of MSHR_1 @[NBDcache.scala 351:22]
    mshrs_1.io is invalid
    mshrs_1.clock <= clock
    mshrs_1.reset <= reset
    idxMatch[1] <= mshrs_1.io.idx_match @[NBDcache.scala 353:17]
    tagList[1] <= mshrs_1.io.tag @[NBDcache.scala 354:16]
    wbTagList[1] <= mshrs_1.io.wb_req.bits.tag @[NBDcache.scala 355:18]
    alloc_arb.io.in[1].valid <= mshrs_1.io.req_pri_rdy @[NBDcache.scala 357:30]
    mshrs_1.io.req_pri_val <= alloc_arb.io.in[1].ready @[NBDcache.scala 358:25]
    node _T_281 = and(io.req.valid, sdq_rdy) @[NBDcache.scala 360:41]
    node _T_282 = and(_T_281, tag_match) @[NBDcache.scala 360:52]
    mshrs_1.io.req_sec_val <= _T_282 @[NBDcache.scala 360:25]
    mshrs_1.io.req_bits <- io.req.bits @[NBDcache.scala 361:22]
    mshrs_1.io.req_bits.sdq_id <= sdq_alloc_id @[NBDcache.scala 362:29]
    meta_read_arb.io.in[1] <- mshrs_1.io.meta_read @[NBDcache.scala 364:28]
    meta_write_arb.io.in[1] <- mshrs_1.io.meta_write @[NBDcache.scala 365:29]
    wb_req_arb.io.in[1] <- mshrs_1.io.wb_req @[NBDcache.scala 366:25]
    replay_arb.io.in[1] <- mshrs_1.io.replay @[NBDcache.scala 367:25]
    node _T_284 = eq(io.mem_grant.bits.source, UInt<1>("h01")) @[NBDcache.scala 369:79]
    node _T_285 = and(io.mem_grant.valid, _T_284) @[NBDcache.scala 369:51]
    mshrs_1.io.mem_grant.valid <= _T_285 @[NBDcache.scala 369:29]
    mshrs_1.io.mem_grant.bits <- io.mem_grant.bits @[NBDcache.scala 370:28]
    refillMux[1] <- mshrs_1.io.refill @[NBDcache.scala 371:18]
    node pri_rdy = or(_T_272, mshrs_1.io.req_pri_rdy) @[NBDcache.scala 373:23]
    node sec_rdy = or(_T_273, mshrs_1.io.req_sec_rdy) @[NBDcache.scala 374:23]
    node idx_match = or(_T_274, mshrs_1.io.idx_match) @[NBDcache.scala 375:27]
    node _T_287 = eq(mshrs_1.io.req_pri_rdy, UInt<1>("h00")) @[NBDcache.scala 377:11]
    when _T_287 : @[NBDcache.scala 377:33]
      io.fence_rdy <= UInt<1>("h00") @[NBDcache.scala 377:48]
      skip @[NBDcache.scala 377:33]
    node _T_290 = eq(mshrs_1.io.probe_rdy, UInt<1>("h00")) @[NBDcache.scala 378:11]
    when _T_290 : @[NBDcache.scala 378:31]
      io.probe_rdy <= UInt<1>("h00") @[NBDcache.scala 378:46]
      skip @[NBDcache.scala 378:31]
    node _T_292 = and(io.req.valid, sdq_rdy) @[NBDcache.scala 384:42]
    node _T_293 = and(_T_292, cacheable) @[NBDcache.scala 384:53]
    node _T_295 = eq(idx_match, UInt<1>("h00")) @[NBDcache.scala 384:69]
    node _T_296 = and(_T_293, _T_295) @[NBDcache.scala 384:66]
    alloc_arb.io.out.ready <= _T_296 @[NBDcache.scala 384:26]
    io.meta_read <- meta_read_arb.io.out @[NBDcache.scala 386:16]
    io.meta_write <- meta_write_arb.io.out @[NBDcache.scala 387:17]
    io.wb_req <- wb_req_arb.io.out @[NBDcache.scala 388:13]
    inst mmio_alloc_arb of Arbiter_5 @[NBDcache.scala 390:30]
    mmio_alloc_arb.io is invalid
    mmio_alloc_arb.clock <= clock
    mmio_alloc_arb.reset <= reset
    inst resp_arb of Arbiter_6 @[NBDcache.scala 391:24]
    resp_arb.io is invalid
    resp_arb.clock <= clock
    resp_arb.reset <= reset
    io.replay_next <= UInt<1>("h00") @[NBDcache.scala 394:18]
    inst mmios_0 of IOMSHR @[NBDcache.scala 398:22]
    mmios_0.io is invalid
    mmios_0.clock <= clock
    mmios_0.reset <= reset
    mmio_alloc_arb.io.in[0].valid <= mmios_0.io.req.ready @[NBDcache.scala 400:35]
    mmios_0.io.req.valid <= mmio_alloc_arb.io.in[0].ready @[NBDcache.scala 401:23]
    mmios_0.io.req.bits <- io.req.bits @[NBDcache.scala 402:22]
    node mmio_rdy = or(UInt<1>("h00"), mmios_0.io.req.ready) @[NBDcache.scala 404:25]
    mmios_0.io.mem_ack.bits <- io.mem_grant.bits @[NBDcache.scala 406:26]
    node _T_302 = eq(io.mem_grant.bits.source, UInt<2>("h02")) @[NBDcache.scala 407:77]
    node _T_303 = and(io.mem_grant.valid, _T_302) @[NBDcache.scala 407:49]
    mmios_0.io.mem_ack.valid <= _T_303 @[NBDcache.scala 407:27]
    resp_arb.io.in[0] <- mmios_0.io.resp @[NBDcache.scala 409:23]
    node _T_305 = eq(mmios_0.io.req.ready, UInt<1>("h00")) @[NBDcache.scala 411:11]
    when _T_305 : @[NBDcache.scala 411:31]
      io.fence_rdy <= UInt<1>("h00") @[NBDcache.scala 411:46]
      skip @[NBDcache.scala 411:31]
    when mmios_0.io.replay_next : @[NBDcache.scala 412:32]
      io.replay_next <= UInt<1>("h01") @[NBDcache.scala 412:49]
      skip @[NBDcache.scala 412:32]
    node _T_309 = eq(cacheable, UInt<1>("h00")) @[NBDcache.scala 417:50]
    node _T_310 = and(io.req.valid, _T_309) @[NBDcache.scala 417:47]
    mmio_alloc_arb.io.out.ready <= _T_310 @[NBDcache.scala 417:31]
    node _T_312 = asUInt(asSInt(UInt<12>("h0fff"))) @[package.scala 82:70]
    node _T_313 = dshl(_T_312, mshrs_0.io.mem_acquire.bits.size) @[package.scala 82:77]
    node _T_314 = bits(_T_313, 11, 0) @[package.scala 82:82]
    node _T_315 = not(_T_314) @[package.scala 82:46]
    node _T_316 = shr(_T_315, 3) @[Edges.scala 211:59]
    node _T_317 = bits(mshrs_0.io.mem_acquire.bits.opcode, 2, 2) @[Edges.scala 92:37]
    node _T_319 = eq(_T_317, UInt<1>("h00")) @[Edges.scala 92:28]
    node _T_321 = mux(_T_319, _T_316, UInt<1>("h00")) @[Edges.scala 212:14]
    node _T_323 = asUInt(asSInt(UInt<12>("h0fff"))) @[package.scala 82:70]
    node _T_324 = dshl(_T_323, mshrs_1.io.mem_acquire.bits.size) @[package.scala 82:77]
    node _T_325 = bits(_T_324, 11, 0) @[package.scala 82:82]
    node _T_326 = not(_T_325) @[package.scala 82:46]
    node _T_327 = shr(_T_326, 3) @[Edges.scala 211:59]
    node _T_328 = bits(mshrs_1.io.mem_acquire.bits.opcode, 2, 2) @[Edges.scala 92:37]
    node _T_330 = eq(_T_328, UInt<1>("h00")) @[Edges.scala 92:28]
    node _T_332 = mux(_T_330, _T_327, UInt<1>("h00")) @[Edges.scala 212:14]
    node _T_334 = asUInt(asSInt(UInt<12>("h0fff"))) @[package.scala 82:70]
    node _T_335 = dshl(_T_334, mmios_0.io.mem_access.bits.size) @[package.scala 82:77]
    node _T_336 = bits(_T_335, 11, 0) @[package.scala 82:82]
    node _T_337 = not(_T_336) @[package.scala 82:46]
    node _T_338 = shr(_T_337, 3) @[Edges.scala 211:59]
    node _T_339 = bits(mmios_0.io.mem_access.bits.opcode, 2, 2) @[Edges.scala 92:37]
    node _T_341 = eq(_T_339, UInt<1>("h00")) @[Edges.scala 92:28]
    node _T_343 = mux(_T_341, _T_338, UInt<1>("h00")) @[Edges.scala 212:14]
    reg _T_346 : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[Arbiter.scala 51:30]
    node _T_348 = eq(_T_346, UInt<1>("h00")) @[Arbiter.scala 52:28]
    node _T_349 = and(_T_348, io.mem_acquire.ready) @[Arbiter.scala 53:24]
    node _T_350 = cat(mmios_0.io.mem_access.valid, mshrs_1.io.mem_acquire.valid) @[Cat.scala 30:58]
    node _T_351 = cat(_T_350, mshrs_0.io.mem_acquire.valid) @[Cat.scala 30:58]
    node _T_352 = shl(_T_351, 1) @[package.scala 91:48]
    node _T_353 = bits(_T_352, 2, 0) @[package.scala 91:53]
    node _T_354 = or(_T_351, _T_353) @[package.scala 91:43]
    node _T_355 = shl(_T_354, 2) @[package.scala 91:48]
    node _T_356 = bits(_T_355, 2, 0) @[package.scala 91:53]
    node _T_357 = or(_T_354, _T_356) @[package.scala 91:43]
    node _T_358 = bits(_T_357, 2, 0) @[package.scala 92:17]
    node _T_359 = shl(_T_358, 1) @[Arbiter.scala 15:78]
    node _T_360 = bits(_T_359, 2, 0) @[Arbiter.scala 15:83]
    node _T_361 = not(_T_360) @[Arbiter.scala 15:61]
    node _T_362 = bits(_T_361, 0, 0) @[Arbiter.scala 58:72]
    node _T_363 = bits(_T_361, 1, 1) @[Arbiter.scala 58:72]
    node _T_364 = bits(_T_361, 2, 2) @[Arbiter.scala 58:72]
    wire _T_367 : UInt<1>[3] @[Arbiter.scala 58:23]
    _T_367 is invalid @[Arbiter.scala 58:23]
    _T_367[0] <= _T_362 @[Arbiter.scala 58:23]
    _T_367[1] <= _T_363 @[Arbiter.scala 58:23]
    _T_367[2] <= _T_364 @[Arbiter.scala 58:23]
    node _T_373 = and(_T_367[0], mshrs_0.io.mem_acquire.valid) @[Arbiter.scala 60:65]
    node _T_374 = and(_T_367[1], mshrs_1.io.mem_acquire.valid) @[Arbiter.scala 60:65]
    node _T_375 = and(_T_367[2], mmios_0.io.mem_access.valid) @[Arbiter.scala 60:65]
    wire _T_378 : UInt<1>[3] @[Arbiter.scala 60:23]
    _T_378 is invalid @[Arbiter.scala 60:23]
    _T_378[0] <= _T_373 @[Arbiter.scala 60:23]
    _T_378[1] <= _T_374 @[Arbiter.scala 60:23]
    _T_378[2] <= _T_375 @[Arbiter.scala 60:23]
    node _T_385 = or(UInt<1>("h00"), _T_378[0]) @[Arbiter.scala 65:52]
    node _T_386 = or(_T_385, _T_378[1]) @[Arbiter.scala 65:52]
    node _T_387 = or(_T_386, _T_378[2]) @[Arbiter.scala 65:52]
    node _T_389 = eq(UInt<1>("h00"), UInt<1>("h00")) @[Arbiter.scala 66:56]
    node _T_391 = eq(_T_378[0], UInt<1>("h00")) @[Arbiter.scala 66:62]
    node _T_392 = or(_T_389, _T_391) @[Arbiter.scala 66:59]
    node _T_394 = eq(_T_385, UInt<1>("h00")) @[Arbiter.scala 66:56]
    node _T_396 = eq(_T_378[1], UInt<1>("h00")) @[Arbiter.scala 66:62]
    node _T_397 = or(_T_394, _T_396) @[Arbiter.scala 66:59]
    node _T_399 = eq(_T_386, UInt<1>("h00")) @[Arbiter.scala 66:56]
    node _T_401 = eq(_T_378[2], UInt<1>("h00")) @[Arbiter.scala 66:62]
    node _T_402 = or(_T_399, _T_401) @[Arbiter.scala 66:59]
    node _T_403 = and(_T_392, _T_397) @[Arbiter.scala 66:77]
    node _T_404 = and(_T_403, _T_402) @[Arbiter.scala 66:77]
    node _T_405 = bits(reset, 0, 0) @[Arbiter.scala 66:13]
    node _T_406 = or(_T_404, _T_405) @[Arbiter.scala 66:13]
    node _T_408 = eq(_T_406, UInt<1>("h00")) @[Arbiter.scala 66:13]
    when _T_408 : @[Arbiter.scala 66:13]
      printf(clock, UInt<1>(1), "Assertion failed\n    at Arbiter.scala:66 assert((prefixOR zip winner) map { case (p,w) => !p || !w } reduce {_ && _})\n") @[Arbiter.scala 66:13]
      stop(clock, UInt<1>(1), 1) @[Arbiter.scala 66:13]
      skip @[Arbiter.scala 66:13]
    node _T_409 = or(mshrs_0.io.mem_acquire.valid, mshrs_1.io.mem_acquire.valid) @[Arbiter.scala 68:31]
    node _T_410 = or(_T_409, mmios_0.io.mem_access.valid) @[Arbiter.scala 68:31]
    node _T_412 = eq(_T_410, UInt<1>("h00")) @[Arbiter.scala 68:15]
    node _T_413 = or(_T_378[0], _T_378[1]) @[Arbiter.scala 68:54]
    node _T_414 = or(_T_413, _T_378[2]) @[Arbiter.scala 68:54]
    node _T_415 = or(_T_412, _T_414) @[Arbiter.scala 68:36]
    node _T_416 = bits(reset, 0, 0) @[Arbiter.scala 68:14]
    node _T_417 = or(_T_415, _T_416) @[Arbiter.scala 68:14]
    node _T_419 = eq(_T_417, UInt<1>("h00")) @[Arbiter.scala 68:14]
    when _T_419 : @[Arbiter.scala 68:14]
      printf(clock, UInt<1>(1), "Assertion failed\n    at Arbiter.scala:68 assert (!valids.reduce(_||_) || winner.reduce(_||_))\n") @[Arbiter.scala 68:14]
      stop(clock, UInt<1>(1), 1) @[Arbiter.scala 68:14]
      skip @[Arbiter.scala 68:14]
    node _T_421 = mux(_T_378[0], _T_321, UInt<1>("h00")) @[Arbiter.scala 71:69]
    node _T_423 = mux(_T_378[1], _T_332, UInt<1>("h00")) @[Arbiter.scala 71:69]
    node _T_425 = mux(_T_378[2], _T_343, UInt<1>("h00")) @[Arbiter.scala 71:69]
    node _T_426 = or(_T_421, _T_423) @[Arbiter.scala 72:44]
    node _T_427 = or(_T_426, _T_425) @[Arbiter.scala 72:44]
    node _T_428 = and(io.mem_acquire.ready, io.mem_acquire.valid) @[Decoupled.scala 30:37]
    node _T_429 = sub(_T_346, _T_428) @[Arbiter.scala 73:52]
    node _T_430 = asUInt(_T_429) @[Arbiter.scala 73:52]
    node _T_431 = tail(_T_430, 1) @[Arbiter.scala 73:52]
    node _T_432 = mux(_T_349, _T_427, _T_431) @[Arbiter.scala 73:23]
    _T_346 <= _T_432 @[Arbiter.scala 73:17]
    wire _T_438 : UInt<1>[3] @[compatibility.scala 117:12]
    _T_438 is invalid @[compatibility.scala 117:12]
    _T_438[0] <= UInt<1>("h00") @[compatibility.scala 117:12]
    _T_438[1] <= UInt<1>("h00") @[compatibility.scala 117:12]
    _T_438[2] <= UInt<1>("h00") @[compatibility.scala 117:12]
    reg _T_454 : UInt<1>[3], clock with : (reset => (reset, _T_438)) @[Arbiter.scala 76:26]
    node _T_468 = mux(_T_348, _T_378, _T_454) @[Arbiter.scala 77:25]
    _T_454 <- _T_468 @[Arbiter.scala 78:13]
    node _T_478 = mux(_T_348, _T_367, _T_454) @[Arbiter.scala 81:26]
    node _T_488 = and(io.mem_acquire.ready, _T_478[0]) @[Arbiter.scala 83:33]
    mshrs_0.io.mem_acquire.ready <= _T_488 @[Arbiter.scala 83:19]
    node _T_489 = and(io.mem_acquire.ready, _T_478[1]) @[Arbiter.scala 83:33]
    mshrs_1.io.mem_acquire.ready <= _T_489 @[Arbiter.scala 83:19]
    node _T_490 = and(io.mem_acquire.ready, _T_478[2]) @[Arbiter.scala 83:33]
    mmios_0.io.mem_access.ready <= _T_490 @[Arbiter.scala 83:19]
    node _T_491 = or(mshrs_0.io.mem_acquire.valid, mshrs_1.io.mem_acquire.valid) @[Arbiter.scala 89:46]
    node _T_492 = or(_T_491, mmios_0.io.mem_access.valid) @[Arbiter.scala 89:46]
    node _T_495 = mux(_T_454[0], mshrs_0.io.mem_acquire.valid, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_497 = mux(_T_454[1], mshrs_1.io.mem_acquire.valid, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_499 = mux(_T_454[2], mmios_0.io.mem_access.valid, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_500 = or(_T_495, _T_497) @[Mux.scala 19:72]
    node _T_501 = or(_T_500, _T_499) @[Mux.scala 19:72]
    wire _T_503 : UInt<1> @[Mux.scala 19:72]
    _T_503 <= _T_501 @[Mux.scala 19:72]
    node _T_504 = mux(_T_348, _T_492, _T_503) @[Arbiter.scala 89:24]
    io.mem_acquire.valid <= _T_504 @[Arbiter.scala 89:18]
    node _T_506 = cat(mshrs_0.io.mem_acquire.bits.address, mshrs_0.io.mem_acquire.bits.mask) @[Mux.scala 19:72]
    node _T_507 = cat(_T_506, mshrs_0.io.mem_acquire.bits.data) @[Mux.scala 19:72]
    node _T_508 = cat(mshrs_0.io.mem_acquire.bits.size, mshrs_0.io.mem_acquire.bits.source) @[Mux.scala 19:72]
    node _T_509 = cat(mshrs_0.io.mem_acquire.bits.opcode, mshrs_0.io.mem_acquire.bits.param) @[Mux.scala 19:72]
    node _T_510 = cat(_T_509, _T_508) @[Mux.scala 19:72]
    node _T_511 = cat(_T_510, _T_507) @[Mux.scala 19:72]
    node _T_513 = mux(_T_468[0], _T_511, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_514 = cat(mshrs_1.io.mem_acquire.bits.address, mshrs_1.io.mem_acquire.bits.mask) @[Mux.scala 19:72]
    node _T_515 = cat(_T_514, mshrs_1.io.mem_acquire.bits.data) @[Mux.scala 19:72]
    node _T_516 = cat(mshrs_1.io.mem_acquire.bits.size, mshrs_1.io.mem_acquire.bits.source) @[Mux.scala 19:72]
    node _T_517 = cat(mshrs_1.io.mem_acquire.bits.opcode, mshrs_1.io.mem_acquire.bits.param) @[Mux.scala 19:72]
    node _T_518 = cat(_T_517, _T_516) @[Mux.scala 19:72]
    node _T_519 = cat(_T_518, _T_515) @[Mux.scala 19:72]
    node _T_521 = mux(_T_468[1], _T_519, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_522 = cat(mmios_0.io.mem_access.bits.address, mmios_0.io.mem_access.bits.mask) @[Mux.scala 19:72]
    node _T_523 = cat(_T_522, mmios_0.io.mem_access.bits.data) @[Mux.scala 19:72]
    node _T_524 = cat(mmios_0.io.mem_access.bits.size, mmios_0.io.mem_access.bits.source) @[Mux.scala 19:72]
    node _T_525 = cat(mmios_0.io.mem_access.bits.opcode, mmios_0.io.mem_access.bits.param) @[Mux.scala 19:72]
    node _T_526 = cat(_T_525, _T_524) @[Mux.scala 19:72]
    node _T_527 = cat(_T_526, _T_523) @[Mux.scala 19:72]
    node _T_529 = mux(_T_468[2], _T_527, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_530 = or(_T_513, _T_521) @[Mux.scala 19:72]
    node _T_531 = or(_T_530, _T_529) @[Mux.scala 19:72]
    wire _T_533 : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<2>, address : UInt<32>, mask : UInt<8>, data : UInt<64>} @[Mux.scala 19:72]
    wire _T_535 : UInt<116>
    _T_535 <= _T_531
    node _T_536 = bits(_T_535, 63, 0) @[Mux.scala 19:72]
    _T_533.data <= _T_536 @[Mux.scala 19:72]
    node _T_537 = bits(_T_535, 71, 64) @[Mux.scala 19:72]
    _T_533.mask <= _T_537 @[Mux.scala 19:72]
    node _T_538 = bits(_T_535, 103, 72) @[Mux.scala 19:72]
    _T_533.address <= _T_538 @[Mux.scala 19:72]
    node _T_539 = bits(_T_535, 105, 104) @[Mux.scala 19:72]
    _T_533.source <= _T_539 @[Mux.scala 19:72]
    node _T_540 = bits(_T_535, 109, 106) @[Mux.scala 19:72]
    _T_533.size <= _T_540 @[Mux.scala 19:72]
    node _T_541 = bits(_T_535, 112, 110) @[Mux.scala 19:72]
    _T_533.param <= _T_541 @[Mux.scala 19:72]
    node _T_542 = bits(_T_535, 115, 113) @[Mux.scala 19:72]
    _T_533.opcode <= _T_542 @[Mux.scala 19:72]
    io.mem_acquire.bits <- _T_533 @[Arbiter.scala 90:17]
    reg _T_547 : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[Arbiter.scala 51:30]
    node _T_549 = eq(_T_547, UInt<1>("h00")) @[Arbiter.scala 52:28]
    node _T_550 = and(_T_549, io.mem_finish.ready) @[Arbiter.scala 53:24]
    node _T_551 = cat(mshrs_1.io.mem_finish.valid, mshrs_0.io.mem_finish.valid) @[Cat.scala 30:58]
    node _T_552 = shl(_T_551, 1) @[package.scala 91:48]
    node _T_553 = bits(_T_552, 1, 0) @[package.scala 91:53]
    node _T_554 = or(_T_551, _T_553) @[package.scala 91:43]
    node _T_555 = bits(_T_554, 1, 0) @[package.scala 92:17]
    node _T_556 = shl(_T_555, 1) @[Arbiter.scala 15:78]
    node _T_557 = bits(_T_556, 1, 0) @[Arbiter.scala 15:83]
    node _T_558 = not(_T_557) @[Arbiter.scala 15:61]
    node _T_559 = bits(_T_558, 0, 0) @[Arbiter.scala 58:72]
    node _T_560 = bits(_T_558, 1, 1) @[Arbiter.scala 58:72]
    wire _T_563 : UInt<1>[2] @[Arbiter.scala 58:23]
    _T_563 is invalid @[Arbiter.scala 58:23]
    _T_563[0] <= _T_559 @[Arbiter.scala 58:23]
    _T_563[1] <= _T_560 @[Arbiter.scala 58:23]
    node _T_568 = and(_T_563[0], mshrs_0.io.mem_finish.valid) @[Arbiter.scala 60:65]
    node _T_569 = and(_T_563[1], mshrs_1.io.mem_finish.valid) @[Arbiter.scala 60:65]
    wire _T_572 : UInt<1>[2] @[Arbiter.scala 60:23]
    _T_572 is invalid @[Arbiter.scala 60:23]
    _T_572[0] <= _T_568 @[Arbiter.scala 60:23]
    _T_572[1] <= _T_569 @[Arbiter.scala 60:23]
    node _T_578 = or(UInt<1>("h00"), _T_572[0]) @[Arbiter.scala 65:52]
    node _T_579 = or(_T_578, _T_572[1]) @[Arbiter.scala 65:52]
    node _T_581 = eq(UInt<1>("h00"), UInt<1>("h00")) @[Arbiter.scala 66:56]
    node _T_583 = eq(_T_572[0], UInt<1>("h00")) @[Arbiter.scala 66:62]
    node _T_584 = or(_T_581, _T_583) @[Arbiter.scala 66:59]
    node _T_586 = eq(_T_578, UInt<1>("h00")) @[Arbiter.scala 66:56]
    node _T_588 = eq(_T_572[1], UInt<1>("h00")) @[Arbiter.scala 66:62]
    node _T_589 = or(_T_586, _T_588) @[Arbiter.scala 66:59]
    node _T_590 = and(_T_584, _T_589) @[Arbiter.scala 66:77]
    node _T_591 = bits(reset, 0, 0) @[Arbiter.scala 66:13]
    node _T_592 = or(_T_590, _T_591) @[Arbiter.scala 66:13]
    node _T_594 = eq(_T_592, UInt<1>("h00")) @[Arbiter.scala 66:13]
    when _T_594 : @[Arbiter.scala 66:13]
      printf(clock, UInt<1>(1), "Assertion failed\n    at Arbiter.scala:66 assert((prefixOR zip winner) map { case (p,w) => !p || !w } reduce {_ && _})\n") @[Arbiter.scala 66:13]
      stop(clock, UInt<1>(1), 1) @[Arbiter.scala 66:13]
      skip @[Arbiter.scala 66:13]
    node _T_595 = or(mshrs_0.io.mem_finish.valid, mshrs_1.io.mem_finish.valid) @[Arbiter.scala 68:31]
    node _T_597 = eq(_T_595, UInt<1>("h00")) @[Arbiter.scala 68:15]
    node _T_598 = or(_T_572[0], _T_572[1]) @[Arbiter.scala 68:54]
    node _T_599 = or(_T_597, _T_598) @[Arbiter.scala 68:36]
    node _T_600 = bits(reset, 0, 0) @[Arbiter.scala 68:14]
    node _T_601 = or(_T_599, _T_600) @[Arbiter.scala 68:14]
    node _T_603 = eq(_T_601, UInt<1>("h00")) @[Arbiter.scala 68:14]
    when _T_603 : @[Arbiter.scala 68:14]
      printf(clock, UInt<1>(1), "Assertion failed\n    at Arbiter.scala:68 assert (!valids.reduce(_||_) || winner.reduce(_||_))\n") @[Arbiter.scala 68:14]
      stop(clock, UInt<1>(1), 1) @[Arbiter.scala 68:14]
      skip @[Arbiter.scala 68:14]
    node _T_605 = mux(_T_572[0], UInt<1>("h00"), UInt<1>("h00")) @[Arbiter.scala 71:69]
    node _T_607 = mux(_T_572[1], UInt<1>("h00"), UInt<1>("h00")) @[Arbiter.scala 71:69]
    node _T_608 = or(_T_605, _T_607) @[Arbiter.scala 72:44]
    node _T_609 = and(io.mem_finish.ready, io.mem_finish.valid) @[Decoupled.scala 30:37]
    node _T_610 = sub(_T_547, _T_609) @[Arbiter.scala 73:52]
    node _T_611 = asUInt(_T_610) @[Arbiter.scala 73:52]
    node _T_612 = tail(_T_611, 1) @[Arbiter.scala 73:52]
    node _T_613 = mux(_T_550, _T_608, _T_612) @[Arbiter.scala 73:23]
    _T_547 <= _T_613 @[Arbiter.scala 73:17]
    wire _T_618 : UInt<1>[2] @[compatibility.scala 117:12]
    _T_618 is invalid @[compatibility.scala 117:12]
    _T_618[0] <= UInt<1>("h00") @[compatibility.scala 117:12]
    _T_618[1] <= UInt<1>("h00") @[compatibility.scala 117:12]
    reg _T_631 : UInt<1>[2], clock with : (reset => (reset, _T_618)) @[Arbiter.scala 76:26]
    node _T_642 = mux(_T_549, _T_572, _T_631) @[Arbiter.scala 77:25]
    _T_631 <- _T_642 @[Arbiter.scala 78:13]
    node _T_650 = mux(_T_549, _T_563, _T_631) @[Arbiter.scala 81:26]
    node _T_658 = and(io.mem_finish.ready, _T_650[0]) @[Arbiter.scala 83:33]
    mshrs_0.io.mem_finish.ready <= _T_658 @[Arbiter.scala 83:19]
    node _T_659 = and(io.mem_finish.ready, _T_650[1]) @[Arbiter.scala 83:33]
    mshrs_1.io.mem_finish.ready <= _T_659 @[Arbiter.scala 83:19]
    node _T_660 = or(mshrs_0.io.mem_finish.valid, mshrs_1.io.mem_finish.valid) @[Arbiter.scala 89:46]
    node _T_663 = mux(_T_631[0], mshrs_0.io.mem_finish.valid, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_665 = mux(_T_631[1], mshrs_1.io.mem_finish.valid, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_666 = or(_T_663, _T_665) @[Mux.scala 19:72]
    wire _T_668 : UInt<1> @[Mux.scala 19:72]
    _T_668 <= _T_666 @[Mux.scala 19:72]
    node _T_669 = mux(_T_549, _T_660, _T_668) @[Arbiter.scala 89:24]
    io.mem_finish.valid <= _T_669 @[Arbiter.scala 89:18]
    node _T_672 = mux(_T_642[0], mshrs_0.io.mem_finish.bits.sink, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_674 = mux(_T_642[1], mshrs_1.io.mem_finish.bits.sink, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_675 = or(_T_672, _T_674) @[Mux.scala 19:72]
    wire _T_677 : {sink : UInt<3>} @[Mux.scala 19:72]
    wire _T_679 : UInt<3>
    _T_679 <= _T_675
    node _T_680 = bits(_T_679, 2, 0) @[Mux.scala 19:72]
    _T_677.sink <= _T_680 @[Mux.scala 19:72]
    io.mem_finish.bits <- _T_677 @[Arbiter.scala 90:17]
    io.resp <- resp_arb.io.out @[NBDcache.scala 422:11]
    node _T_682 = eq(cacheable, UInt<1>("h00")) @[NBDcache.scala 423:23]
    node _T_683 = and(tag_match, sec_rdy) @[NBDcache.scala 425:57]
    node _T_684 = mux(idx_match, _T_683, pri_rdy) @[NBDcache.scala 425:35]
    node _T_685 = and(sdq_rdy, _T_684) @[NBDcache.scala 425:29]
    node _T_686 = mux(_T_682, mmio_rdy, _T_685) @[NBDcache.scala 423:22]
    io.req.ready <= _T_686 @[NBDcache.scala 423:16]
    io.secondary_miss <= idx_match @[NBDcache.scala 426:21]
    node _T_688 = bits(io.mem_grant.bits.source, 0, 0)
    io.refill <- refillMux[_T_688] @[NBDcache.scala 427:13]
    node _T_689 = and(io.replay.ready, io.replay.valid) @[Decoupled.scala 30:37]
    node _T_691 = eq(io.replay.bits.cmd, UInt<1>("h01")) @[Consts.scala 94:32]
    node _T_693 = eq(io.replay.bits.cmd, UInt<5>("h011")) @[Consts.scala 94:49]
    node _T_694 = or(_T_691, _T_693) @[Consts.scala 94:42]
    node _T_696 = eq(io.replay.bits.cmd, UInt<3>("h07")) @[Consts.scala 94:66]
    node _T_697 = or(_T_694, _T_696) @[Consts.scala 94:59]
    node _T_702 = eq(io.replay.bits.cmd, UInt<3>("h04")) @[package.scala 14:47]
    node _T_703 = eq(io.replay.bits.cmd, UInt<4>("h09")) @[package.scala 14:47]
    node _T_704 = eq(io.replay.bits.cmd, UInt<4>("h0a")) @[package.scala 14:47]
    node _T_705 = eq(io.replay.bits.cmd, UInt<4>("h0b")) @[package.scala 14:47]
    node _T_706 = or(_T_702, _T_703) @[package.scala 14:62]
    node _T_707 = or(_T_706, _T_704) @[package.scala 14:62]
    node _T_708 = or(_T_707, _T_705) @[package.scala 14:62]
    node _T_714 = eq(io.replay.bits.cmd, UInt<4>("h08")) @[package.scala 14:47]
    node _T_715 = eq(io.replay.bits.cmd, UInt<4>("h0c")) @[package.scala 14:47]
    node _T_716 = eq(io.replay.bits.cmd, UInt<4>("h0d")) @[package.scala 14:47]
    node _T_717 = eq(io.replay.bits.cmd, UInt<4>("h0e")) @[package.scala 14:47]
    node _T_718 = eq(io.replay.bits.cmd, UInt<4>("h0f")) @[package.scala 14:47]
    node _T_719 = or(_T_714, _T_715) @[package.scala 14:62]
    node _T_720 = or(_T_719, _T_716) @[package.scala 14:62]
    node _T_721 = or(_T_720, _T_717) @[package.scala 14:62]
    node _T_722 = or(_T_721, _T_718) @[package.scala 14:62]
    node _T_723 = or(_T_708, _T_722) @[Consts.scala 91:44]
    node _T_724 = or(_T_697, _T_723) @[Consts.scala 94:76]
    node free_sdq = and(_T_689, _T_724) @[NBDcache.scala 429:35]
    reg _T_726 : UInt<5>, clock @[Reg.scala 11:16]
    when free_sdq : @[Reg.scala 12:19]
      _T_726 <= replay_arb.io.out.bits.sdq_id @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    infer mport _T_727 = sdq[_T_726], clock @[NBDcache.scala 430:29]
    io.replay.bits.data <= _T_727 @[NBDcache.scala 430:23]
    io.replay <- replay_arb.io.out @[NBDcache.scala 431:13]
    node _T_728 = or(io.replay.valid, sdq_enq) @[NBDcache.scala 433:25]
    when _T_728 : @[NBDcache.scala 433:37]
      node _T_730 = dshl(UInt<1>("h01"), replay_arb.io.out.bits.sdq_id) @[OneHot.scala 45:35]
      node _T_731 = bits(free_sdq, 0, 0) @[Bitwise.scala 72:15]
      node _T_734 = mux(_T_731, UInt<17>("h01ffff"), UInt<17>("h00")) @[Bitwise.scala 72:12]
      node _T_735 = and(_T_730, _T_734) @[NBDcache.scala 434:68]
      node _T_736 = not(_T_735) @[NBDcache.scala 434:26]
      node _T_737 = and(sdq_val, _T_736) @[NBDcache.scala 434:24]
      node _T_738 = bits(sdq_val, 16, 0) @[NBDcache.scala 435:42]
      node _T_739 = not(_T_738) @[NBDcache.scala 435:34]
      node _T_740 = bits(_T_739, 0, 0) @[OneHot.scala 66:71]
      node _T_741 = bits(_T_739, 1, 1) @[OneHot.scala 66:71]
      node _T_742 = bits(_T_739, 2, 2) @[OneHot.scala 66:71]
      node _T_743 = bits(_T_739, 3, 3) @[OneHot.scala 66:71]
      node _T_744 = bits(_T_739, 4, 4) @[OneHot.scala 66:71]
      node _T_745 = bits(_T_739, 5, 5) @[OneHot.scala 66:71]
      node _T_746 = bits(_T_739, 6, 6) @[OneHot.scala 66:71]
      node _T_747 = bits(_T_739, 7, 7) @[OneHot.scala 66:71]
      node _T_748 = bits(_T_739, 8, 8) @[OneHot.scala 66:71]
      node _T_749 = bits(_T_739, 9, 9) @[OneHot.scala 66:71]
      node _T_750 = bits(_T_739, 10, 10) @[OneHot.scala 66:71]
      node _T_751 = bits(_T_739, 11, 11) @[OneHot.scala 66:71]
      node _T_752 = bits(_T_739, 12, 12) @[OneHot.scala 66:71]
      node _T_753 = bits(_T_739, 13, 13) @[OneHot.scala 66:71]
      node _T_754 = bits(_T_739, 14, 14) @[OneHot.scala 66:71]
      node _T_755 = bits(_T_739, 15, 15) @[OneHot.scala 66:71]
      node _T_756 = bits(_T_739, 16, 16) @[OneHot.scala 66:71]
      node _T_776 = mux(_T_756, UInt<17>("h010000"), UInt<17>("h00")) @[Mux.scala 31:69]
      node _T_777 = mux(_T_755, UInt<17>("h08000"), _T_776) @[Mux.scala 31:69]
      node _T_778 = mux(_T_754, UInt<17>("h04000"), _T_777) @[Mux.scala 31:69]
      node _T_779 = mux(_T_753, UInt<17>("h02000"), _T_778) @[Mux.scala 31:69]
      node _T_780 = mux(_T_752, UInt<17>("h01000"), _T_779) @[Mux.scala 31:69]
      node _T_781 = mux(_T_751, UInt<17>("h0800"), _T_780) @[Mux.scala 31:69]
      node _T_782 = mux(_T_750, UInt<17>("h0400"), _T_781) @[Mux.scala 31:69]
      node _T_783 = mux(_T_749, UInt<17>("h0200"), _T_782) @[Mux.scala 31:69]
      node _T_784 = mux(_T_748, UInt<17>("h0100"), _T_783) @[Mux.scala 31:69]
      node _T_785 = mux(_T_747, UInt<17>("h080"), _T_784) @[Mux.scala 31:69]
      node _T_786 = mux(_T_746, UInt<17>("h040"), _T_785) @[Mux.scala 31:69]
      node _T_787 = mux(_T_745, UInt<17>("h020"), _T_786) @[Mux.scala 31:69]
      node _T_788 = mux(_T_744, UInt<17>("h010"), _T_787) @[Mux.scala 31:69]
      node _T_789 = mux(_T_743, UInt<17>("h08"), _T_788) @[Mux.scala 31:69]
      node _T_790 = mux(_T_742, UInt<17>("h04"), _T_789) @[Mux.scala 31:69]
      node _T_791 = mux(_T_741, UInt<17>("h02"), _T_790) @[Mux.scala 31:69]
      node _T_792 = mux(_T_740, UInt<17>("h01"), _T_791) @[Mux.scala 31:69]
      node _T_793 = bits(sdq_enq, 0, 0) @[Bitwise.scala 72:15]
      node _T_796 = mux(_T_793, UInt<17>("h01ffff"), UInt<17>("h00")) @[Bitwise.scala 72:12]
      node _T_797 = and(_T_792, _T_796) @[NBDcache.scala 435:58]
      node _T_798 = or(_T_737, _T_797) @[NBDcache.scala 434:96]
      sdq_val <= _T_798 @[NBDcache.scala 434:13]
      skip @[NBDcache.scala 433:37]
    
  module PMPChecker : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip prv : UInt<2>, flip pmp : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>}[8], flip addr : UInt<32>, flip size : UInt<2>, r : UInt<1>, w : UInt<1>, x : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node default = gt(io.prv, UInt<1>("h01")) @[PMP.scala 141:56]
    wire _T_25 : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>} @[PMP.scala 142:38]
    _T_25 is invalid @[PMP.scala 142:38]
    wire _T_27 : UInt<70>
    _T_27 is invalid
    _T_27 <= UInt<1>("h00")
    node _T_28 = bits(_T_27, 31, 0) @[PMP.scala 142:38]
    _T_25.mask <= _T_28 @[PMP.scala 142:38]
    node _T_29 = bits(_T_27, 61, 32) @[PMP.scala 142:38]
    _T_25.addr <= _T_29 @[PMP.scala 142:38]
    node _T_30 = bits(_T_27, 62, 62) @[PMP.scala 142:38]
    _T_25.cfg.r <= _T_30 @[PMP.scala 142:38]
    node _T_31 = bits(_T_27, 63, 63) @[PMP.scala 142:38]
    _T_25.cfg.w <= _T_31 @[PMP.scala 142:38]
    node _T_32 = bits(_T_27, 64, 64) @[PMP.scala 142:38]
    _T_25.cfg.x <= _T_32 @[PMP.scala 142:38]
    node _T_33 = bits(_T_27, 66, 65) @[PMP.scala 142:38]
    _T_25.cfg.a <= _T_33 @[PMP.scala 142:38]
    node _T_34 = bits(_T_27, 68, 67) @[PMP.scala 142:38]
    _T_25.cfg.res <= _T_34 @[PMP.scala 142:38]
    node _T_35 = bits(_T_27, 69, 69) @[PMP.scala 142:38]
    _T_25.cfg.l <= _T_35 @[PMP.scala 142:38]
    wire pmp0 : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>}
    pmp0 is invalid
    pmp0 <- _T_25
    pmp0.cfg.r <= default @[PMP.scala 143:14]
    pmp0.cfg.w <= default @[PMP.scala 144:14]
    pmp0.cfg.x <= default @[PMP.scala 145:14]
    node _T_37 = bits(io.pmp[7].cfg.a, 1, 1) @[PMP.scala 35:20]
    node _T_39 = asUInt(asSInt(UInt<3>("h07"))) @[package.scala 82:70]
    node _T_40 = dshl(_T_39, io.size) @[package.scala 82:77]
    node _T_41 = bits(_T_40, 2, 0) @[package.scala 82:82]
    node _T_42 = not(_T_41) @[package.scala 82:46]
    node _T_43 = or(io.pmp[7].mask, _T_42) @[PMP.scala 54:26]
    node _T_44 = shr(io.addr, 3) @[PMP.scala 55:29]
    node _T_45 = shl(io.pmp[7].addr, 2) @[PMP.scala 46:32]
    node _T_46 = shr(_T_45, 3) @[PMP.scala 55:53]
    node _T_47 = shr(io.pmp[7].mask, 3) @[PMP.scala 55:72]
    node _T_48 = xor(_T_44, _T_46) @[PMP.scala 49:47]
    node _T_49 = not(_T_47) @[PMP.scala 49:54]
    node _T_50 = and(_T_48, _T_49) @[PMP.scala 49:52]
    node _T_52 = eq(_T_50, UInt<1>("h00")) @[PMP.scala 49:58]
    node _T_53 = bits(io.addr, 2, 0) @[PMP.scala 56:28]
    node _T_54 = shl(io.pmp[7].addr, 2) @[PMP.scala 46:32]
    node _T_55 = bits(_T_54, 2, 0) @[PMP.scala 56:55]
    node _T_56 = bits(_T_43, 2, 0) @[PMP.scala 56:80]
    node _T_57 = xor(_T_53, _T_55) @[PMP.scala 49:47]
    node _T_58 = not(_T_56) @[PMP.scala 49:54]
    node _T_59 = and(_T_57, _T_58) @[PMP.scala 49:52]
    node _T_61 = eq(_T_59, UInt<1>("h00")) @[PMP.scala 49:58]
    node _T_62 = and(_T_52, _T_61) @[PMP.scala 57:16]
    node _T_63 = bits(io.pmp[7].cfg.a, 0, 0) @[PMP.scala 36:26]
    node _T_65 = asUInt(asSInt(UInt<3>("h07"))) @[package.scala 82:70]
    node _T_66 = dshl(_T_65, io.size) @[package.scala 82:77]
    node _T_67 = bits(_T_66, 2, 0) @[package.scala 82:82]
    node _T_68 = not(_T_67) @[package.scala 82:46]
    node _T_69 = shr(io.addr, 3) @[PMP.scala 66:25]
    node _T_70 = shl(io.pmp[6].addr, 2) @[PMP.scala 46:32]
    node _T_71 = shr(_T_70, 3) @[PMP.scala 66:52]
    node _T_72 = lt(_T_69, _T_71) @[PMP.scala 66:39]
    node _T_73 = shr(io.addr, 3) @[PMP.scala 67:27]
    node _T_74 = shl(io.pmp[6].addr, 2) @[PMP.scala 46:32]
    node _T_75 = shr(_T_74, 3) @[PMP.scala 67:54]
    node _T_76 = xor(_T_73, _T_75) @[PMP.scala 67:41]
    node _T_78 = eq(_T_76, UInt<1>("h00")) @[PMP.scala 67:69]
    node _T_79 = bits(io.addr, 2, 0) @[PMP.scala 68:25]
    node _T_80 = or(_T_79, _T_68) @[PMP.scala 68:42]
    node _T_81 = shl(io.pmp[6].addr, 2) @[PMP.scala 46:32]
    node _T_82 = bits(_T_81, 2, 0) @[PMP.scala 68:64]
    node _T_83 = lt(_T_80, _T_82) @[PMP.scala 68:53]
    node _T_84 = and(_T_78, _T_83) @[PMP.scala 69:30]
    node _T_85 = or(_T_72, _T_84) @[PMP.scala 69:16]
    node _T_87 = eq(_T_85, UInt<1>("h00")) @[PMP.scala 74:5]
    node _T_89 = shr(io.addr, 3) @[PMP.scala 66:25]
    node _T_90 = shl(io.pmp[7].addr, 2) @[PMP.scala 46:32]
    node _T_91 = shr(_T_90, 3) @[PMP.scala 66:52]
    node _T_92 = lt(_T_89, _T_91) @[PMP.scala 66:39]
    node _T_93 = shr(io.addr, 3) @[PMP.scala 67:27]
    node _T_94 = shl(io.pmp[7].addr, 2) @[PMP.scala 46:32]
    node _T_95 = shr(_T_94, 3) @[PMP.scala 67:54]
    node _T_96 = xor(_T_93, _T_95) @[PMP.scala 67:41]
    node _T_98 = eq(_T_96, UInt<1>("h00")) @[PMP.scala 67:69]
    node _T_99 = bits(io.addr, 2, 0) @[PMP.scala 68:25]
    node _T_100 = or(_T_99, UInt<1>("h00")) @[PMP.scala 68:42]
    node _T_101 = shl(io.pmp[7].addr, 2) @[PMP.scala 46:32]
    node _T_102 = bits(_T_101, 2, 0) @[PMP.scala 68:64]
    node _T_103 = lt(_T_100, _T_102) @[PMP.scala 68:53]
    node _T_104 = and(_T_98, _T_103) @[PMP.scala 69:30]
    node _T_105 = or(_T_92, _T_104) @[PMP.scala 69:16]
    node _T_106 = and(_T_87, _T_105) @[PMP.scala 80:48]
    node _T_107 = and(_T_63, _T_106) @[PMP.scala 118:61]
    node _T_108 = mux(_T_37, _T_62, _T_107) @[PMP.scala 118:8]
    node _T_110 = eq(io.pmp[7].cfg.l, UInt<1>("h00")) @[PMP.scala 149:29]
    node _T_111 = and(default, _T_110) @[PMP.scala 149:26]
    node _T_113 = asUInt(asSInt(UInt<3>("h07"))) @[package.scala 82:70]
    node _T_114 = dshl(_T_113, io.size) @[package.scala 82:77]
    node _T_115 = bits(_T_114, 2, 0) @[package.scala 82:82]
    node _T_116 = not(_T_115) @[package.scala 82:46]
    node _T_117 = shr(io.addr, 3) @[PMP.scala 109:35]
    node _T_118 = shl(io.pmp[6].addr, 2) @[PMP.scala 46:32]
    node _T_119 = shr(_T_118, 3) @[PMP.scala 109:67]
    node _T_120 = xor(_T_117, _T_119) @[PMP.scala 109:49]
    node _T_122 = eq(_T_120, UInt<1>("h00")) @[PMP.scala 109:82]
    node _T_123 = shl(io.pmp[6].addr, 2) @[PMP.scala 46:32]
    node _T_124 = bits(_T_123, 2, 0) @[PMP.scala 109:106]
    node _T_125 = bits(io.addr, 2, 0) @[PMP.scala 109:127]
    node _T_126 = not(_T_125) @[PMP.scala 109:125]
    node _T_127 = and(_T_124, _T_126) @[PMP.scala 109:123]
    node _T_129 = neq(_T_127, UInt<1>("h00")) @[PMP.scala 109:145]
    node _T_130 = and(_T_122, _T_129) @[PMP.scala 109:88]
    node _T_131 = shr(io.addr, 3) @[PMP.scala 110:35]
    node _T_132 = shl(io.pmp[7].addr, 2) @[PMP.scala 46:32]
    node _T_133 = shr(_T_132, 3) @[PMP.scala 110:62]
    node _T_134 = xor(_T_131, _T_133) @[PMP.scala 110:49]
    node _T_136 = eq(_T_134, UInt<1>("h00")) @[PMP.scala 110:77]
    node _T_137 = shl(io.pmp[7].addr, 2) @[PMP.scala 46:32]
    node _T_138 = bits(_T_137, 2, 0) @[PMP.scala 110:96]
    node _T_139 = bits(io.addr, 2, 0) @[PMP.scala 110:117]
    node _T_140 = or(_T_139, _T_116) @[PMP.scala 110:134]
    node _T_141 = and(_T_138, _T_140) @[PMP.scala 110:113]
    node _T_143 = neq(_T_141, UInt<1>("h00")) @[PMP.scala 110:146]
    node _T_144 = and(_T_136, _T_143) @[PMP.scala 110:83]
    node _T_145 = or(_T_130, _T_144) @[PMP.scala 111:46]
    node _T_147 = eq(_T_145, UInt<1>("h00")) @[PMP.scala 111:24]
    node _T_148 = bits(io.pmp[7].mask, 2, 0) @[PMP.scala 112:39]
    node _T_149 = not(_T_148) @[PMP.scala 112:34]
    node _T_150 = and(_T_116, _T_149) @[PMP.scala 112:32]
    node _T_152 = eq(_T_150, UInt<1>("h00")) @[PMP.scala 112:57]
    node _T_153 = bits(io.pmp[7].cfg.a, 1, 1) @[PMP.scala 35:20]
    node _T_154 = mux(_T_153, _T_152, _T_147) @[PMP.scala 113:8]
    wire _T_156 : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>}
    _T_156 is invalid
    _T_156 <- io.pmp[7]
    node _T_157 = and(_T_154, io.pmp[7].cfg.r) @[PMP.scala 152:27]
    node _T_158 = or(_T_157, _T_111) @[PMP.scala 152:41]
    _T_156.cfg.r <= _T_158 @[PMP.scala 152:15]
    node _T_159 = and(_T_154, io.pmp[7].cfg.w) @[PMP.scala 153:27]
    node _T_160 = or(_T_159, _T_111) @[PMP.scala 153:41]
    _T_156.cfg.w <= _T_160 @[PMP.scala 153:15]
    node _T_161 = and(_T_154, io.pmp[7].cfg.x) @[PMP.scala 154:27]
    node _T_162 = or(_T_161, _T_111) @[PMP.scala 154:41]
    _T_156.cfg.x <= _T_162 @[PMP.scala 154:15]
    node _T_163 = mux(_T_108, _T_156, pmp0) @[PMP.scala 155:8]
    node _T_164 = bits(io.pmp[6].cfg.a, 1, 1) @[PMP.scala 35:20]
    node _T_166 = asUInt(asSInt(UInt<3>("h07"))) @[package.scala 82:70]
    node _T_167 = dshl(_T_166, io.size) @[package.scala 82:77]
    node _T_168 = bits(_T_167, 2, 0) @[package.scala 82:82]
    node _T_169 = not(_T_168) @[package.scala 82:46]
    node _T_170 = or(io.pmp[6].mask, _T_169) @[PMP.scala 54:26]
    node _T_171 = shr(io.addr, 3) @[PMP.scala 55:29]
    node _T_172 = shl(io.pmp[6].addr, 2) @[PMP.scala 46:32]
    node _T_173 = shr(_T_172, 3) @[PMP.scala 55:53]
    node _T_174 = shr(io.pmp[6].mask, 3) @[PMP.scala 55:72]
    node _T_175 = xor(_T_171, _T_173) @[PMP.scala 49:47]
    node _T_176 = not(_T_174) @[PMP.scala 49:54]
    node _T_177 = and(_T_175, _T_176) @[PMP.scala 49:52]
    node _T_179 = eq(_T_177, UInt<1>("h00")) @[PMP.scala 49:58]
    node _T_180 = bits(io.addr, 2, 0) @[PMP.scala 56:28]
    node _T_181 = shl(io.pmp[6].addr, 2) @[PMP.scala 46:32]
    node _T_182 = bits(_T_181, 2, 0) @[PMP.scala 56:55]
    node _T_183 = bits(_T_170, 2, 0) @[PMP.scala 56:80]
    node _T_184 = xor(_T_180, _T_182) @[PMP.scala 49:47]
    node _T_185 = not(_T_183) @[PMP.scala 49:54]
    node _T_186 = and(_T_184, _T_185) @[PMP.scala 49:52]
    node _T_188 = eq(_T_186, UInt<1>("h00")) @[PMP.scala 49:58]
    node _T_189 = and(_T_179, _T_188) @[PMP.scala 57:16]
    node _T_190 = bits(io.pmp[6].cfg.a, 0, 0) @[PMP.scala 36:26]
    node _T_192 = asUInt(asSInt(UInt<3>("h07"))) @[package.scala 82:70]
    node _T_193 = dshl(_T_192, io.size) @[package.scala 82:77]
    node _T_194 = bits(_T_193, 2, 0) @[package.scala 82:82]
    node _T_195 = not(_T_194) @[package.scala 82:46]
    node _T_196 = shr(io.addr, 3) @[PMP.scala 66:25]
    node _T_197 = shl(io.pmp[5].addr, 2) @[PMP.scala 46:32]
    node _T_198 = shr(_T_197, 3) @[PMP.scala 66:52]
    node _T_199 = lt(_T_196, _T_198) @[PMP.scala 66:39]
    node _T_200 = shr(io.addr, 3) @[PMP.scala 67:27]
    node _T_201 = shl(io.pmp[5].addr, 2) @[PMP.scala 46:32]
    node _T_202 = shr(_T_201, 3) @[PMP.scala 67:54]
    node _T_203 = xor(_T_200, _T_202) @[PMP.scala 67:41]
    node _T_205 = eq(_T_203, UInt<1>("h00")) @[PMP.scala 67:69]
    node _T_206 = bits(io.addr, 2, 0) @[PMP.scala 68:25]
    node _T_207 = or(_T_206, _T_195) @[PMP.scala 68:42]
    node _T_208 = shl(io.pmp[5].addr, 2) @[PMP.scala 46:32]
    node _T_209 = bits(_T_208, 2, 0) @[PMP.scala 68:64]
    node _T_210 = lt(_T_207, _T_209) @[PMP.scala 68:53]
    node _T_211 = and(_T_205, _T_210) @[PMP.scala 69:30]
    node _T_212 = or(_T_199, _T_211) @[PMP.scala 69:16]
    node _T_214 = eq(_T_212, UInt<1>("h00")) @[PMP.scala 74:5]
    node _T_216 = shr(io.addr, 3) @[PMP.scala 66:25]
    node _T_217 = shl(io.pmp[6].addr, 2) @[PMP.scala 46:32]
    node _T_218 = shr(_T_217, 3) @[PMP.scala 66:52]
    node _T_219 = lt(_T_216, _T_218) @[PMP.scala 66:39]
    node _T_220 = shr(io.addr, 3) @[PMP.scala 67:27]
    node _T_221 = shl(io.pmp[6].addr, 2) @[PMP.scala 46:32]
    node _T_222 = shr(_T_221, 3) @[PMP.scala 67:54]
    node _T_223 = xor(_T_220, _T_222) @[PMP.scala 67:41]
    node _T_225 = eq(_T_223, UInt<1>("h00")) @[PMP.scala 67:69]
    node _T_226 = bits(io.addr, 2, 0) @[PMP.scala 68:25]
    node _T_227 = or(_T_226, UInt<1>("h00")) @[PMP.scala 68:42]
    node _T_228 = shl(io.pmp[6].addr, 2) @[PMP.scala 46:32]
    node _T_229 = bits(_T_228, 2, 0) @[PMP.scala 68:64]
    node _T_230 = lt(_T_227, _T_229) @[PMP.scala 68:53]
    node _T_231 = and(_T_225, _T_230) @[PMP.scala 69:30]
    node _T_232 = or(_T_219, _T_231) @[PMP.scala 69:16]
    node _T_233 = and(_T_214, _T_232) @[PMP.scala 80:48]
    node _T_234 = and(_T_190, _T_233) @[PMP.scala 118:61]
    node _T_235 = mux(_T_164, _T_189, _T_234) @[PMP.scala 118:8]
    node _T_237 = eq(io.pmp[6].cfg.l, UInt<1>("h00")) @[PMP.scala 149:29]
    node _T_238 = and(default, _T_237) @[PMP.scala 149:26]
    node _T_240 = asUInt(asSInt(UInt<3>("h07"))) @[package.scala 82:70]
    node _T_241 = dshl(_T_240, io.size) @[package.scala 82:77]
    node _T_242 = bits(_T_241, 2, 0) @[package.scala 82:82]
    node _T_243 = not(_T_242) @[package.scala 82:46]
    node _T_244 = shr(io.addr, 3) @[PMP.scala 109:35]
    node _T_245 = shl(io.pmp[5].addr, 2) @[PMP.scala 46:32]
    node _T_246 = shr(_T_245, 3) @[PMP.scala 109:67]
    node _T_247 = xor(_T_244, _T_246) @[PMP.scala 109:49]
    node _T_249 = eq(_T_247, UInt<1>("h00")) @[PMP.scala 109:82]
    node _T_250 = shl(io.pmp[5].addr, 2) @[PMP.scala 46:32]
    node _T_251 = bits(_T_250, 2, 0) @[PMP.scala 109:106]
    node _T_252 = bits(io.addr, 2, 0) @[PMP.scala 109:127]
    node _T_253 = not(_T_252) @[PMP.scala 109:125]
    node _T_254 = and(_T_251, _T_253) @[PMP.scala 109:123]
    node _T_256 = neq(_T_254, UInt<1>("h00")) @[PMP.scala 109:145]
    node _T_257 = and(_T_249, _T_256) @[PMP.scala 109:88]
    node _T_258 = shr(io.addr, 3) @[PMP.scala 110:35]
    node _T_259 = shl(io.pmp[6].addr, 2) @[PMP.scala 46:32]
    node _T_260 = shr(_T_259, 3) @[PMP.scala 110:62]
    node _T_261 = xor(_T_258, _T_260) @[PMP.scala 110:49]
    node _T_263 = eq(_T_261, UInt<1>("h00")) @[PMP.scala 110:77]
    node _T_264 = shl(io.pmp[6].addr, 2) @[PMP.scala 46:32]
    node _T_265 = bits(_T_264, 2, 0) @[PMP.scala 110:96]
    node _T_266 = bits(io.addr, 2, 0) @[PMP.scala 110:117]
    node _T_267 = or(_T_266, _T_243) @[PMP.scala 110:134]
    node _T_268 = and(_T_265, _T_267) @[PMP.scala 110:113]
    node _T_270 = neq(_T_268, UInt<1>("h00")) @[PMP.scala 110:146]
    node _T_271 = and(_T_263, _T_270) @[PMP.scala 110:83]
    node _T_272 = or(_T_257, _T_271) @[PMP.scala 111:46]
    node _T_274 = eq(_T_272, UInt<1>("h00")) @[PMP.scala 111:24]
    node _T_275 = bits(io.pmp[6].mask, 2, 0) @[PMP.scala 112:39]
    node _T_276 = not(_T_275) @[PMP.scala 112:34]
    node _T_277 = and(_T_243, _T_276) @[PMP.scala 112:32]
    node _T_279 = eq(_T_277, UInt<1>("h00")) @[PMP.scala 112:57]
    node _T_280 = bits(io.pmp[6].cfg.a, 1, 1) @[PMP.scala 35:20]
    node _T_281 = mux(_T_280, _T_279, _T_274) @[PMP.scala 113:8]
    wire _T_283 : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>}
    _T_283 is invalid
    _T_283 <- io.pmp[6]
    node _T_284 = and(_T_281, io.pmp[6].cfg.r) @[PMP.scala 152:27]
    node _T_285 = or(_T_284, _T_238) @[PMP.scala 152:41]
    _T_283.cfg.r <= _T_285 @[PMP.scala 152:15]
    node _T_286 = and(_T_281, io.pmp[6].cfg.w) @[PMP.scala 153:27]
    node _T_287 = or(_T_286, _T_238) @[PMP.scala 153:41]
    _T_283.cfg.w <= _T_287 @[PMP.scala 153:15]
    node _T_288 = and(_T_281, io.pmp[6].cfg.x) @[PMP.scala 154:27]
    node _T_289 = or(_T_288, _T_238) @[PMP.scala 154:41]
    _T_283.cfg.x <= _T_289 @[PMP.scala 154:15]
    node _T_290 = mux(_T_235, _T_283, _T_163) @[PMP.scala 155:8]
    node _T_291 = bits(io.pmp[5].cfg.a, 1, 1) @[PMP.scala 35:20]
    node _T_293 = asUInt(asSInt(UInt<3>("h07"))) @[package.scala 82:70]
    node _T_294 = dshl(_T_293, io.size) @[package.scala 82:77]
    node _T_295 = bits(_T_294, 2, 0) @[package.scala 82:82]
    node _T_296 = not(_T_295) @[package.scala 82:46]
    node _T_297 = or(io.pmp[5].mask, _T_296) @[PMP.scala 54:26]
    node _T_298 = shr(io.addr, 3) @[PMP.scala 55:29]
    node _T_299 = shl(io.pmp[5].addr, 2) @[PMP.scala 46:32]
    node _T_300 = shr(_T_299, 3) @[PMP.scala 55:53]
    node _T_301 = shr(io.pmp[5].mask, 3) @[PMP.scala 55:72]
    node _T_302 = xor(_T_298, _T_300) @[PMP.scala 49:47]
    node _T_303 = not(_T_301) @[PMP.scala 49:54]
    node _T_304 = and(_T_302, _T_303) @[PMP.scala 49:52]
    node _T_306 = eq(_T_304, UInt<1>("h00")) @[PMP.scala 49:58]
    node _T_307 = bits(io.addr, 2, 0) @[PMP.scala 56:28]
    node _T_308 = shl(io.pmp[5].addr, 2) @[PMP.scala 46:32]
    node _T_309 = bits(_T_308, 2, 0) @[PMP.scala 56:55]
    node _T_310 = bits(_T_297, 2, 0) @[PMP.scala 56:80]
    node _T_311 = xor(_T_307, _T_309) @[PMP.scala 49:47]
    node _T_312 = not(_T_310) @[PMP.scala 49:54]
    node _T_313 = and(_T_311, _T_312) @[PMP.scala 49:52]
    node _T_315 = eq(_T_313, UInt<1>("h00")) @[PMP.scala 49:58]
    node _T_316 = and(_T_306, _T_315) @[PMP.scala 57:16]
    node _T_317 = bits(io.pmp[5].cfg.a, 0, 0) @[PMP.scala 36:26]
    node _T_319 = asUInt(asSInt(UInt<3>("h07"))) @[package.scala 82:70]
    node _T_320 = dshl(_T_319, io.size) @[package.scala 82:77]
    node _T_321 = bits(_T_320, 2, 0) @[package.scala 82:82]
    node _T_322 = not(_T_321) @[package.scala 82:46]
    node _T_323 = shr(io.addr, 3) @[PMP.scala 66:25]
    node _T_324 = shl(io.pmp[4].addr, 2) @[PMP.scala 46:32]
    node _T_325 = shr(_T_324, 3) @[PMP.scala 66:52]
    node _T_326 = lt(_T_323, _T_325) @[PMP.scala 66:39]
    node _T_327 = shr(io.addr, 3) @[PMP.scala 67:27]
    node _T_328 = shl(io.pmp[4].addr, 2) @[PMP.scala 46:32]
    node _T_329 = shr(_T_328, 3) @[PMP.scala 67:54]
    node _T_330 = xor(_T_327, _T_329) @[PMP.scala 67:41]
    node _T_332 = eq(_T_330, UInt<1>("h00")) @[PMP.scala 67:69]
    node _T_333 = bits(io.addr, 2, 0) @[PMP.scala 68:25]
    node _T_334 = or(_T_333, _T_322) @[PMP.scala 68:42]
    node _T_335 = shl(io.pmp[4].addr, 2) @[PMP.scala 46:32]
    node _T_336 = bits(_T_335, 2, 0) @[PMP.scala 68:64]
    node _T_337 = lt(_T_334, _T_336) @[PMP.scala 68:53]
    node _T_338 = and(_T_332, _T_337) @[PMP.scala 69:30]
    node _T_339 = or(_T_326, _T_338) @[PMP.scala 69:16]
    node _T_341 = eq(_T_339, UInt<1>("h00")) @[PMP.scala 74:5]
    node _T_343 = shr(io.addr, 3) @[PMP.scala 66:25]
    node _T_344 = shl(io.pmp[5].addr, 2) @[PMP.scala 46:32]
    node _T_345 = shr(_T_344, 3) @[PMP.scala 66:52]
    node _T_346 = lt(_T_343, _T_345) @[PMP.scala 66:39]
    node _T_347 = shr(io.addr, 3) @[PMP.scala 67:27]
    node _T_348 = shl(io.pmp[5].addr, 2) @[PMP.scala 46:32]
    node _T_349 = shr(_T_348, 3) @[PMP.scala 67:54]
    node _T_350 = xor(_T_347, _T_349) @[PMP.scala 67:41]
    node _T_352 = eq(_T_350, UInt<1>("h00")) @[PMP.scala 67:69]
    node _T_353 = bits(io.addr, 2, 0) @[PMP.scala 68:25]
    node _T_354 = or(_T_353, UInt<1>("h00")) @[PMP.scala 68:42]
    node _T_355 = shl(io.pmp[5].addr, 2) @[PMP.scala 46:32]
    node _T_356 = bits(_T_355, 2, 0) @[PMP.scala 68:64]
    node _T_357 = lt(_T_354, _T_356) @[PMP.scala 68:53]
    node _T_358 = and(_T_352, _T_357) @[PMP.scala 69:30]
    node _T_359 = or(_T_346, _T_358) @[PMP.scala 69:16]
    node _T_360 = and(_T_341, _T_359) @[PMP.scala 80:48]
    node _T_361 = and(_T_317, _T_360) @[PMP.scala 118:61]
    node _T_362 = mux(_T_291, _T_316, _T_361) @[PMP.scala 118:8]
    node _T_364 = eq(io.pmp[5].cfg.l, UInt<1>("h00")) @[PMP.scala 149:29]
    node _T_365 = and(default, _T_364) @[PMP.scala 149:26]
    node _T_367 = asUInt(asSInt(UInt<3>("h07"))) @[package.scala 82:70]
    node _T_368 = dshl(_T_367, io.size) @[package.scala 82:77]
    node _T_369 = bits(_T_368, 2, 0) @[package.scala 82:82]
    node _T_370 = not(_T_369) @[package.scala 82:46]
    node _T_371 = shr(io.addr, 3) @[PMP.scala 109:35]
    node _T_372 = shl(io.pmp[4].addr, 2) @[PMP.scala 46:32]
    node _T_373 = shr(_T_372, 3) @[PMP.scala 109:67]
    node _T_374 = xor(_T_371, _T_373) @[PMP.scala 109:49]
    node _T_376 = eq(_T_374, UInt<1>("h00")) @[PMP.scala 109:82]
    node _T_377 = shl(io.pmp[4].addr, 2) @[PMP.scala 46:32]
    node _T_378 = bits(_T_377, 2, 0) @[PMP.scala 109:106]
    node _T_379 = bits(io.addr, 2, 0) @[PMP.scala 109:127]
    node _T_380 = not(_T_379) @[PMP.scala 109:125]
    node _T_381 = and(_T_378, _T_380) @[PMP.scala 109:123]
    node _T_383 = neq(_T_381, UInt<1>("h00")) @[PMP.scala 109:145]
    node _T_384 = and(_T_376, _T_383) @[PMP.scala 109:88]
    node _T_385 = shr(io.addr, 3) @[PMP.scala 110:35]
    node _T_386 = shl(io.pmp[5].addr, 2) @[PMP.scala 46:32]
    node _T_387 = shr(_T_386, 3) @[PMP.scala 110:62]
    node _T_388 = xor(_T_385, _T_387) @[PMP.scala 110:49]
    node _T_390 = eq(_T_388, UInt<1>("h00")) @[PMP.scala 110:77]
    node _T_391 = shl(io.pmp[5].addr, 2) @[PMP.scala 46:32]
    node _T_392 = bits(_T_391, 2, 0) @[PMP.scala 110:96]
    node _T_393 = bits(io.addr, 2, 0) @[PMP.scala 110:117]
    node _T_394 = or(_T_393, _T_370) @[PMP.scala 110:134]
    node _T_395 = and(_T_392, _T_394) @[PMP.scala 110:113]
    node _T_397 = neq(_T_395, UInt<1>("h00")) @[PMP.scala 110:146]
    node _T_398 = and(_T_390, _T_397) @[PMP.scala 110:83]
    node _T_399 = or(_T_384, _T_398) @[PMP.scala 111:46]
    node _T_401 = eq(_T_399, UInt<1>("h00")) @[PMP.scala 111:24]
    node _T_402 = bits(io.pmp[5].mask, 2, 0) @[PMP.scala 112:39]
    node _T_403 = not(_T_402) @[PMP.scala 112:34]
    node _T_404 = and(_T_370, _T_403) @[PMP.scala 112:32]
    node _T_406 = eq(_T_404, UInt<1>("h00")) @[PMP.scala 112:57]
    node _T_407 = bits(io.pmp[5].cfg.a, 1, 1) @[PMP.scala 35:20]
    node _T_408 = mux(_T_407, _T_406, _T_401) @[PMP.scala 113:8]
    wire _T_410 : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>}
    _T_410 is invalid
    _T_410 <- io.pmp[5]
    node _T_411 = and(_T_408, io.pmp[5].cfg.r) @[PMP.scala 152:27]
    node _T_412 = or(_T_411, _T_365) @[PMP.scala 152:41]
    _T_410.cfg.r <= _T_412 @[PMP.scala 152:15]
    node _T_413 = and(_T_408, io.pmp[5].cfg.w) @[PMP.scala 153:27]
    node _T_414 = or(_T_413, _T_365) @[PMP.scala 153:41]
    _T_410.cfg.w <= _T_414 @[PMP.scala 153:15]
    node _T_415 = and(_T_408, io.pmp[5].cfg.x) @[PMP.scala 154:27]
    node _T_416 = or(_T_415, _T_365) @[PMP.scala 154:41]
    _T_410.cfg.x <= _T_416 @[PMP.scala 154:15]
    node _T_417 = mux(_T_362, _T_410, _T_290) @[PMP.scala 155:8]
    node _T_418 = bits(io.pmp[4].cfg.a, 1, 1) @[PMP.scala 35:20]
    node _T_420 = asUInt(asSInt(UInt<3>("h07"))) @[package.scala 82:70]
    node _T_421 = dshl(_T_420, io.size) @[package.scala 82:77]
    node _T_422 = bits(_T_421, 2, 0) @[package.scala 82:82]
    node _T_423 = not(_T_422) @[package.scala 82:46]
    node _T_424 = or(io.pmp[4].mask, _T_423) @[PMP.scala 54:26]
    node _T_425 = shr(io.addr, 3) @[PMP.scala 55:29]
    node _T_426 = shl(io.pmp[4].addr, 2) @[PMP.scala 46:32]
    node _T_427 = shr(_T_426, 3) @[PMP.scala 55:53]
    node _T_428 = shr(io.pmp[4].mask, 3) @[PMP.scala 55:72]
    node _T_429 = xor(_T_425, _T_427) @[PMP.scala 49:47]
    node _T_430 = not(_T_428) @[PMP.scala 49:54]
    node _T_431 = and(_T_429, _T_430) @[PMP.scala 49:52]
    node _T_433 = eq(_T_431, UInt<1>("h00")) @[PMP.scala 49:58]
    node _T_434 = bits(io.addr, 2, 0) @[PMP.scala 56:28]
    node _T_435 = shl(io.pmp[4].addr, 2) @[PMP.scala 46:32]
    node _T_436 = bits(_T_435, 2, 0) @[PMP.scala 56:55]
    node _T_437 = bits(_T_424, 2, 0) @[PMP.scala 56:80]
    node _T_438 = xor(_T_434, _T_436) @[PMP.scala 49:47]
    node _T_439 = not(_T_437) @[PMP.scala 49:54]
    node _T_440 = and(_T_438, _T_439) @[PMP.scala 49:52]
    node _T_442 = eq(_T_440, UInt<1>("h00")) @[PMP.scala 49:58]
    node _T_443 = and(_T_433, _T_442) @[PMP.scala 57:16]
    node _T_444 = bits(io.pmp[4].cfg.a, 0, 0) @[PMP.scala 36:26]
    node _T_446 = asUInt(asSInt(UInt<3>("h07"))) @[package.scala 82:70]
    node _T_447 = dshl(_T_446, io.size) @[package.scala 82:77]
    node _T_448 = bits(_T_447, 2, 0) @[package.scala 82:82]
    node _T_449 = not(_T_448) @[package.scala 82:46]
    node _T_450 = shr(io.addr, 3) @[PMP.scala 66:25]
    node _T_451 = shl(io.pmp[3].addr, 2) @[PMP.scala 46:32]
    node _T_452 = shr(_T_451, 3) @[PMP.scala 66:52]
    node _T_453 = lt(_T_450, _T_452) @[PMP.scala 66:39]
    node _T_454 = shr(io.addr, 3) @[PMP.scala 67:27]
    node _T_455 = shl(io.pmp[3].addr, 2) @[PMP.scala 46:32]
    node _T_456 = shr(_T_455, 3) @[PMP.scala 67:54]
    node _T_457 = xor(_T_454, _T_456) @[PMP.scala 67:41]
    node _T_459 = eq(_T_457, UInt<1>("h00")) @[PMP.scala 67:69]
    node _T_460 = bits(io.addr, 2, 0) @[PMP.scala 68:25]
    node _T_461 = or(_T_460, _T_449) @[PMP.scala 68:42]
    node _T_462 = shl(io.pmp[3].addr, 2) @[PMP.scala 46:32]
    node _T_463 = bits(_T_462, 2, 0) @[PMP.scala 68:64]
    node _T_464 = lt(_T_461, _T_463) @[PMP.scala 68:53]
    node _T_465 = and(_T_459, _T_464) @[PMP.scala 69:30]
    node _T_466 = or(_T_453, _T_465) @[PMP.scala 69:16]
    node _T_468 = eq(_T_466, UInt<1>("h00")) @[PMP.scala 74:5]
    node _T_470 = shr(io.addr, 3) @[PMP.scala 66:25]
    node _T_471 = shl(io.pmp[4].addr, 2) @[PMP.scala 46:32]
    node _T_472 = shr(_T_471, 3) @[PMP.scala 66:52]
    node _T_473 = lt(_T_470, _T_472) @[PMP.scala 66:39]
    node _T_474 = shr(io.addr, 3) @[PMP.scala 67:27]
    node _T_475 = shl(io.pmp[4].addr, 2) @[PMP.scala 46:32]
    node _T_476 = shr(_T_475, 3) @[PMP.scala 67:54]
    node _T_477 = xor(_T_474, _T_476) @[PMP.scala 67:41]
    node _T_479 = eq(_T_477, UInt<1>("h00")) @[PMP.scala 67:69]
    node _T_480 = bits(io.addr, 2, 0) @[PMP.scala 68:25]
    node _T_481 = or(_T_480, UInt<1>("h00")) @[PMP.scala 68:42]
    node _T_482 = shl(io.pmp[4].addr, 2) @[PMP.scala 46:32]
    node _T_483 = bits(_T_482, 2, 0) @[PMP.scala 68:64]
    node _T_484 = lt(_T_481, _T_483) @[PMP.scala 68:53]
    node _T_485 = and(_T_479, _T_484) @[PMP.scala 69:30]
    node _T_486 = or(_T_473, _T_485) @[PMP.scala 69:16]
    node _T_487 = and(_T_468, _T_486) @[PMP.scala 80:48]
    node _T_488 = and(_T_444, _T_487) @[PMP.scala 118:61]
    node _T_489 = mux(_T_418, _T_443, _T_488) @[PMP.scala 118:8]
    node _T_491 = eq(io.pmp[4].cfg.l, UInt<1>("h00")) @[PMP.scala 149:29]
    node _T_492 = and(default, _T_491) @[PMP.scala 149:26]
    node _T_494 = asUInt(asSInt(UInt<3>("h07"))) @[package.scala 82:70]
    node _T_495 = dshl(_T_494, io.size) @[package.scala 82:77]
    node _T_496 = bits(_T_495, 2, 0) @[package.scala 82:82]
    node _T_497 = not(_T_496) @[package.scala 82:46]
    node _T_498 = shr(io.addr, 3) @[PMP.scala 109:35]
    node _T_499 = shl(io.pmp[3].addr, 2) @[PMP.scala 46:32]
    node _T_500 = shr(_T_499, 3) @[PMP.scala 109:67]
    node _T_501 = xor(_T_498, _T_500) @[PMP.scala 109:49]
    node _T_503 = eq(_T_501, UInt<1>("h00")) @[PMP.scala 109:82]
    node _T_504 = shl(io.pmp[3].addr, 2) @[PMP.scala 46:32]
    node _T_505 = bits(_T_504, 2, 0) @[PMP.scala 109:106]
    node _T_506 = bits(io.addr, 2, 0) @[PMP.scala 109:127]
    node _T_507 = not(_T_506) @[PMP.scala 109:125]
    node _T_508 = and(_T_505, _T_507) @[PMP.scala 109:123]
    node _T_510 = neq(_T_508, UInt<1>("h00")) @[PMP.scala 109:145]
    node _T_511 = and(_T_503, _T_510) @[PMP.scala 109:88]
    node _T_512 = shr(io.addr, 3) @[PMP.scala 110:35]
    node _T_513 = shl(io.pmp[4].addr, 2) @[PMP.scala 46:32]
    node _T_514 = shr(_T_513, 3) @[PMP.scala 110:62]
    node _T_515 = xor(_T_512, _T_514) @[PMP.scala 110:49]
    node _T_517 = eq(_T_515, UInt<1>("h00")) @[PMP.scala 110:77]
    node _T_518 = shl(io.pmp[4].addr, 2) @[PMP.scala 46:32]
    node _T_519 = bits(_T_518, 2, 0) @[PMP.scala 110:96]
    node _T_520 = bits(io.addr, 2, 0) @[PMP.scala 110:117]
    node _T_521 = or(_T_520, _T_497) @[PMP.scala 110:134]
    node _T_522 = and(_T_519, _T_521) @[PMP.scala 110:113]
    node _T_524 = neq(_T_522, UInt<1>("h00")) @[PMP.scala 110:146]
    node _T_525 = and(_T_517, _T_524) @[PMP.scala 110:83]
    node _T_526 = or(_T_511, _T_525) @[PMP.scala 111:46]
    node _T_528 = eq(_T_526, UInt<1>("h00")) @[PMP.scala 111:24]
    node _T_529 = bits(io.pmp[4].mask, 2, 0) @[PMP.scala 112:39]
    node _T_530 = not(_T_529) @[PMP.scala 112:34]
    node _T_531 = and(_T_497, _T_530) @[PMP.scala 112:32]
    node _T_533 = eq(_T_531, UInt<1>("h00")) @[PMP.scala 112:57]
    node _T_534 = bits(io.pmp[4].cfg.a, 1, 1) @[PMP.scala 35:20]
    node _T_535 = mux(_T_534, _T_533, _T_528) @[PMP.scala 113:8]
    wire _T_537 : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>}
    _T_537 is invalid
    _T_537 <- io.pmp[4]
    node _T_538 = and(_T_535, io.pmp[4].cfg.r) @[PMP.scala 152:27]
    node _T_539 = or(_T_538, _T_492) @[PMP.scala 152:41]
    _T_537.cfg.r <= _T_539 @[PMP.scala 152:15]
    node _T_540 = and(_T_535, io.pmp[4].cfg.w) @[PMP.scala 153:27]
    node _T_541 = or(_T_540, _T_492) @[PMP.scala 153:41]
    _T_537.cfg.w <= _T_541 @[PMP.scala 153:15]
    node _T_542 = and(_T_535, io.pmp[4].cfg.x) @[PMP.scala 154:27]
    node _T_543 = or(_T_542, _T_492) @[PMP.scala 154:41]
    _T_537.cfg.x <= _T_543 @[PMP.scala 154:15]
    node _T_544 = mux(_T_489, _T_537, _T_417) @[PMP.scala 155:8]
    node _T_545 = bits(io.pmp[3].cfg.a, 1, 1) @[PMP.scala 35:20]
    node _T_547 = asUInt(asSInt(UInt<3>("h07"))) @[package.scala 82:70]
    node _T_548 = dshl(_T_547, io.size) @[package.scala 82:77]
    node _T_549 = bits(_T_548, 2, 0) @[package.scala 82:82]
    node _T_550 = not(_T_549) @[package.scala 82:46]
    node _T_551 = or(io.pmp[3].mask, _T_550) @[PMP.scala 54:26]
    node _T_552 = shr(io.addr, 3) @[PMP.scala 55:29]
    node _T_553 = shl(io.pmp[3].addr, 2) @[PMP.scala 46:32]
    node _T_554 = shr(_T_553, 3) @[PMP.scala 55:53]
    node _T_555 = shr(io.pmp[3].mask, 3) @[PMP.scala 55:72]
    node _T_556 = xor(_T_552, _T_554) @[PMP.scala 49:47]
    node _T_557 = not(_T_555) @[PMP.scala 49:54]
    node _T_558 = and(_T_556, _T_557) @[PMP.scala 49:52]
    node _T_560 = eq(_T_558, UInt<1>("h00")) @[PMP.scala 49:58]
    node _T_561 = bits(io.addr, 2, 0) @[PMP.scala 56:28]
    node _T_562 = shl(io.pmp[3].addr, 2) @[PMP.scala 46:32]
    node _T_563 = bits(_T_562, 2, 0) @[PMP.scala 56:55]
    node _T_564 = bits(_T_551, 2, 0) @[PMP.scala 56:80]
    node _T_565 = xor(_T_561, _T_563) @[PMP.scala 49:47]
    node _T_566 = not(_T_564) @[PMP.scala 49:54]
    node _T_567 = and(_T_565, _T_566) @[PMP.scala 49:52]
    node _T_569 = eq(_T_567, UInt<1>("h00")) @[PMP.scala 49:58]
    node _T_570 = and(_T_560, _T_569) @[PMP.scala 57:16]
    node _T_571 = bits(io.pmp[3].cfg.a, 0, 0) @[PMP.scala 36:26]
    node _T_573 = asUInt(asSInt(UInt<3>("h07"))) @[package.scala 82:70]
    node _T_574 = dshl(_T_573, io.size) @[package.scala 82:77]
    node _T_575 = bits(_T_574, 2, 0) @[package.scala 82:82]
    node _T_576 = not(_T_575) @[package.scala 82:46]
    node _T_577 = shr(io.addr, 3) @[PMP.scala 66:25]
    node _T_578 = shl(io.pmp[2].addr, 2) @[PMP.scala 46:32]
    node _T_579 = shr(_T_578, 3) @[PMP.scala 66:52]
    node _T_580 = lt(_T_577, _T_579) @[PMP.scala 66:39]
    node _T_581 = shr(io.addr, 3) @[PMP.scala 67:27]
    node _T_582 = shl(io.pmp[2].addr, 2) @[PMP.scala 46:32]
    node _T_583 = shr(_T_582, 3) @[PMP.scala 67:54]
    node _T_584 = xor(_T_581, _T_583) @[PMP.scala 67:41]
    node _T_586 = eq(_T_584, UInt<1>("h00")) @[PMP.scala 67:69]
    node _T_587 = bits(io.addr, 2, 0) @[PMP.scala 68:25]
    node _T_588 = or(_T_587, _T_576) @[PMP.scala 68:42]
    node _T_589 = shl(io.pmp[2].addr, 2) @[PMP.scala 46:32]
    node _T_590 = bits(_T_589, 2, 0) @[PMP.scala 68:64]
    node _T_591 = lt(_T_588, _T_590) @[PMP.scala 68:53]
    node _T_592 = and(_T_586, _T_591) @[PMP.scala 69:30]
    node _T_593 = or(_T_580, _T_592) @[PMP.scala 69:16]
    node _T_595 = eq(_T_593, UInt<1>("h00")) @[PMP.scala 74:5]
    node _T_597 = shr(io.addr, 3) @[PMP.scala 66:25]
    node _T_598 = shl(io.pmp[3].addr, 2) @[PMP.scala 46:32]
    node _T_599 = shr(_T_598, 3) @[PMP.scala 66:52]
    node _T_600 = lt(_T_597, _T_599) @[PMP.scala 66:39]
    node _T_601 = shr(io.addr, 3) @[PMP.scala 67:27]
    node _T_602 = shl(io.pmp[3].addr, 2) @[PMP.scala 46:32]
    node _T_603 = shr(_T_602, 3) @[PMP.scala 67:54]
    node _T_604 = xor(_T_601, _T_603) @[PMP.scala 67:41]
    node _T_606 = eq(_T_604, UInt<1>("h00")) @[PMP.scala 67:69]
    node _T_607 = bits(io.addr, 2, 0) @[PMP.scala 68:25]
    node _T_608 = or(_T_607, UInt<1>("h00")) @[PMP.scala 68:42]
    node _T_609 = shl(io.pmp[3].addr, 2) @[PMP.scala 46:32]
    node _T_610 = bits(_T_609, 2, 0) @[PMP.scala 68:64]
    node _T_611 = lt(_T_608, _T_610) @[PMP.scala 68:53]
    node _T_612 = and(_T_606, _T_611) @[PMP.scala 69:30]
    node _T_613 = or(_T_600, _T_612) @[PMP.scala 69:16]
    node _T_614 = and(_T_595, _T_613) @[PMP.scala 80:48]
    node _T_615 = and(_T_571, _T_614) @[PMP.scala 118:61]
    node _T_616 = mux(_T_545, _T_570, _T_615) @[PMP.scala 118:8]
    node _T_618 = eq(io.pmp[3].cfg.l, UInt<1>("h00")) @[PMP.scala 149:29]
    node _T_619 = and(default, _T_618) @[PMP.scala 149:26]
    node _T_621 = asUInt(asSInt(UInt<3>("h07"))) @[package.scala 82:70]
    node _T_622 = dshl(_T_621, io.size) @[package.scala 82:77]
    node _T_623 = bits(_T_622, 2, 0) @[package.scala 82:82]
    node _T_624 = not(_T_623) @[package.scala 82:46]
    node _T_625 = shr(io.addr, 3) @[PMP.scala 109:35]
    node _T_626 = shl(io.pmp[2].addr, 2) @[PMP.scala 46:32]
    node _T_627 = shr(_T_626, 3) @[PMP.scala 109:67]
    node _T_628 = xor(_T_625, _T_627) @[PMP.scala 109:49]
    node _T_630 = eq(_T_628, UInt<1>("h00")) @[PMP.scala 109:82]
    node _T_631 = shl(io.pmp[2].addr, 2) @[PMP.scala 46:32]
    node _T_632 = bits(_T_631, 2, 0) @[PMP.scala 109:106]
    node _T_633 = bits(io.addr, 2, 0) @[PMP.scala 109:127]
    node _T_634 = not(_T_633) @[PMP.scala 109:125]
    node _T_635 = and(_T_632, _T_634) @[PMP.scala 109:123]
    node _T_637 = neq(_T_635, UInt<1>("h00")) @[PMP.scala 109:145]
    node _T_638 = and(_T_630, _T_637) @[PMP.scala 109:88]
    node _T_639 = shr(io.addr, 3) @[PMP.scala 110:35]
    node _T_640 = shl(io.pmp[3].addr, 2) @[PMP.scala 46:32]
    node _T_641 = shr(_T_640, 3) @[PMP.scala 110:62]
    node _T_642 = xor(_T_639, _T_641) @[PMP.scala 110:49]
    node _T_644 = eq(_T_642, UInt<1>("h00")) @[PMP.scala 110:77]
    node _T_645 = shl(io.pmp[3].addr, 2) @[PMP.scala 46:32]
    node _T_646 = bits(_T_645, 2, 0) @[PMP.scala 110:96]
    node _T_647 = bits(io.addr, 2, 0) @[PMP.scala 110:117]
    node _T_648 = or(_T_647, _T_624) @[PMP.scala 110:134]
    node _T_649 = and(_T_646, _T_648) @[PMP.scala 110:113]
    node _T_651 = neq(_T_649, UInt<1>("h00")) @[PMP.scala 110:146]
    node _T_652 = and(_T_644, _T_651) @[PMP.scala 110:83]
    node _T_653 = or(_T_638, _T_652) @[PMP.scala 111:46]
    node _T_655 = eq(_T_653, UInt<1>("h00")) @[PMP.scala 111:24]
    node _T_656 = bits(io.pmp[3].mask, 2, 0) @[PMP.scala 112:39]
    node _T_657 = not(_T_656) @[PMP.scala 112:34]
    node _T_658 = and(_T_624, _T_657) @[PMP.scala 112:32]
    node _T_660 = eq(_T_658, UInt<1>("h00")) @[PMP.scala 112:57]
    node _T_661 = bits(io.pmp[3].cfg.a, 1, 1) @[PMP.scala 35:20]
    node _T_662 = mux(_T_661, _T_660, _T_655) @[PMP.scala 113:8]
    wire _T_664 : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>}
    _T_664 is invalid
    _T_664 <- io.pmp[3]
    node _T_665 = and(_T_662, io.pmp[3].cfg.r) @[PMP.scala 152:27]
    node _T_666 = or(_T_665, _T_619) @[PMP.scala 152:41]
    _T_664.cfg.r <= _T_666 @[PMP.scala 152:15]
    node _T_667 = and(_T_662, io.pmp[3].cfg.w) @[PMP.scala 153:27]
    node _T_668 = or(_T_667, _T_619) @[PMP.scala 153:41]
    _T_664.cfg.w <= _T_668 @[PMP.scala 153:15]
    node _T_669 = and(_T_662, io.pmp[3].cfg.x) @[PMP.scala 154:27]
    node _T_670 = or(_T_669, _T_619) @[PMP.scala 154:41]
    _T_664.cfg.x <= _T_670 @[PMP.scala 154:15]
    node _T_671 = mux(_T_616, _T_664, _T_544) @[PMP.scala 155:8]
    node _T_672 = bits(io.pmp[2].cfg.a, 1, 1) @[PMP.scala 35:20]
    node _T_674 = asUInt(asSInt(UInt<3>("h07"))) @[package.scala 82:70]
    node _T_675 = dshl(_T_674, io.size) @[package.scala 82:77]
    node _T_676 = bits(_T_675, 2, 0) @[package.scala 82:82]
    node _T_677 = not(_T_676) @[package.scala 82:46]
    node _T_678 = or(io.pmp[2].mask, _T_677) @[PMP.scala 54:26]
    node _T_679 = shr(io.addr, 3) @[PMP.scala 55:29]
    node _T_680 = shl(io.pmp[2].addr, 2) @[PMP.scala 46:32]
    node _T_681 = shr(_T_680, 3) @[PMP.scala 55:53]
    node _T_682 = shr(io.pmp[2].mask, 3) @[PMP.scala 55:72]
    node _T_683 = xor(_T_679, _T_681) @[PMP.scala 49:47]
    node _T_684 = not(_T_682) @[PMP.scala 49:54]
    node _T_685 = and(_T_683, _T_684) @[PMP.scala 49:52]
    node _T_687 = eq(_T_685, UInt<1>("h00")) @[PMP.scala 49:58]
    node _T_688 = bits(io.addr, 2, 0) @[PMP.scala 56:28]
    node _T_689 = shl(io.pmp[2].addr, 2) @[PMP.scala 46:32]
    node _T_690 = bits(_T_689, 2, 0) @[PMP.scala 56:55]
    node _T_691 = bits(_T_678, 2, 0) @[PMP.scala 56:80]
    node _T_692 = xor(_T_688, _T_690) @[PMP.scala 49:47]
    node _T_693 = not(_T_691) @[PMP.scala 49:54]
    node _T_694 = and(_T_692, _T_693) @[PMP.scala 49:52]
    node _T_696 = eq(_T_694, UInt<1>("h00")) @[PMP.scala 49:58]
    node _T_697 = and(_T_687, _T_696) @[PMP.scala 57:16]
    node _T_698 = bits(io.pmp[2].cfg.a, 0, 0) @[PMP.scala 36:26]
    node _T_700 = asUInt(asSInt(UInt<3>("h07"))) @[package.scala 82:70]
    node _T_701 = dshl(_T_700, io.size) @[package.scala 82:77]
    node _T_702 = bits(_T_701, 2, 0) @[package.scala 82:82]
    node _T_703 = not(_T_702) @[package.scala 82:46]
    node _T_704 = shr(io.addr, 3) @[PMP.scala 66:25]
    node _T_705 = shl(io.pmp[1].addr, 2) @[PMP.scala 46:32]
    node _T_706 = shr(_T_705, 3) @[PMP.scala 66:52]
    node _T_707 = lt(_T_704, _T_706) @[PMP.scala 66:39]
    node _T_708 = shr(io.addr, 3) @[PMP.scala 67:27]
    node _T_709 = shl(io.pmp[1].addr, 2) @[PMP.scala 46:32]
    node _T_710 = shr(_T_709, 3) @[PMP.scala 67:54]
    node _T_711 = xor(_T_708, _T_710) @[PMP.scala 67:41]
    node _T_713 = eq(_T_711, UInt<1>("h00")) @[PMP.scala 67:69]
    node _T_714 = bits(io.addr, 2, 0) @[PMP.scala 68:25]
    node _T_715 = or(_T_714, _T_703) @[PMP.scala 68:42]
    node _T_716 = shl(io.pmp[1].addr, 2) @[PMP.scala 46:32]
    node _T_717 = bits(_T_716, 2, 0) @[PMP.scala 68:64]
    node _T_718 = lt(_T_715, _T_717) @[PMP.scala 68:53]
    node _T_719 = and(_T_713, _T_718) @[PMP.scala 69:30]
    node _T_720 = or(_T_707, _T_719) @[PMP.scala 69:16]
    node _T_722 = eq(_T_720, UInt<1>("h00")) @[PMP.scala 74:5]
    node _T_724 = shr(io.addr, 3) @[PMP.scala 66:25]
    node _T_725 = shl(io.pmp[2].addr, 2) @[PMP.scala 46:32]
    node _T_726 = shr(_T_725, 3) @[PMP.scala 66:52]
    node _T_727 = lt(_T_724, _T_726) @[PMP.scala 66:39]
    node _T_728 = shr(io.addr, 3) @[PMP.scala 67:27]
    node _T_729 = shl(io.pmp[2].addr, 2) @[PMP.scala 46:32]
    node _T_730 = shr(_T_729, 3) @[PMP.scala 67:54]
    node _T_731 = xor(_T_728, _T_730) @[PMP.scala 67:41]
    node _T_733 = eq(_T_731, UInt<1>("h00")) @[PMP.scala 67:69]
    node _T_734 = bits(io.addr, 2, 0) @[PMP.scala 68:25]
    node _T_735 = or(_T_734, UInt<1>("h00")) @[PMP.scala 68:42]
    node _T_736 = shl(io.pmp[2].addr, 2) @[PMP.scala 46:32]
    node _T_737 = bits(_T_736, 2, 0) @[PMP.scala 68:64]
    node _T_738 = lt(_T_735, _T_737) @[PMP.scala 68:53]
    node _T_739 = and(_T_733, _T_738) @[PMP.scala 69:30]
    node _T_740 = or(_T_727, _T_739) @[PMP.scala 69:16]
    node _T_741 = and(_T_722, _T_740) @[PMP.scala 80:48]
    node _T_742 = and(_T_698, _T_741) @[PMP.scala 118:61]
    node _T_743 = mux(_T_672, _T_697, _T_742) @[PMP.scala 118:8]
    node _T_745 = eq(io.pmp[2].cfg.l, UInt<1>("h00")) @[PMP.scala 149:29]
    node _T_746 = and(default, _T_745) @[PMP.scala 149:26]
    node _T_748 = asUInt(asSInt(UInt<3>("h07"))) @[package.scala 82:70]
    node _T_749 = dshl(_T_748, io.size) @[package.scala 82:77]
    node _T_750 = bits(_T_749, 2, 0) @[package.scala 82:82]
    node _T_751 = not(_T_750) @[package.scala 82:46]
    node _T_752 = shr(io.addr, 3) @[PMP.scala 109:35]
    node _T_753 = shl(io.pmp[1].addr, 2) @[PMP.scala 46:32]
    node _T_754 = shr(_T_753, 3) @[PMP.scala 109:67]
    node _T_755 = xor(_T_752, _T_754) @[PMP.scala 109:49]
    node _T_757 = eq(_T_755, UInt<1>("h00")) @[PMP.scala 109:82]
    node _T_758 = shl(io.pmp[1].addr, 2) @[PMP.scala 46:32]
    node _T_759 = bits(_T_758, 2, 0) @[PMP.scala 109:106]
    node _T_760 = bits(io.addr, 2, 0) @[PMP.scala 109:127]
    node _T_761 = not(_T_760) @[PMP.scala 109:125]
    node _T_762 = and(_T_759, _T_761) @[PMP.scala 109:123]
    node _T_764 = neq(_T_762, UInt<1>("h00")) @[PMP.scala 109:145]
    node _T_765 = and(_T_757, _T_764) @[PMP.scala 109:88]
    node _T_766 = shr(io.addr, 3) @[PMP.scala 110:35]
    node _T_767 = shl(io.pmp[2].addr, 2) @[PMP.scala 46:32]
    node _T_768 = shr(_T_767, 3) @[PMP.scala 110:62]
    node _T_769 = xor(_T_766, _T_768) @[PMP.scala 110:49]
    node _T_771 = eq(_T_769, UInt<1>("h00")) @[PMP.scala 110:77]
    node _T_772 = shl(io.pmp[2].addr, 2) @[PMP.scala 46:32]
    node _T_773 = bits(_T_772, 2, 0) @[PMP.scala 110:96]
    node _T_774 = bits(io.addr, 2, 0) @[PMP.scala 110:117]
    node _T_775 = or(_T_774, _T_751) @[PMP.scala 110:134]
    node _T_776 = and(_T_773, _T_775) @[PMP.scala 110:113]
    node _T_778 = neq(_T_776, UInt<1>("h00")) @[PMP.scala 110:146]
    node _T_779 = and(_T_771, _T_778) @[PMP.scala 110:83]
    node _T_780 = or(_T_765, _T_779) @[PMP.scala 111:46]
    node _T_782 = eq(_T_780, UInt<1>("h00")) @[PMP.scala 111:24]
    node _T_783 = bits(io.pmp[2].mask, 2, 0) @[PMP.scala 112:39]
    node _T_784 = not(_T_783) @[PMP.scala 112:34]
    node _T_785 = and(_T_751, _T_784) @[PMP.scala 112:32]
    node _T_787 = eq(_T_785, UInt<1>("h00")) @[PMP.scala 112:57]
    node _T_788 = bits(io.pmp[2].cfg.a, 1, 1) @[PMP.scala 35:20]
    node _T_789 = mux(_T_788, _T_787, _T_782) @[PMP.scala 113:8]
    wire _T_791 : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>}
    _T_791 is invalid
    _T_791 <- io.pmp[2]
    node _T_792 = and(_T_789, io.pmp[2].cfg.r) @[PMP.scala 152:27]
    node _T_793 = or(_T_792, _T_746) @[PMP.scala 152:41]
    _T_791.cfg.r <= _T_793 @[PMP.scala 152:15]
    node _T_794 = and(_T_789, io.pmp[2].cfg.w) @[PMP.scala 153:27]
    node _T_795 = or(_T_794, _T_746) @[PMP.scala 153:41]
    _T_791.cfg.w <= _T_795 @[PMP.scala 153:15]
    node _T_796 = and(_T_789, io.pmp[2].cfg.x) @[PMP.scala 154:27]
    node _T_797 = or(_T_796, _T_746) @[PMP.scala 154:41]
    _T_791.cfg.x <= _T_797 @[PMP.scala 154:15]
    node _T_798 = mux(_T_743, _T_791, _T_671) @[PMP.scala 155:8]
    node _T_799 = bits(io.pmp[1].cfg.a, 1, 1) @[PMP.scala 35:20]
    node _T_801 = asUInt(asSInt(UInt<3>("h07"))) @[package.scala 82:70]
    node _T_802 = dshl(_T_801, io.size) @[package.scala 82:77]
    node _T_803 = bits(_T_802, 2, 0) @[package.scala 82:82]
    node _T_804 = not(_T_803) @[package.scala 82:46]
    node _T_805 = or(io.pmp[1].mask, _T_804) @[PMP.scala 54:26]
    node _T_806 = shr(io.addr, 3) @[PMP.scala 55:29]
    node _T_807 = shl(io.pmp[1].addr, 2) @[PMP.scala 46:32]
    node _T_808 = shr(_T_807, 3) @[PMP.scala 55:53]
    node _T_809 = shr(io.pmp[1].mask, 3) @[PMP.scala 55:72]
    node _T_810 = xor(_T_806, _T_808) @[PMP.scala 49:47]
    node _T_811 = not(_T_809) @[PMP.scala 49:54]
    node _T_812 = and(_T_810, _T_811) @[PMP.scala 49:52]
    node _T_814 = eq(_T_812, UInt<1>("h00")) @[PMP.scala 49:58]
    node _T_815 = bits(io.addr, 2, 0) @[PMP.scala 56:28]
    node _T_816 = shl(io.pmp[1].addr, 2) @[PMP.scala 46:32]
    node _T_817 = bits(_T_816, 2, 0) @[PMP.scala 56:55]
    node _T_818 = bits(_T_805, 2, 0) @[PMP.scala 56:80]
    node _T_819 = xor(_T_815, _T_817) @[PMP.scala 49:47]
    node _T_820 = not(_T_818) @[PMP.scala 49:54]
    node _T_821 = and(_T_819, _T_820) @[PMP.scala 49:52]
    node _T_823 = eq(_T_821, UInt<1>("h00")) @[PMP.scala 49:58]
    node _T_824 = and(_T_814, _T_823) @[PMP.scala 57:16]
    node _T_825 = bits(io.pmp[1].cfg.a, 0, 0) @[PMP.scala 36:26]
    node _T_827 = asUInt(asSInt(UInt<3>("h07"))) @[package.scala 82:70]
    node _T_828 = dshl(_T_827, io.size) @[package.scala 82:77]
    node _T_829 = bits(_T_828, 2, 0) @[package.scala 82:82]
    node _T_830 = not(_T_829) @[package.scala 82:46]
    node _T_831 = shr(io.addr, 3) @[PMP.scala 66:25]
    node _T_832 = shl(io.pmp[0].addr, 2) @[PMP.scala 46:32]
    node _T_833 = shr(_T_832, 3) @[PMP.scala 66:52]
    node _T_834 = lt(_T_831, _T_833) @[PMP.scala 66:39]
    node _T_835 = shr(io.addr, 3) @[PMP.scala 67:27]
    node _T_836 = shl(io.pmp[0].addr, 2) @[PMP.scala 46:32]
    node _T_837 = shr(_T_836, 3) @[PMP.scala 67:54]
    node _T_838 = xor(_T_835, _T_837) @[PMP.scala 67:41]
    node _T_840 = eq(_T_838, UInt<1>("h00")) @[PMP.scala 67:69]
    node _T_841 = bits(io.addr, 2, 0) @[PMP.scala 68:25]
    node _T_842 = or(_T_841, _T_830) @[PMP.scala 68:42]
    node _T_843 = shl(io.pmp[0].addr, 2) @[PMP.scala 46:32]
    node _T_844 = bits(_T_843, 2, 0) @[PMP.scala 68:64]
    node _T_845 = lt(_T_842, _T_844) @[PMP.scala 68:53]
    node _T_846 = and(_T_840, _T_845) @[PMP.scala 69:30]
    node _T_847 = or(_T_834, _T_846) @[PMP.scala 69:16]
    node _T_849 = eq(_T_847, UInt<1>("h00")) @[PMP.scala 74:5]
    node _T_851 = shr(io.addr, 3) @[PMP.scala 66:25]
    node _T_852 = shl(io.pmp[1].addr, 2) @[PMP.scala 46:32]
    node _T_853 = shr(_T_852, 3) @[PMP.scala 66:52]
    node _T_854 = lt(_T_851, _T_853) @[PMP.scala 66:39]
    node _T_855 = shr(io.addr, 3) @[PMP.scala 67:27]
    node _T_856 = shl(io.pmp[1].addr, 2) @[PMP.scala 46:32]
    node _T_857 = shr(_T_856, 3) @[PMP.scala 67:54]
    node _T_858 = xor(_T_855, _T_857) @[PMP.scala 67:41]
    node _T_860 = eq(_T_858, UInt<1>("h00")) @[PMP.scala 67:69]
    node _T_861 = bits(io.addr, 2, 0) @[PMP.scala 68:25]
    node _T_862 = or(_T_861, UInt<1>("h00")) @[PMP.scala 68:42]
    node _T_863 = shl(io.pmp[1].addr, 2) @[PMP.scala 46:32]
    node _T_864 = bits(_T_863, 2, 0) @[PMP.scala 68:64]
    node _T_865 = lt(_T_862, _T_864) @[PMP.scala 68:53]
    node _T_866 = and(_T_860, _T_865) @[PMP.scala 69:30]
    node _T_867 = or(_T_854, _T_866) @[PMP.scala 69:16]
    node _T_868 = and(_T_849, _T_867) @[PMP.scala 80:48]
    node _T_869 = and(_T_825, _T_868) @[PMP.scala 118:61]
    node _T_870 = mux(_T_799, _T_824, _T_869) @[PMP.scala 118:8]
    node _T_872 = eq(io.pmp[1].cfg.l, UInt<1>("h00")) @[PMP.scala 149:29]
    node _T_873 = and(default, _T_872) @[PMP.scala 149:26]
    node _T_875 = asUInt(asSInt(UInt<3>("h07"))) @[package.scala 82:70]
    node _T_876 = dshl(_T_875, io.size) @[package.scala 82:77]
    node _T_877 = bits(_T_876, 2, 0) @[package.scala 82:82]
    node _T_878 = not(_T_877) @[package.scala 82:46]
    node _T_879 = shr(io.addr, 3) @[PMP.scala 109:35]
    node _T_880 = shl(io.pmp[0].addr, 2) @[PMP.scala 46:32]
    node _T_881 = shr(_T_880, 3) @[PMP.scala 109:67]
    node _T_882 = xor(_T_879, _T_881) @[PMP.scala 109:49]
    node _T_884 = eq(_T_882, UInt<1>("h00")) @[PMP.scala 109:82]
    node _T_885 = shl(io.pmp[0].addr, 2) @[PMP.scala 46:32]
    node _T_886 = bits(_T_885, 2, 0) @[PMP.scala 109:106]
    node _T_887 = bits(io.addr, 2, 0) @[PMP.scala 109:127]
    node _T_888 = not(_T_887) @[PMP.scala 109:125]
    node _T_889 = and(_T_886, _T_888) @[PMP.scala 109:123]
    node _T_891 = neq(_T_889, UInt<1>("h00")) @[PMP.scala 109:145]
    node _T_892 = and(_T_884, _T_891) @[PMP.scala 109:88]
    node _T_893 = shr(io.addr, 3) @[PMP.scala 110:35]
    node _T_894 = shl(io.pmp[1].addr, 2) @[PMP.scala 46:32]
    node _T_895 = shr(_T_894, 3) @[PMP.scala 110:62]
    node _T_896 = xor(_T_893, _T_895) @[PMP.scala 110:49]
    node _T_898 = eq(_T_896, UInt<1>("h00")) @[PMP.scala 110:77]
    node _T_899 = shl(io.pmp[1].addr, 2) @[PMP.scala 46:32]
    node _T_900 = bits(_T_899, 2, 0) @[PMP.scala 110:96]
    node _T_901 = bits(io.addr, 2, 0) @[PMP.scala 110:117]
    node _T_902 = or(_T_901, _T_878) @[PMP.scala 110:134]
    node _T_903 = and(_T_900, _T_902) @[PMP.scala 110:113]
    node _T_905 = neq(_T_903, UInt<1>("h00")) @[PMP.scala 110:146]
    node _T_906 = and(_T_898, _T_905) @[PMP.scala 110:83]
    node _T_907 = or(_T_892, _T_906) @[PMP.scala 111:46]
    node _T_909 = eq(_T_907, UInt<1>("h00")) @[PMP.scala 111:24]
    node _T_910 = bits(io.pmp[1].mask, 2, 0) @[PMP.scala 112:39]
    node _T_911 = not(_T_910) @[PMP.scala 112:34]
    node _T_912 = and(_T_878, _T_911) @[PMP.scala 112:32]
    node _T_914 = eq(_T_912, UInt<1>("h00")) @[PMP.scala 112:57]
    node _T_915 = bits(io.pmp[1].cfg.a, 1, 1) @[PMP.scala 35:20]
    node _T_916 = mux(_T_915, _T_914, _T_909) @[PMP.scala 113:8]
    wire _T_918 : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>}
    _T_918 is invalid
    _T_918 <- io.pmp[1]
    node _T_919 = and(_T_916, io.pmp[1].cfg.r) @[PMP.scala 152:27]
    node _T_920 = or(_T_919, _T_873) @[PMP.scala 152:41]
    _T_918.cfg.r <= _T_920 @[PMP.scala 152:15]
    node _T_921 = and(_T_916, io.pmp[1].cfg.w) @[PMP.scala 153:27]
    node _T_922 = or(_T_921, _T_873) @[PMP.scala 153:41]
    _T_918.cfg.w <= _T_922 @[PMP.scala 153:15]
    node _T_923 = and(_T_916, io.pmp[1].cfg.x) @[PMP.scala 154:27]
    node _T_924 = or(_T_923, _T_873) @[PMP.scala 154:41]
    _T_918.cfg.x <= _T_924 @[PMP.scala 154:15]
    node _T_925 = mux(_T_870, _T_918, _T_798) @[PMP.scala 155:8]
    node _T_926 = bits(io.pmp[0].cfg.a, 1, 1) @[PMP.scala 35:20]
    node _T_928 = asUInt(asSInt(UInt<3>("h07"))) @[package.scala 82:70]
    node _T_929 = dshl(_T_928, io.size) @[package.scala 82:77]
    node _T_930 = bits(_T_929, 2, 0) @[package.scala 82:82]
    node _T_931 = not(_T_930) @[package.scala 82:46]
    node _T_932 = or(io.pmp[0].mask, _T_931) @[PMP.scala 54:26]
    node _T_933 = shr(io.addr, 3) @[PMP.scala 55:29]
    node _T_934 = shl(io.pmp[0].addr, 2) @[PMP.scala 46:32]
    node _T_935 = shr(_T_934, 3) @[PMP.scala 55:53]
    node _T_936 = shr(io.pmp[0].mask, 3) @[PMP.scala 55:72]
    node _T_937 = xor(_T_933, _T_935) @[PMP.scala 49:47]
    node _T_938 = not(_T_936) @[PMP.scala 49:54]
    node _T_939 = and(_T_937, _T_938) @[PMP.scala 49:52]
    node _T_941 = eq(_T_939, UInt<1>("h00")) @[PMP.scala 49:58]
    node _T_942 = bits(io.addr, 2, 0) @[PMP.scala 56:28]
    node _T_943 = shl(io.pmp[0].addr, 2) @[PMP.scala 46:32]
    node _T_944 = bits(_T_943, 2, 0) @[PMP.scala 56:55]
    node _T_945 = bits(_T_932, 2, 0) @[PMP.scala 56:80]
    node _T_946 = xor(_T_942, _T_944) @[PMP.scala 49:47]
    node _T_947 = not(_T_945) @[PMP.scala 49:54]
    node _T_948 = and(_T_946, _T_947) @[PMP.scala 49:52]
    node _T_950 = eq(_T_948, UInt<1>("h00")) @[PMP.scala 49:58]
    node _T_951 = and(_T_941, _T_950) @[PMP.scala 57:16]
    node _T_952 = bits(io.pmp[0].cfg.a, 0, 0) @[PMP.scala 36:26]
    node _T_954 = asUInt(asSInt(UInt<3>("h07"))) @[package.scala 82:70]
    node _T_955 = dshl(_T_954, io.size) @[package.scala 82:77]
    node _T_956 = bits(_T_955, 2, 0) @[package.scala 82:82]
    node _T_957 = not(_T_956) @[package.scala 82:46]
    node _T_958 = shr(io.addr, 3) @[PMP.scala 66:25]
    node _T_959 = shl(pmp0.addr, 2) @[PMP.scala 46:32]
    node _T_960 = shr(_T_959, 3) @[PMP.scala 66:52]
    node _T_961 = lt(_T_958, _T_960) @[PMP.scala 66:39]
    node _T_962 = shr(io.addr, 3) @[PMP.scala 67:27]
    node _T_963 = shl(pmp0.addr, 2) @[PMP.scala 46:32]
    node _T_964 = shr(_T_963, 3) @[PMP.scala 67:54]
    node _T_965 = xor(_T_962, _T_964) @[PMP.scala 67:41]
    node _T_967 = eq(_T_965, UInt<1>("h00")) @[PMP.scala 67:69]
    node _T_968 = bits(io.addr, 2, 0) @[PMP.scala 68:25]
    node _T_969 = or(_T_968, _T_957) @[PMP.scala 68:42]
    node _T_970 = shl(pmp0.addr, 2) @[PMP.scala 46:32]
    node _T_971 = bits(_T_970, 2, 0) @[PMP.scala 68:64]
    node _T_972 = lt(_T_969, _T_971) @[PMP.scala 68:53]
    node _T_973 = and(_T_967, _T_972) @[PMP.scala 69:30]
    node _T_974 = or(_T_961, _T_973) @[PMP.scala 69:16]
    node _T_976 = eq(_T_974, UInt<1>("h00")) @[PMP.scala 74:5]
    node _T_978 = shr(io.addr, 3) @[PMP.scala 66:25]
    node _T_979 = shl(io.pmp[0].addr, 2) @[PMP.scala 46:32]
    node _T_980 = shr(_T_979, 3) @[PMP.scala 66:52]
    node _T_981 = lt(_T_978, _T_980) @[PMP.scala 66:39]
    node _T_982 = shr(io.addr, 3) @[PMP.scala 67:27]
    node _T_983 = shl(io.pmp[0].addr, 2) @[PMP.scala 46:32]
    node _T_984 = shr(_T_983, 3) @[PMP.scala 67:54]
    node _T_985 = xor(_T_982, _T_984) @[PMP.scala 67:41]
    node _T_987 = eq(_T_985, UInt<1>("h00")) @[PMP.scala 67:69]
    node _T_988 = bits(io.addr, 2, 0) @[PMP.scala 68:25]
    node _T_989 = or(_T_988, UInt<1>("h00")) @[PMP.scala 68:42]
    node _T_990 = shl(io.pmp[0].addr, 2) @[PMP.scala 46:32]
    node _T_991 = bits(_T_990, 2, 0) @[PMP.scala 68:64]
    node _T_992 = lt(_T_989, _T_991) @[PMP.scala 68:53]
    node _T_993 = and(_T_987, _T_992) @[PMP.scala 69:30]
    node _T_994 = or(_T_981, _T_993) @[PMP.scala 69:16]
    node _T_995 = and(_T_976, _T_994) @[PMP.scala 80:48]
    node _T_996 = and(_T_952, _T_995) @[PMP.scala 118:61]
    node _T_997 = mux(_T_926, _T_951, _T_996) @[PMP.scala 118:8]
    node _T_999 = eq(io.pmp[0].cfg.l, UInt<1>("h00")) @[PMP.scala 149:29]
    node _T_1000 = and(default, _T_999) @[PMP.scala 149:26]
    node _T_1002 = asUInt(asSInt(UInt<3>("h07"))) @[package.scala 82:70]
    node _T_1003 = dshl(_T_1002, io.size) @[package.scala 82:77]
    node _T_1004 = bits(_T_1003, 2, 0) @[package.scala 82:82]
    node _T_1005 = not(_T_1004) @[package.scala 82:46]
    node _T_1006 = shr(io.addr, 3) @[PMP.scala 109:35]
    node _T_1007 = shl(pmp0.addr, 2) @[PMP.scala 46:32]
    node _T_1008 = shr(_T_1007, 3) @[PMP.scala 109:67]
    node _T_1009 = xor(_T_1006, _T_1008) @[PMP.scala 109:49]
    node _T_1011 = eq(_T_1009, UInt<1>("h00")) @[PMP.scala 109:82]
    node _T_1012 = shl(pmp0.addr, 2) @[PMP.scala 46:32]
    node _T_1013 = bits(_T_1012, 2, 0) @[PMP.scala 109:106]
    node _T_1014 = bits(io.addr, 2, 0) @[PMP.scala 109:127]
    node _T_1015 = not(_T_1014) @[PMP.scala 109:125]
    node _T_1016 = and(_T_1013, _T_1015) @[PMP.scala 109:123]
    node _T_1018 = neq(_T_1016, UInt<1>("h00")) @[PMP.scala 109:145]
    node _T_1019 = and(_T_1011, _T_1018) @[PMP.scala 109:88]
    node _T_1020 = shr(io.addr, 3) @[PMP.scala 110:35]
    node _T_1021 = shl(io.pmp[0].addr, 2) @[PMP.scala 46:32]
    node _T_1022 = shr(_T_1021, 3) @[PMP.scala 110:62]
    node _T_1023 = xor(_T_1020, _T_1022) @[PMP.scala 110:49]
    node _T_1025 = eq(_T_1023, UInt<1>("h00")) @[PMP.scala 110:77]
    node _T_1026 = shl(io.pmp[0].addr, 2) @[PMP.scala 46:32]
    node _T_1027 = bits(_T_1026, 2, 0) @[PMP.scala 110:96]
    node _T_1028 = bits(io.addr, 2, 0) @[PMP.scala 110:117]
    node _T_1029 = or(_T_1028, _T_1005) @[PMP.scala 110:134]
    node _T_1030 = and(_T_1027, _T_1029) @[PMP.scala 110:113]
    node _T_1032 = neq(_T_1030, UInt<1>("h00")) @[PMP.scala 110:146]
    node _T_1033 = and(_T_1025, _T_1032) @[PMP.scala 110:83]
    node _T_1034 = or(_T_1019, _T_1033) @[PMP.scala 111:46]
    node _T_1036 = eq(_T_1034, UInt<1>("h00")) @[PMP.scala 111:24]
    node _T_1037 = bits(io.pmp[0].mask, 2, 0) @[PMP.scala 112:39]
    node _T_1038 = not(_T_1037) @[PMP.scala 112:34]
    node _T_1039 = and(_T_1005, _T_1038) @[PMP.scala 112:32]
    node _T_1041 = eq(_T_1039, UInt<1>("h00")) @[PMP.scala 112:57]
    node _T_1042 = bits(io.pmp[0].cfg.a, 1, 1) @[PMP.scala 35:20]
    node _T_1043 = mux(_T_1042, _T_1041, _T_1036) @[PMP.scala 113:8]
    wire _T_1045 : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>}
    _T_1045 is invalid
    _T_1045 <- io.pmp[0]
    node _T_1046 = and(_T_1043, io.pmp[0].cfg.r) @[PMP.scala 152:27]
    node _T_1047 = or(_T_1046, _T_1000) @[PMP.scala 152:41]
    _T_1045.cfg.r <= _T_1047 @[PMP.scala 152:15]
    node _T_1048 = and(_T_1043, io.pmp[0].cfg.w) @[PMP.scala 153:27]
    node _T_1049 = or(_T_1048, _T_1000) @[PMP.scala 153:41]
    _T_1045.cfg.w <= _T_1049 @[PMP.scala 153:15]
    node _T_1050 = and(_T_1043, io.pmp[0].cfg.x) @[PMP.scala 154:27]
    node _T_1051 = or(_T_1050, _T_1000) @[PMP.scala 154:41]
    _T_1045.cfg.x <= _T_1051 @[PMP.scala 154:15]
    node res = mux(_T_997, _T_1045, _T_925) @[PMP.scala 155:8]
    io.r <= res.cfg.r @[PMP.scala 158:8]
    io.w <= res.cfg.w @[PMP.scala 159:8]
    io.x <= res.cfg.x @[PMP.scala 160:8]
    
  module TLB : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip req : {flip ready : UInt<1>, valid : UInt<1>, bits : {vaddr : UInt<40>, passthrough : UInt<1>, sfence : {valid : UInt<1>, bits : {rs1 : UInt<1>, rs2 : UInt<1>, addr : UInt<39>, asid : UInt<1>}}, size : UInt<2>, cmd : UInt<5>}}, resp : {miss : UInt<1>, paddr : UInt<32>, pf : {ld : UInt<1>, st : UInt<1>, inst : UInt<1>}, ae : {ld : UInt<1>, st : UInt<1>, inst : UInt<1>}, ma : {ld : UInt<1>, st : UInt<1>, inst : UInt<1>}, cacheable : UInt<1>, prefetchable : UInt<1>}, ptw : {req : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<27>}}, flip resp : {valid : UInt<1>, bits : {ae : UInt<1>, pte : {ppn : UInt<54>, reserved_for_software : UInt<2>, d : UInt<1>, a : UInt<1>, g : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>, v : UInt<1>}, level : UInt<2>, homogeneous : UInt<1>}}, flip ptbr : {mode : UInt<4>, asid : UInt<16>, ppn : UInt<44>}, flip status : {debug : UInt<1>, isa : UInt<32>, dprv : UInt<2>, prv : UInt<2>, sd : UInt<1>, zero2 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, sd_rv32 : UInt<1>, zero1 : UInt<8>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, hpp : UInt<2>, spp : UInt<1>, mpie : UInt<1>, hpie : UInt<1>, spie : UInt<1>, upie : UInt<1>, mie : UInt<1>, hie : UInt<1>, sie : UInt<1>, uie : UInt<1>}, flip pmp : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>}[8]}}
    
    clock is invalid
    reset is invalid
    io is invalid
    reg valid : UInt<33>, clock with : (reset => (reset, UInt<33>("h00"))) @[TLB.scala 85:18]
    reg reg_entries : UInt<62>[33], clock @[TLB.scala 86:24]
    wire entries_0 : {ppn : UInt<20>, tag : UInt<27>, level : UInt<2>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>} @[TLB.scala 87:43]
    entries_0 is invalid @[TLB.scala 87:43]
    wire _T_95 : UInt<62>
    _T_95 is invalid
    _T_95 <= reg_entries[0]
    node _T_96 = bits(_T_95, 0, 0) @[TLB.scala 87:43]
    entries_0.c <= _T_96 @[TLB.scala 87:43]
    node _T_97 = bits(_T_95, 1, 1) @[TLB.scala 87:43]
    entries_0.eff <= _T_97 @[TLB.scala 87:43]
    node _T_98 = bits(_T_95, 2, 2) @[TLB.scala 87:43]
    entries_0.paa <= _T_98 @[TLB.scala 87:43]
    node _T_99 = bits(_T_95, 3, 3) @[TLB.scala 87:43]
    entries_0.pal <= _T_99 @[TLB.scala 87:43]
    node _T_100 = bits(_T_95, 4, 4) @[TLB.scala 87:43]
    entries_0.pr <= _T_100 @[TLB.scala 87:43]
    node _T_101 = bits(_T_95, 5, 5) @[TLB.scala 87:43]
    entries_0.px <= _T_101 @[TLB.scala 87:43]
    node _T_102 = bits(_T_95, 6, 6) @[TLB.scala 87:43]
    entries_0.pw <= _T_102 @[TLB.scala 87:43]
    node _T_103 = bits(_T_95, 7, 7) @[TLB.scala 87:43]
    entries_0.sr <= _T_103 @[TLB.scala 87:43]
    node _T_104 = bits(_T_95, 8, 8) @[TLB.scala 87:43]
    entries_0.sx <= _T_104 @[TLB.scala 87:43]
    node _T_105 = bits(_T_95, 9, 9) @[TLB.scala 87:43]
    entries_0.sw <= _T_105 @[TLB.scala 87:43]
    node _T_106 = bits(_T_95, 10, 10) @[TLB.scala 87:43]
    entries_0.ae <= _T_106 @[TLB.scala 87:43]
    node _T_107 = bits(_T_95, 11, 11) @[TLB.scala 87:43]
    entries_0.g <= _T_107 @[TLB.scala 87:43]
    node _T_108 = bits(_T_95, 12, 12) @[TLB.scala 87:43]
    entries_0.u <= _T_108 @[TLB.scala 87:43]
    node _T_109 = bits(_T_95, 14, 13) @[TLB.scala 87:43]
    entries_0.level <= _T_109 @[TLB.scala 87:43]
    node _T_110 = bits(_T_95, 41, 15) @[TLB.scala 87:43]
    entries_0.tag <= _T_110 @[TLB.scala 87:43]
    node _T_111 = bits(_T_95, 61, 42) @[TLB.scala 87:43]
    entries_0.ppn <= _T_111 @[TLB.scala 87:43]
    wire entries_1 : {ppn : UInt<20>, tag : UInt<27>, level : UInt<2>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>} @[TLB.scala 87:43]
    entries_1 is invalid @[TLB.scala 87:43]
    wire _T_115 : UInt<62>
    _T_115 is invalid
    _T_115 <= reg_entries[1]
    node _T_116 = bits(_T_115, 0, 0) @[TLB.scala 87:43]
    entries_1.c <= _T_116 @[TLB.scala 87:43]
    node _T_117 = bits(_T_115, 1, 1) @[TLB.scala 87:43]
    entries_1.eff <= _T_117 @[TLB.scala 87:43]
    node _T_118 = bits(_T_115, 2, 2) @[TLB.scala 87:43]
    entries_1.paa <= _T_118 @[TLB.scala 87:43]
    node _T_119 = bits(_T_115, 3, 3) @[TLB.scala 87:43]
    entries_1.pal <= _T_119 @[TLB.scala 87:43]
    node _T_120 = bits(_T_115, 4, 4) @[TLB.scala 87:43]
    entries_1.pr <= _T_120 @[TLB.scala 87:43]
    node _T_121 = bits(_T_115, 5, 5) @[TLB.scala 87:43]
    entries_1.px <= _T_121 @[TLB.scala 87:43]
    node _T_122 = bits(_T_115, 6, 6) @[TLB.scala 87:43]
    entries_1.pw <= _T_122 @[TLB.scala 87:43]
    node _T_123 = bits(_T_115, 7, 7) @[TLB.scala 87:43]
    entries_1.sr <= _T_123 @[TLB.scala 87:43]
    node _T_124 = bits(_T_115, 8, 8) @[TLB.scala 87:43]
    entries_1.sx <= _T_124 @[TLB.scala 87:43]
    node _T_125 = bits(_T_115, 9, 9) @[TLB.scala 87:43]
    entries_1.sw <= _T_125 @[TLB.scala 87:43]
    node _T_126 = bits(_T_115, 10, 10) @[TLB.scala 87:43]
    entries_1.ae <= _T_126 @[TLB.scala 87:43]
    node _T_127 = bits(_T_115, 11, 11) @[TLB.scala 87:43]
    entries_1.g <= _T_127 @[TLB.scala 87:43]
    node _T_128 = bits(_T_115, 12, 12) @[TLB.scala 87:43]
    entries_1.u <= _T_128 @[TLB.scala 87:43]
    node _T_129 = bits(_T_115, 14, 13) @[TLB.scala 87:43]
    entries_1.level <= _T_129 @[TLB.scala 87:43]
    node _T_130 = bits(_T_115, 41, 15) @[TLB.scala 87:43]
    entries_1.tag <= _T_130 @[TLB.scala 87:43]
    node _T_131 = bits(_T_115, 61, 42) @[TLB.scala 87:43]
    entries_1.ppn <= _T_131 @[TLB.scala 87:43]
    wire entries_2 : {ppn : UInt<20>, tag : UInt<27>, level : UInt<2>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>} @[TLB.scala 87:43]
    entries_2 is invalid @[TLB.scala 87:43]
    wire _T_135 : UInt<62>
    _T_135 is invalid
    _T_135 <= reg_entries[2]
    node _T_136 = bits(_T_135, 0, 0) @[TLB.scala 87:43]
    entries_2.c <= _T_136 @[TLB.scala 87:43]
    node _T_137 = bits(_T_135, 1, 1) @[TLB.scala 87:43]
    entries_2.eff <= _T_137 @[TLB.scala 87:43]
    node _T_138 = bits(_T_135, 2, 2) @[TLB.scala 87:43]
    entries_2.paa <= _T_138 @[TLB.scala 87:43]
    node _T_139 = bits(_T_135, 3, 3) @[TLB.scala 87:43]
    entries_2.pal <= _T_139 @[TLB.scala 87:43]
    node _T_140 = bits(_T_135, 4, 4) @[TLB.scala 87:43]
    entries_2.pr <= _T_140 @[TLB.scala 87:43]
    node _T_141 = bits(_T_135, 5, 5) @[TLB.scala 87:43]
    entries_2.px <= _T_141 @[TLB.scala 87:43]
    node _T_142 = bits(_T_135, 6, 6) @[TLB.scala 87:43]
    entries_2.pw <= _T_142 @[TLB.scala 87:43]
    node _T_143 = bits(_T_135, 7, 7) @[TLB.scala 87:43]
    entries_2.sr <= _T_143 @[TLB.scala 87:43]
    node _T_144 = bits(_T_135, 8, 8) @[TLB.scala 87:43]
    entries_2.sx <= _T_144 @[TLB.scala 87:43]
    node _T_145 = bits(_T_135, 9, 9) @[TLB.scala 87:43]
    entries_2.sw <= _T_145 @[TLB.scala 87:43]
    node _T_146 = bits(_T_135, 10, 10) @[TLB.scala 87:43]
    entries_2.ae <= _T_146 @[TLB.scala 87:43]
    node _T_147 = bits(_T_135, 11, 11) @[TLB.scala 87:43]
    entries_2.g <= _T_147 @[TLB.scala 87:43]
    node _T_148 = bits(_T_135, 12, 12) @[TLB.scala 87:43]
    entries_2.u <= _T_148 @[TLB.scala 87:43]
    node _T_149 = bits(_T_135, 14, 13) @[TLB.scala 87:43]
    entries_2.level <= _T_149 @[TLB.scala 87:43]
    node _T_150 = bits(_T_135, 41, 15) @[TLB.scala 87:43]
    entries_2.tag <= _T_150 @[TLB.scala 87:43]
    node _T_151 = bits(_T_135, 61, 42) @[TLB.scala 87:43]
    entries_2.ppn <= _T_151 @[TLB.scala 87:43]
    wire entries_3 : {ppn : UInt<20>, tag : UInt<27>, level : UInt<2>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>} @[TLB.scala 87:43]
    entries_3 is invalid @[TLB.scala 87:43]
    wire _T_155 : UInt<62>
    _T_155 is invalid
    _T_155 <= reg_entries[3]
    node _T_156 = bits(_T_155, 0, 0) @[TLB.scala 87:43]
    entries_3.c <= _T_156 @[TLB.scala 87:43]
    node _T_157 = bits(_T_155, 1, 1) @[TLB.scala 87:43]
    entries_3.eff <= _T_157 @[TLB.scala 87:43]
    node _T_158 = bits(_T_155, 2, 2) @[TLB.scala 87:43]
    entries_3.paa <= _T_158 @[TLB.scala 87:43]
    node _T_159 = bits(_T_155, 3, 3) @[TLB.scala 87:43]
    entries_3.pal <= _T_159 @[TLB.scala 87:43]
    node _T_160 = bits(_T_155, 4, 4) @[TLB.scala 87:43]
    entries_3.pr <= _T_160 @[TLB.scala 87:43]
    node _T_161 = bits(_T_155, 5, 5) @[TLB.scala 87:43]
    entries_3.px <= _T_161 @[TLB.scala 87:43]
    node _T_162 = bits(_T_155, 6, 6) @[TLB.scala 87:43]
    entries_3.pw <= _T_162 @[TLB.scala 87:43]
    node _T_163 = bits(_T_155, 7, 7) @[TLB.scala 87:43]
    entries_3.sr <= _T_163 @[TLB.scala 87:43]
    node _T_164 = bits(_T_155, 8, 8) @[TLB.scala 87:43]
    entries_3.sx <= _T_164 @[TLB.scala 87:43]
    node _T_165 = bits(_T_155, 9, 9) @[TLB.scala 87:43]
    entries_3.sw <= _T_165 @[TLB.scala 87:43]
    node _T_166 = bits(_T_155, 10, 10) @[TLB.scala 87:43]
    entries_3.ae <= _T_166 @[TLB.scala 87:43]
    node _T_167 = bits(_T_155, 11, 11) @[TLB.scala 87:43]
    entries_3.g <= _T_167 @[TLB.scala 87:43]
    node _T_168 = bits(_T_155, 12, 12) @[TLB.scala 87:43]
    entries_3.u <= _T_168 @[TLB.scala 87:43]
    node _T_169 = bits(_T_155, 14, 13) @[TLB.scala 87:43]
    entries_3.level <= _T_169 @[TLB.scala 87:43]
    node _T_170 = bits(_T_155, 41, 15) @[TLB.scala 87:43]
    entries_3.tag <= _T_170 @[TLB.scala 87:43]
    node _T_171 = bits(_T_155, 61, 42) @[TLB.scala 87:43]
    entries_3.ppn <= _T_171 @[TLB.scala 87:43]
    wire entries_4 : {ppn : UInt<20>, tag : UInt<27>, level : UInt<2>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>} @[TLB.scala 87:43]
    entries_4 is invalid @[TLB.scala 87:43]
    wire _T_175 : UInt<62>
    _T_175 is invalid
    _T_175 <= reg_entries[4]
    node _T_176 = bits(_T_175, 0, 0) @[TLB.scala 87:43]
    entries_4.c <= _T_176 @[TLB.scala 87:43]
    node _T_177 = bits(_T_175, 1, 1) @[TLB.scala 87:43]
    entries_4.eff <= _T_177 @[TLB.scala 87:43]
    node _T_178 = bits(_T_175, 2, 2) @[TLB.scala 87:43]
    entries_4.paa <= _T_178 @[TLB.scala 87:43]
    node _T_179 = bits(_T_175, 3, 3) @[TLB.scala 87:43]
    entries_4.pal <= _T_179 @[TLB.scala 87:43]
    node _T_180 = bits(_T_175, 4, 4) @[TLB.scala 87:43]
    entries_4.pr <= _T_180 @[TLB.scala 87:43]
    node _T_181 = bits(_T_175, 5, 5) @[TLB.scala 87:43]
    entries_4.px <= _T_181 @[TLB.scala 87:43]
    node _T_182 = bits(_T_175, 6, 6) @[TLB.scala 87:43]
    entries_4.pw <= _T_182 @[TLB.scala 87:43]
    node _T_183 = bits(_T_175, 7, 7) @[TLB.scala 87:43]
    entries_4.sr <= _T_183 @[TLB.scala 87:43]
    node _T_184 = bits(_T_175, 8, 8) @[TLB.scala 87:43]
    entries_4.sx <= _T_184 @[TLB.scala 87:43]
    node _T_185 = bits(_T_175, 9, 9) @[TLB.scala 87:43]
    entries_4.sw <= _T_185 @[TLB.scala 87:43]
    node _T_186 = bits(_T_175, 10, 10) @[TLB.scala 87:43]
    entries_4.ae <= _T_186 @[TLB.scala 87:43]
    node _T_187 = bits(_T_175, 11, 11) @[TLB.scala 87:43]
    entries_4.g <= _T_187 @[TLB.scala 87:43]
    node _T_188 = bits(_T_175, 12, 12) @[TLB.scala 87:43]
    entries_4.u <= _T_188 @[TLB.scala 87:43]
    node _T_189 = bits(_T_175, 14, 13) @[TLB.scala 87:43]
    entries_4.level <= _T_189 @[TLB.scala 87:43]
    node _T_190 = bits(_T_175, 41, 15) @[TLB.scala 87:43]
    entries_4.tag <= _T_190 @[TLB.scala 87:43]
    node _T_191 = bits(_T_175, 61, 42) @[TLB.scala 87:43]
    entries_4.ppn <= _T_191 @[TLB.scala 87:43]
    wire entries_5 : {ppn : UInt<20>, tag : UInt<27>, level : UInt<2>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>} @[TLB.scala 87:43]
    entries_5 is invalid @[TLB.scala 87:43]
    wire _T_195 : UInt<62>
    _T_195 is invalid
    _T_195 <= reg_entries[5]
    node _T_196 = bits(_T_195, 0, 0) @[TLB.scala 87:43]
    entries_5.c <= _T_196 @[TLB.scala 87:43]
    node _T_197 = bits(_T_195, 1, 1) @[TLB.scala 87:43]
    entries_5.eff <= _T_197 @[TLB.scala 87:43]
    node _T_198 = bits(_T_195, 2, 2) @[TLB.scala 87:43]
    entries_5.paa <= _T_198 @[TLB.scala 87:43]
    node _T_199 = bits(_T_195, 3, 3) @[TLB.scala 87:43]
    entries_5.pal <= _T_199 @[TLB.scala 87:43]
    node _T_200 = bits(_T_195, 4, 4) @[TLB.scala 87:43]
    entries_5.pr <= _T_200 @[TLB.scala 87:43]
    node _T_201 = bits(_T_195, 5, 5) @[TLB.scala 87:43]
    entries_5.px <= _T_201 @[TLB.scala 87:43]
    node _T_202 = bits(_T_195, 6, 6) @[TLB.scala 87:43]
    entries_5.pw <= _T_202 @[TLB.scala 87:43]
    node _T_203 = bits(_T_195, 7, 7) @[TLB.scala 87:43]
    entries_5.sr <= _T_203 @[TLB.scala 87:43]
    node _T_204 = bits(_T_195, 8, 8) @[TLB.scala 87:43]
    entries_5.sx <= _T_204 @[TLB.scala 87:43]
    node _T_205 = bits(_T_195, 9, 9) @[TLB.scala 87:43]
    entries_5.sw <= _T_205 @[TLB.scala 87:43]
    node _T_206 = bits(_T_195, 10, 10) @[TLB.scala 87:43]
    entries_5.ae <= _T_206 @[TLB.scala 87:43]
    node _T_207 = bits(_T_195, 11, 11) @[TLB.scala 87:43]
    entries_5.g <= _T_207 @[TLB.scala 87:43]
    node _T_208 = bits(_T_195, 12, 12) @[TLB.scala 87:43]
    entries_5.u <= _T_208 @[TLB.scala 87:43]
    node _T_209 = bits(_T_195, 14, 13) @[TLB.scala 87:43]
    entries_5.level <= _T_209 @[TLB.scala 87:43]
    node _T_210 = bits(_T_195, 41, 15) @[TLB.scala 87:43]
    entries_5.tag <= _T_210 @[TLB.scala 87:43]
    node _T_211 = bits(_T_195, 61, 42) @[TLB.scala 87:43]
    entries_5.ppn <= _T_211 @[TLB.scala 87:43]
    wire entries_6 : {ppn : UInt<20>, tag : UInt<27>, level : UInt<2>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>} @[TLB.scala 87:43]
    entries_6 is invalid @[TLB.scala 87:43]
    wire _T_215 : UInt<62>
    _T_215 is invalid
    _T_215 <= reg_entries[6]
    node _T_216 = bits(_T_215, 0, 0) @[TLB.scala 87:43]
    entries_6.c <= _T_216 @[TLB.scala 87:43]
    node _T_217 = bits(_T_215, 1, 1) @[TLB.scala 87:43]
    entries_6.eff <= _T_217 @[TLB.scala 87:43]
    node _T_218 = bits(_T_215, 2, 2) @[TLB.scala 87:43]
    entries_6.paa <= _T_218 @[TLB.scala 87:43]
    node _T_219 = bits(_T_215, 3, 3) @[TLB.scala 87:43]
    entries_6.pal <= _T_219 @[TLB.scala 87:43]
    node _T_220 = bits(_T_215, 4, 4) @[TLB.scala 87:43]
    entries_6.pr <= _T_220 @[TLB.scala 87:43]
    node _T_221 = bits(_T_215, 5, 5) @[TLB.scala 87:43]
    entries_6.px <= _T_221 @[TLB.scala 87:43]
    node _T_222 = bits(_T_215, 6, 6) @[TLB.scala 87:43]
    entries_6.pw <= _T_222 @[TLB.scala 87:43]
    node _T_223 = bits(_T_215, 7, 7) @[TLB.scala 87:43]
    entries_6.sr <= _T_223 @[TLB.scala 87:43]
    node _T_224 = bits(_T_215, 8, 8) @[TLB.scala 87:43]
    entries_6.sx <= _T_224 @[TLB.scala 87:43]
    node _T_225 = bits(_T_215, 9, 9) @[TLB.scala 87:43]
    entries_6.sw <= _T_225 @[TLB.scala 87:43]
    node _T_226 = bits(_T_215, 10, 10) @[TLB.scala 87:43]
    entries_6.ae <= _T_226 @[TLB.scala 87:43]
    node _T_227 = bits(_T_215, 11, 11) @[TLB.scala 87:43]
    entries_6.g <= _T_227 @[TLB.scala 87:43]
    node _T_228 = bits(_T_215, 12, 12) @[TLB.scala 87:43]
    entries_6.u <= _T_228 @[TLB.scala 87:43]
    node _T_229 = bits(_T_215, 14, 13) @[TLB.scala 87:43]
    entries_6.level <= _T_229 @[TLB.scala 87:43]
    node _T_230 = bits(_T_215, 41, 15) @[TLB.scala 87:43]
    entries_6.tag <= _T_230 @[TLB.scala 87:43]
    node _T_231 = bits(_T_215, 61, 42) @[TLB.scala 87:43]
    entries_6.ppn <= _T_231 @[TLB.scala 87:43]
    wire entries_7 : {ppn : UInt<20>, tag : UInt<27>, level : UInt<2>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>} @[TLB.scala 87:43]
    entries_7 is invalid @[TLB.scala 87:43]
    wire _T_235 : UInt<62>
    _T_235 is invalid
    _T_235 <= reg_entries[7]
    node _T_236 = bits(_T_235, 0, 0) @[TLB.scala 87:43]
    entries_7.c <= _T_236 @[TLB.scala 87:43]
    node _T_237 = bits(_T_235, 1, 1) @[TLB.scala 87:43]
    entries_7.eff <= _T_237 @[TLB.scala 87:43]
    node _T_238 = bits(_T_235, 2, 2) @[TLB.scala 87:43]
    entries_7.paa <= _T_238 @[TLB.scala 87:43]
    node _T_239 = bits(_T_235, 3, 3) @[TLB.scala 87:43]
    entries_7.pal <= _T_239 @[TLB.scala 87:43]
    node _T_240 = bits(_T_235, 4, 4) @[TLB.scala 87:43]
    entries_7.pr <= _T_240 @[TLB.scala 87:43]
    node _T_241 = bits(_T_235, 5, 5) @[TLB.scala 87:43]
    entries_7.px <= _T_241 @[TLB.scala 87:43]
    node _T_242 = bits(_T_235, 6, 6) @[TLB.scala 87:43]
    entries_7.pw <= _T_242 @[TLB.scala 87:43]
    node _T_243 = bits(_T_235, 7, 7) @[TLB.scala 87:43]
    entries_7.sr <= _T_243 @[TLB.scala 87:43]
    node _T_244 = bits(_T_235, 8, 8) @[TLB.scala 87:43]
    entries_7.sx <= _T_244 @[TLB.scala 87:43]
    node _T_245 = bits(_T_235, 9, 9) @[TLB.scala 87:43]
    entries_7.sw <= _T_245 @[TLB.scala 87:43]
    node _T_246 = bits(_T_235, 10, 10) @[TLB.scala 87:43]
    entries_7.ae <= _T_246 @[TLB.scala 87:43]
    node _T_247 = bits(_T_235, 11, 11) @[TLB.scala 87:43]
    entries_7.g <= _T_247 @[TLB.scala 87:43]
    node _T_248 = bits(_T_235, 12, 12) @[TLB.scala 87:43]
    entries_7.u <= _T_248 @[TLB.scala 87:43]
    node _T_249 = bits(_T_235, 14, 13) @[TLB.scala 87:43]
    entries_7.level <= _T_249 @[TLB.scala 87:43]
    node _T_250 = bits(_T_235, 41, 15) @[TLB.scala 87:43]
    entries_7.tag <= _T_250 @[TLB.scala 87:43]
    node _T_251 = bits(_T_235, 61, 42) @[TLB.scala 87:43]
    entries_7.ppn <= _T_251 @[TLB.scala 87:43]
    wire entries_8 : {ppn : UInt<20>, tag : UInt<27>, level : UInt<2>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>} @[TLB.scala 87:43]
    entries_8 is invalid @[TLB.scala 87:43]
    wire _T_255 : UInt<62>
    _T_255 is invalid
    _T_255 <= reg_entries[8]
    node _T_256 = bits(_T_255, 0, 0) @[TLB.scala 87:43]
    entries_8.c <= _T_256 @[TLB.scala 87:43]
    node _T_257 = bits(_T_255, 1, 1) @[TLB.scala 87:43]
    entries_8.eff <= _T_257 @[TLB.scala 87:43]
    node _T_258 = bits(_T_255, 2, 2) @[TLB.scala 87:43]
    entries_8.paa <= _T_258 @[TLB.scala 87:43]
    node _T_259 = bits(_T_255, 3, 3) @[TLB.scala 87:43]
    entries_8.pal <= _T_259 @[TLB.scala 87:43]
    node _T_260 = bits(_T_255, 4, 4) @[TLB.scala 87:43]
    entries_8.pr <= _T_260 @[TLB.scala 87:43]
    node _T_261 = bits(_T_255, 5, 5) @[TLB.scala 87:43]
    entries_8.px <= _T_261 @[TLB.scala 87:43]
    node _T_262 = bits(_T_255, 6, 6) @[TLB.scala 87:43]
    entries_8.pw <= _T_262 @[TLB.scala 87:43]
    node _T_263 = bits(_T_255, 7, 7) @[TLB.scala 87:43]
    entries_8.sr <= _T_263 @[TLB.scala 87:43]
    node _T_264 = bits(_T_255, 8, 8) @[TLB.scala 87:43]
    entries_8.sx <= _T_264 @[TLB.scala 87:43]
    node _T_265 = bits(_T_255, 9, 9) @[TLB.scala 87:43]
    entries_8.sw <= _T_265 @[TLB.scala 87:43]
    node _T_266 = bits(_T_255, 10, 10) @[TLB.scala 87:43]
    entries_8.ae <= _T_266 @[TLB.scala 87:43]
    node _T_267 = bits(_T_255, 11, 11) @[TLB.scala 87:43]
    entries_8.g <= _T_267 @[TLB.scala 87:43]
    node _T_268 = bits(_T_255, 12, 12) @[TLB.scala 87:43]
    entries_8.u <= _T_268 @[TLB.scala 87:43]
    node _T_269 = bits(_T_255, 14, 13) @[TLB.scala 87:43]
    entries_8.level <= _T_269 @[TLB.scala 87:43]
    node _T_270 = bits(_T_255, 41, 15) @[TLB.scala 87:43]
    entries_8.tag <= _T_270 @[TLB.scala 87:43]
    node _T_271 = bits(_T_255, 61, 42) @[TLB.scala 87:43]
    entries_8.ppn <= _T_271 @[TLB.scala 87:43]
    wire entries_9 : {ppn : UInt<20>, tag : UInt<27>, level : UInt<2>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>} @[TLB.scala 87:43]
    entries_9 is invalid @[TLB.scala 87:43]
    wire _T_275 : UInt<62>
    _T_275 is invalid
    _T_275 <= reg_entries[9]
    node _T_276 = bits(_T_275, 0, 0) @[TLB.scala 87:43]
    entries_9.c <= _T_276 @[TLB.scala 87:43]
    node _T_277 = bits(_T_275, 1, 1) @[TLB.scala 87:43]
    entries_9.eff <= _T_277 @[TLB.scala 87:43]
    node _T_278 = bits(_T_275, 2, 2) @[TLB.scala 87:43]
    entries_9.paa <= _T_278 @[TLB.scala 87:43]
    node _T_279 = bits(_T_275, 3, 3) @[TLB.scala 87:43]
    entries_9.pal <= _T_279 @[TLB.scala 87:43]
    node _T_280 = bits(_T_275, 4, 4) @[TLB.scala 87:43]
    entries_9.pr <= _T_280 @[TLB.scala 87:43]
    node _T_281 = bits(_T_275, 5, 5) @[TLB.scala 87:43]
    entries_9.px <= _T_281 @[TLB.scala 87:43]
    node _T_282 = bits(_T_275, 6, 6) @[TLB.scala 87:43]
    entries_9.pw <= _T_282 @[TLB.scala 87:43]
    node _T_283 = bits(_T_275, 7, 7) @[TLB.scala 87:43]
    entries_9.sr <= _T_283 @[TLB.scala 87:43]
    node _T_284 = bits(_T_275, 8, 8) @[TLB.scala 87:43]
    entries_9.sx <= _T_284 @[TLB.scala 87:43]
    node _T_285 = bits(_T_275, 9, 9) @[TLB.scala 87:43]
    entries_9.sw <= _T_285 @[TLB.scala 87:43]
    node _T_286 = bits(_T_275, 10, 10) @[TLB.scala 87:43]
    entries_9.ae <= _T_286 @[TLB.scala 87:43]
    node _T_287 = bits(_T_275, 11, 11) @[TLB.scala 87:43]
    entries_9.g <= _T_287 @[TLB.scala 87:43]
    node _T_288 = bits(_T_275, 12, 12) @[TLB.scala 87:43]
    entries_9.u <= _T_288 @[TLB.scala 87:43]
    node _T_289 = bits(_T_275, 14, 13) @[TLB.scala 87:43]
    entries_9.level <= _T_289 @[TLB.scala 87:43]
    node _T_290 = bits(_T_275, 41, 15) @[TLB.scala 87:43]
    entries_9.tag <= _T_290 @[TLB.scala 87:43]
    node _T_291 = bits(_T_275, 61, 42) @[TLB.scala 87:43]
    entries_9.ppn <= _T_291 @[TLB.scala 87:43]
    wire entries_10 : {ppn : UInt<20>, tag : UInt<27>, level : UInt<2>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>} @[TLB.scala 87:43]
    entries_10 is invalid @[TLB.scala 87:43]
    wire _T_295 : UInt<62>
    _T_295 is invalid
    _T_295 <= reg_entries[10]
    node _T_296 = bits(_T_295, 0, 0) @[TLB.scala 87:43]
    entries_10.c <= _T_296 @[TLB.scala 87:43]
    node _T_297 = bits(_T_295, 1, 1) @[TLB.scala 87:43]
    entries_10.eff <= _T_297 @[TLB.scala 87:43]
    node _T_298 = bits(_T_295, 2, 2) @[TLB.scala 87:43]
    entries_10.paa <= _T_298 @[TLB.scala 87:43]
    node _T_299 = bits(_T_295, 3, 3) @[TLB.scala 87:43]
    entries_10.pal <= _T_299 @[TLB.scala 87:43]
    node _T_300 = bits(_T_295, 4, 4) @[TLB.scala 87:43]
    entries_10.pr <= _T_300 @[TLB.scala 87:43]
    node _T_301 = bits(_T_295, 5, 5) @[TLB.scala 87:43]
    entries_10.px <= _T_301 @[TLB.scala 87:43]
    node _T_302 = bits(_T_295, 6, 6) @[TLB.scala 87:43]
    entries_10.pw <= _T_302 @[TLB.scala 87:43]
    node _T_303 = bits(_T_295, 7, 7) @[TLB.scala 87:43]
    entries_10.sr <= _T_303 @[TLB.scala 87:43]
    node _T_304 = bits(_T_295, 8, 8) @[TLB.scala 87:43]
    entries_10.sx <= _T_304 @[TLB.scala 87:43]
    node _T_305 = bits(_T_295, 9, 9) @[TLB.scala 87:43]
    entries_10.sw <= _T_305 @[TLB.scala 87:43]
    node _T_306 = bits(_T_295, 10, 10) @[TLB.scala 87:43]
    entries_10.ae <= _T_306 @[TLB.scala 87:43]
    node _T_307 = bits(_T_295, 11, 11) @[TLB.scala 87:43]
    entries_10.g <= _T_307 @[TLB.scala 87:43]
    node _T_308 = bits(_T_295, 12, 12) @[TLB.scala 87:43]
    entries_10.u <= _T_308 @[TLB.scala 87:43]
    node _T_309 = bits(_T_295, 14, 13) @[TLB.scala 87:43]
    entries_10.level <= _T_309 @[TLB.scala 87:43]
    node _T_310 = bits(_T_295, 41, 15) @[TLB.scala 87:43]
    entries_10.tag <= _T_310 @[TLB.scala 87:43]
    node _T_311 = bits(_T_295, 61, 42) @[TLB.scala 87:43]
    entries_10.ppn <= _T_311 @[TLB.scala 87:43]
    wire entries_11 : {ppn : UInt<20>, tag : UInt<27>, level : UInt<2>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>} @[TLB.scala 87:43]
    entries_11 is invalid @[TLB.scala 87:43]
    wire _T_315 : UInt<62>
    _T_315 is invalid
    _T_315 <= reg_entries[11]
    node _T_316 = bits(_T_315, 0, 0) @[TLB.scala 87:43]
    entries_11.c <= _T_316 @[TLB.scala 87:43]
    node _T_317 = bits(_T_315, 1, 1) @[TLB.scala 87:43]
    entries_11.eff <= _T_317 @[TLB.scala 87:43]
    node _T_318 = bits(_T_315, 2, 2) @[TLB.scala 87:43]
    entries_11.paa <= _T_318 @[TLB.scala 87:43]
    node _T_319 = bits(_T_315, 3, 3) @[TLB.scala 87:43]
    entries_11.pal <= _T_319 @[TLB.scala 87:43]
    node _T_320 = bits(_T_315, 4, 4) @[TLB.scala 87:43]
    entries_11.pr <= _T_320 @[TLB.scala 87:43]
    node _T_321 = bits(_T_315, 5, 5) @[TLB.scala 87:43]
    entries_11.px <= _T_321 @[TLB.scala 87:43]
    node _T_322 = bits(_T_315, 6, 6) @[TLB.scala 87:43]
    entries_11.pw <= _T_322 @[TLB.scala 87:43]
    node _T_323 = bits(_T_315, 7, 7) @[TLB.scala 87:43]
    entries_11.sr <= _T_323 @[TLB.scala 87:43]
    node _T_324 = bits(_T_315, 8, 8) @[TLB.scala 87:43]
    entries_11.sx <= _T_324 @[TLB.scala 87:43]
    node _T_325 = bits(_T_315, 9, 9) @[TLB.scala 87:43]
    entries_11.sw <= _T_325 @[TLB.scala 87:43]
    node _T_326 = bits(_T_315, 10, 10) @[TLB.scala 87:43]
    entries_11.ae <= _T_326 @[TLB.scala 87:43]
    node _T_327 = bits(_T_315, 11, 11) @[TLB.scala 87:43]
    entries_11.g <= _T_327 @[TLB.scala 87:43]
    node _T_328 = bits(_T_315, 12, 12) @[TLB.scala 87:43]
    entries_11.u <= _T_328 @[TLB.scala 87:43]
    node _T_329 = bits(_T_315, 14, 13) @[TLB.scala 87:43]
    entries_11.level <= _T_329 @[TLB.scala 87:43]
    node _T_330 = bits(_T_315, 41, 15) @[TLB.scala 87:43]
    entries_11.tag <= _T_330 @[TLB.scala 87:43]
    node _T_331 = bits(_T_315, 61, 42) @[TLB.scala 87:43]
    entries_11.ppn <= _T_331 @[TLB.scala 87:43]
    wire entries_12 : {ppn : UInt<20>, tag : UInt<27>, level : UInt<2>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>} @[TLB.scala 87:43]
    entries_12 is invalid @[TLB.scala 87:43]
    wire _T_335 : UInt<62>
    _T_335 is invalid
    _T_335 <= reg_entries[12]
    node _T_336 = bits(_T_335, 0, 0) @[TLB.scala 87:43]
    entries_12.c <= _T_336 @[TLB.scala 87:43]
    node _T_337 = bits(_T_335, 1, 1) @[TLB.scala 87:43]
    entries_12.eff <= _T_337 @[TLB.scala 87:43]
    node _T_338 = bits(_T_335, 2, 2) @[TLB.scala 87:43]
    entries_12.paa <= _T_338 @[TLB.scala 87:43]
    node _T_339 = bits(_T_335, 3, 3) @[TLB.scala 87:43]
    entries_12.pal <= _T_339 @[TLB.scala 87:43]
    node _T_340 = bits(_T_335, 4, 4) @[TLB.scala 87:43]
    entries_12.pr <= _T_340 @[TLB.scala 87:43]
    node _T_341 = bits(_T_335, 5, 5) @[TLB.scala 87:43]
    entries_12.px <= _T_341 @[TLB.scala 87:43]
    node _T_342 = bits(_T_335, 6, 6) @[TLB.scala 87:43]
    entries_12.pw <= _T_342 @[TLB.scala 87:43]
    node _T_343 = bits(_T_335, 7, 7) @[TLB.scala 87:43]
    entries_12.sr <= _T_343 @[TLB.scala 87:43]
    node _T_344 = bits(_T_335, 8, 8) @[TLB.scala 87:43]
    entries_12.sx <= _T_344 @[TLB.scala 87:43]
    node _T_345 = bits(_T_335, 9, 9) @[TLB.scala 87:43]
    entries_12.sw <= _T_345 @[TLB.scala 87:43]
    node _T_346 = bits(_T_335, 10, 10) @[TLB.scala 87:43]
    entries_12.ae <= _T_346 @[TLB.scala 87:43]
    node _T_347 = bits(_T_335, 11, 11) @[TLB.scala 87:43]
    entries_12.g <= _T_347 @[TLB.scala 87:43]
    node _T_348 = bits(_T_335, 12, 12) @[TLB.scala 87:43]
    entries_12.u <= _T_348 @[TLB.scala 87:43]
    node _T_349 = bits(_T_335, 14, 13) @[TLB.scala 87:43]
    entries_12.level <= _T_349 @[TLB.scala 87:43]
    node _T_350 = bits(_T_335, 41, 15) @[TLB.scala 87:43]
    entries_12.tag <= _T_350 @[TLB.scala 87:43]
    node _T_351 = bits(_T_335, 61, 42) @[TLB.scala 87:43]
    entries_12.ppn <= _T_351 @[TLB.scala 87:43]
    wire entries_13 : {ppn : UInt<20>, tag : UInt<27>, level : UInt<2>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>} @[TLB.scala 87:43]
    entries_13 is invalid @[TLB.scala 87:43]
    wire _T_355 : UInt<62>
    _T_355 is invalid
    _T_355 <= reg_entries[13]
    node _T_356 = bits(_T_355, 0, 0) @[TLB.scala 87:43]
    entries_13.c <= _T_356 @[TLB.scala 87:43]
    node _T_357 = bits(_T_355, 1, 1) @[TLB.scala 87:43]
    entries_13.eff <= _T_357 @[TLB.scala 87:43]
    node _T_358 = bits(_T_355, 2, 2) @[TLB.scala 87:43]
    entries_13.paa <= _T_358 @[TLB.scala 87:43]
    node _T_359 = bits(_T_355, 3, 3) @[TLB.scala 87:43]
    entries_13.pal <= _T_359 @[TLB.scala 87:43]
    node _T_360 = bits(_T_355, 4, 4) @[TLB.scala 87:43]
    entries_13.pr <= _T_360 @[TLB.scala 87:43]
    node _T_361 = bits(_T_355, 5, 5) @[TLB.scala 87:43]
    entries_13.px <= _T_361 @[TLB.scala 87:43]
    node _T_362 = bits(_T_355, 6, 6) @[TLB.scala 87:43]
    entries_13.pw <= _T_362 @[TLB.scala 87:43]
    node _T_363 = bits(_T_355, 7, 7) @[TLB.scala 87:43]
    entries_13.sr <= _T_363 @[TLB.scala 87:43]
    node _T_364 = bits(_T_355, 8, 8) @[TLB.scala 87:43]
    entries_13.sx <= _T_364 @[TLB.scala 87:43]
    node _T_365 = bits(_T_355, 9, 9) @[TLB.scala 87:43]
    entries_13.sw <= _T_365 @[TLB.scala 87:43]
    node _T_366 = bits(_T_355, 10, 10) @[TLB.scala 87:43]
    entries_13.ae <= _T_366 @[TLB.scala 87:43]
    node _T_367 = bits(_T_355, 11, 11) @[TLB.scala 87:43]
    entries_13.g <= _T_367 @[TLB.scala 87:43]
    node _T_368 = bits(_T_355, 12, 12) @[TLB.scala 87:43]
    entries_13.u <= _T_368 @[TLB.scala 87:43]
    node _T_369 = bits(_T_355, 14, 13) @[TLB.scala 87:43]
    entries_13.level <= _T_369 @[TLB.scala 87:43]
    node _T_370 = bits(_T_355, 41, 15) @[TLB.scala 87:43]
    entries_13.tag <= _T_370 @[TLB.scala 87:43]
    node _T_371 = bits(_T_355, 61, 42) @[TLB.scala 87:43]
    entries_13.ppn <= _T_371 @[TLB.scala 87:43]
    wire entries_14 : {ppn : UInt<20>, tag : UInt<27>, level : UInt<2>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>} @[TLB.scala 87:43]
    entries_14 is invalid @[TLB.scala 87:43]
    wire _T_375 : UInt<62>
    _T_375 is invalid
    _T_375 <= reg_entries[14]
    node _T_376 = bits(_T_375, 0, 0) @[TLB.scala 87:43]
    entries_14.c <= _T_376 @[TLB.scala 87:43]
    node _T_377 = bits(_T_375, 1, 1) @[TLB.scala 87:43]
    entries_14.eff <= _T_377 @[TLB.scala 87:43]
    node _T_378 = bits(_T_375, 2, 2) @[TLB.scala 87:43]
    entries_14.paa <= _T_378 @[TLB.scala 87:43]
    node _T_379 = bits(_T_375, 3, 3) @[TLB.scala 87:43]
    entries_14.pal <= _T_379 @[TLB.scala 87:43]
    node _T_380 = bits(_T_375, 4, 4) @[TLB.scala 87:43]
    entries_14.pr <= _T_380 @[TLB.scala 87:43]
    node _T_381 = bits(_T_375, 5, 5) @[TLB.scala 87:43]
    entries_14.px <= _T_381 @[TLB.scala 87:43]
    node _T_382 = bits(_T_375, 6, 6) @[TLB.scala 87:43]
    entries_14.pw <= _T_382 @[TLB.scala 87:43]
    node _T_383 = bits(_T_375, 7, 7) @[TLB.scala 87:43]
    entries_14.sr <= _T_383 @[TLB.scala 87:43]
    node _T_384 = bits(_T_375, 8, 8) @[TLB.scala 87:43]
    entries_14.sx <= _T_384 @[TLB.scala 87:43]
    node _T_385 = bits(_T_375, 9, 9) @[TLB.scala 87:43]
    entries_14.sw <= _T_385 @[TLB.scala 87:43]
    node _T_386 = bits(_T_375, 10, 10) @[TLB.scala 87:43]
    entries_14.ae <= _T_386 @[TLB.scala 87:43]
    node _T_387 = bits(_T_375, 11, 11) @[TLB.scala 87:43]
    entries_14.g <= _T_387 @[TLB.scala 87:43]
    node _T_388 = bits(_T_375, 12, 12) @[TLB.scala 87:43]
    entries_14.u <= _T_388 @[TLB.scala 87:43]
    node _T_389 = bits(_T_375, 14, 13) @[TLB.scala 87:43]
    entries_14.level <= _T_389 @[TLB.scala 87:43]
    node _T_390 = bits(_T_375, 41, 15) @[TLB.scala 87:43]
    entries_14.tag <= _T_390 @[TLB.scala 87:43]
    node _T_391 = bits(_T_375, 61, 42) @[TLB.scala 87:43]
    entries_14.ppn <= _T_391 @[TLB.scala 87:43]
    wire entries_15 : {ppn : UInt<20>, tag : UInt<27>, level : UInt<2>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>} @[TLB.scala 87:43]
    entries_15 is invalid @[TLB.scala 87:43]
    wire _T_395 : UInt<62>
    _T_395 is invalid
    _T_395 <= reg_entries[15]
    node _T_396 = bits(_T_395, 0, 0) @[TLB.scala 87:43]
    entries_15.c <= _T_396 @[TLB.scala 87:43]
    node _T_397 = bits(_T_395, 1, 1) @[TLB.scala 87:43]
    entries_15.eff <= _T_397 @[TLB.scala 87:43]
    node _T_398 = bits(_T_395, 2, 2) @[TLB.scala 87:43]
    entries_15.paa <= _T_398 @[TLB.scala 87:43]
    node _T_399 = bits(_T_395, 3, 3) @[TLB.scala 87:43]
    entries_15.pal <= _T_399 @[TLB.scala 87:43]
    node _T_400 = bits(_T_395, 4, 4) @[TLB.scala 87:43]
    entries_15.pr <= _T_400 @[TLB.scala 87:43]
    node _T_401 = bits(_T_395, 5, 5) @[TLB.scala 87:43]
    entries_15.px <= _T_401 @[TLB.scala 87:43]
    node _T_402 = bits(_T_395, 6, 6) @[TLB.scala 87:43]
    entries_15.pw <= _T_402 @[TLB.scala 87:43]
    node _T_403 = bits(_T_395, 7, 7) @[TLB.scala 87:43]
    entries_15.sr <= _T_403 @[TLB.scala 87:43]
    node _T_404 = bits(_T_395, 8, 8) @[TLB.scala 87:43]
    entries_15.sx <= _T_404 @[TLB.scala 87:43]
    node _T_405 = bits(_T_395, 9, 9) @[TLB.scala 87:43]
    entries_15.sw <= _T_405 @[TLB.scala 87:43]
    node _T_406 = bits(_T_395, 10, 10) @[TLB.scala 87:43]
    entries_15.ae <= _T_406 @[TLB.scala 87:43]
    node _T_407 = bits(_T_395, 11, 11) @[TLB.scala 87:43]
    entries_15.g <= _T_407 @[TLB.scala 87:43]
    node _T_408 = bits(_T_395, 12, 12) @[TLB.scala 87:43]
    entries_15.u <= _T_408 @[TLB.scala 87:43]
    node _T_409 = bits(_T_395, 14, 13) @[TLB.scala 87:43]
    entries_15.level <= _T_409 @[TLB.scala 87:43]
    node _T_410 = bits(_T_395, 41, 15) @[TLB.scala 87:43]
    entries_15.tag <= _T_410 @[TLB.scala 87:43]
    node _T_411 = bits(_T_395, 61, 42) @[TLB.scala 87:43]
    entries_15.ppn <= _T_411 @[TLB.scala 87:43]
    wire entries_16 : {ppn : UInt<20>, tag : UInt<27>, level : UInt<2>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>} @[TLB.scala 87:43]
    entries_16 is invalid @[TLB.scala 87:43]
    wire _T_415 : UInt<62>
    _T_415 is invalid
    _T_415 <= reg_entries[16]
    node _T_416 = bits(_T_415, 0, 0) @[TLB.scala 87:43]
    entries_16.c <= _T_416 @[TLB.scala 87:43]
    node _T_417 = bits(_T_415, 1, 1) @[TLB.scala 87:43]
    entries_16.eff <= _T_417 @[TLB.scala 87:43]
    node _T_418 = bits(_T_415, 2, 2) @[TLB.scala 87:43]
    entries_16.paa <= _T_418 @[TLB.scala 87:43]
    node _T_419 = bits(_T_415, 3, 3) @[TLB.scala 87:43]
    entries_16.pal <= _T_419 @[TLB.scala 87:43]
    node _T_420 = bits(_T_415, 4, 4) @[TLB.scala 87:43]
    entries_16.pr <= _T_420 @[TLB.scala 87:43]
    node _T_421 = bits(_T_415, 5, 5) @[TLB.scala 87:43]
    entries_16.px <= _T_421 @[TLB.scala 87:43]
    node _T_422 = bits(_T_415, 6, 6) @[TLB.scala 87:43]
    entries_16.pw <= _T_422 @[TLB.scala 87:43]
    node _T_423 = bits(_T_415, 7, 7) @[TLB.scala 87:43]
    entries_16.sr <= _T_423 @[TLB.scala 87:43]
    node _T_424 = bits(_T_415, 8, 8) @[TLB.scala 87:43]
    entries_16.sx <= _T_424 @[TLB.scala 87:43]
    node _T_425 = bits(_T_415, 9, 9) @[TLB.scala 87:43]
    entries_16.sw <= _T_425 @[TLB.scala 87:43]
    node _T_426 = bits(_T_415, 10, 10) @[TLB.scala 87:43]
    entries_16.ae <= _T_426 @[TLB.scala 87:43]
    node _T_427 = bits(_T_415, 11, 11) @[TLB.scala 87:43]
    entries_16.g <= _T_427 @[TLB.scala 87:43]
    node _T_428 = bits(_T_415, 12, 12) @[TLB.scala 87:43]
    entries_16.u <= _T_428 @[TLB.scala 87:43]
    node _T_429 = bits(_T_415, 14, 13) @[TLB.scala 87:43]
    entries_16.level <= _T_429 @[TLB.scala 87:43]
    node _T_430 = bits(_T_415, 41, 15) @[TLB.scala 87:43]
    entries_16.tag <= _T_430 @[TLB.scala 87:43]
    node _T_431 = bits(_T_415, 61, 42) @[TLB.scala 87:43]
    entries_16.ppn <= _T_431 @[TLB.scala 87:43]
    wire entries_17 : {ppn : UInt<20>, tag : UInt<27>, level : UInt<2>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>} @[TLB.scala 87:43]
    entries_17 is invalid @[TLB.scala 87:43]
    wire _T_435 : UInt<62>
    _T_435 is invalid
    _T_435 <= reg_entries[17]
    node _T_436 = bits(_T_435, 0, 0) @[TLB.scala 87:43]
    entries_17.c <= _T_436 @[TLB.scala 87:43]
    node _T_437 = bits(_T_435, 1, 1) @[TLB.scala 87:43]
    entries_17.eff <= _T_437 @[TLB.scala 87:43]
    node _T_438 = bits(_T_435, 2, 2) @[TLB.scala 87:43]
    entries_17.paa <= _T_438 @[TLB.scala 87:43]
    node _T_439 = bits(_T_435, 3, 3) @[TLB.scala 87:43]
    entries_17.pal <= _T_439 @[TLB.scala 87:43]
    node _T_440 = bits(_T_435, 4, 4) @[TLB.scala 87:43]
    entries_17.pr <= _T_440 @[TLB.scala 87:43]
    node _T_441 = bits(_T_435, 5, 5) @[TLB.scala 87:43]
    entries_17.px <= _T_441 @[TLB.scala 87:43]
    node _T_442 = bits(_T_435, 6, 6) @[TLB.scala 87:43]
    entries_17.pw <= _T_442 @[TLB.scala 87:43]
    node _T_443 = bits(_T_435, 7, 7) @[TLB.scala 87:43]
    entries_17.sr <= _T_443 @[TLB.scala 87:43]
    node _T_444 = bits(_T_435, 8, 8) @[TLB.scala 87:43]
    entries_17.sx <= _T_444 @[TLB.scala 87:43]
    node _T_445 = bits(_T_435, 9, 9) @[TLB.scala 87:43]
    entries_17.sw <= _T_445 @[TLB.scala 87:43]
    node _T_446 = bits(_T_435, 10, 10) @[TLB.scala 87:43]
    entries_17.ae <= _T_446 @[TLB.scala 87:43]
    node _T_447 = bits(_T_435, 11, 11) @[TLB.scala 87:43]
    entries_17.g <= _T_447 @[TLB.scala 87:43]
    node _T_448 = bits(_T_435, 12, 12) @[TLB.scala 87:43]
    entries_17.u <= _T_448 @[TLB.scala 87:43]
    node _T_449 = bits(_T_435, 14, 13) @[TLB.scala 87:43]
    entries_17.level <= _T_449 @[TLB.scala 87:43]
    node _T_450 = bits(_T_435, 41, 15) @[TLB.scala 87:43]
    entries_17.tag <= _T_450 @[TLB.scala 87:43]
    node _T_451 = bits(_T_435, 61, 42) @[TLB.scala 87:43]
    entries_17.ppn <= _T_451 @[TLB.scala 87:43]
    wire entries_18 : {ppn : UInt<20>, tag : UInt<27>, level : UInt<2>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>} @[TLB.scala 87:43]
    entries_18 is invalid @[TLB.scala 87:43]
    wire _T_455 : UInt<62>
    _T_455 is invalid
    _T_455 <= reg_entries[18]
    node _T_456 = bits(_T_455, 0, 0) @[TLB.scala 87:43]
    entries_18.c <= _T_456 @[TLB.scala 87:43]
    node _T_457 = bits(_T_455, 1, 1) @[TLB.scala 87:43]
    entries_18.eff <= _T_457 @[TLB.scala 87:43]
    node _T_458 = bits(_T_455, 2, 2) @[TLB.scala 87:43]
    entries_18.paa <= _T_458 @[TLB.scala 87:43]
    node _T_459 = bits(_T_455, 3, 3) @[TLB.scala 87:43]
    entries_18.pal <= _T_459 @[TLB.scala 87:43]
    node _T_460 = bits(_T_455, 4, 4) @[TLB.scala 87:43]
    entries_18.pr <= _T_460 @[TLB.scala 87:43]
    node _T_461 = bits(_T_455, 5, 5) @[TLB.scala 87:43]
    entries_18.px <= _T_461 @[TLB.scala 87:43]
    node _T_462 = bits(_T_455, 6, 6) @[TLB.scala 87:43]
    entries_18.pw <= _T_462 @[TLB.scala 87:43]
    node _T_463 = bits(_T_455, 7, 7) @[TLB.scala 87:43]
    entries_18.sr <= _T_463 @[TLB.scala 87:43]
    node _T_464 = bits(_T_455, 8, 8) @[TLB.scala 87:43]
    entries_18.sx <= _T_464 @[TLB.scala 87:43]
    node _T_465 = bits(_T_455, 9, 9) @[TLB.scala 87:43]
    entries_18.sw <= _T_465 @[TLB.scala 87:43]
    node _T_466 = bits(_T_455, 10, 10) @[TLB.scala 87:43]
    entries_18.ae <= _T_466 @[TLB.scala 87:43]
    node _T_467 = bits(_T_455, 11, 11) @[TLB.scala 87:43]
    entries_18.g <= _T_467 @[TLB.scala 87:43]
    node _T_468 = bits(_T_455, 12, 12) @[TLB.scala 87:43]
    entries_18.u <= _T_468 @[TLB.scala 87:43]
    node _T_469 = bits(_T_455, 14, 13) @[TLB.scala 87:43]
    entries_18.level <= _T_469 @[TLB.scala 87:43]
    node _T_470 = bits(_T_455, 41, 15) @[TLB.scala 87:43]
    entries_18.tag <= _T_470 @[TLB.scala 87:43]
    node _T_471 = bits(_T_455, 61, 42) @[TLB.scala 87:43]
    entries_18.ppn <= _T_471 @[TLB.scala 87:43]
    wire entries_19 : {ppn : UInt<20>, tag : UInt<27>, level : UInt<2>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>} @[TLB.scala 87:43]
    entries_19 is invalid @[TLB.scala 87:43]
    wire _T_475 : UInt<62>
    _T_475 is invalid
    _T_475 <= reg_entries[19]
    node _T_476 = bits(_T_475, 0, 0) @[TLB.scala 87:43]
    entries_19.c <= _T_476 @[TLB.scala 87:43]
    node _T_477 = bits(_T_475, 1, 1) @[TLB.scala 87:43]
    entries_19.eff <= _T_477 @[TLB.scala 87:43]
    node _T_478 = bits(_T_475, 2, 2) @[TLB.scala 87:43]
    entries_19.paa <= _T_478 @[TLB.scala 87:43]
    node _T_479 = bits(_T_475, 3, 3) @[TLB.scala 87:43]
    entries_19.pal <= _T_479 @[TLB.scala 87:43]
    node _T_480 = bits(_T_475, 4, 4) @[TLB.scala 87:43]
    entries_19.pr <= _T_480 @[TLB.scala 87:43]
    node _T_481 = bits(_T_475, 5, 5) @[TLB.scala 87:43]
    entries_19.px <= _T_481 @[TLB.scala 87:43]
    node _T_482 = bits(_T_475, 6, 6) @[TLB.scala 87:43]
    entries_19.pw <= _T_482 @[TLB.scala 87:43]
    node _T_483 = bits(_T_475, 7, 7) @[TLB.scala 87:43]
    entries_19.sr <= _T_483 @[TLB.scala 87:43]
    node _T_484 = bits(_T_475, 8, 8) @[TLB.scala 87:43]
    entries_19.sx <= _T_484 @[TLB.scala 87:43]
    node _T_485 = bits(_T_475, 9, 9) @[TLB.scala 87:43]
    entries_19.sw <= _T_485 @[TLB.scala 87:43]
    node _T_486 = bits(_T_475, 10, 10) @[TLB.scala 87:43]
    entries_19.ae <= _T_486 @[TLB.scala 87:43]
    node _T_487 = bits(_T_475, 11, 11) @[TLB.scala 87:43]
    entries_19.g <= _T_487 @[TLB.scala 87:43]
    node _T_488 = bits(_T_475, 12, 12) @[TLB.scala 87:43]
    entries_19.u <= _T_488 @[TLB.scala 87:43]
    node _T_489 = bits(_T_475, 14, 13) @[TLB.scala 87:43]
    entries_19.level <= _T_489 @[TLB.scala 87:43]
    node _T_490 = bits(_T_475, 41, 15) @[TLB.scala 87:43]
    entries_19.tag <= _T_490 @[TLB.scala 87:43]
    node _T_491 = bits(_T_475, 61, 42) @[TLB.scala 87:43]
    entries_19.ppn <= _T_491 @[TLB.scala 87:43]
    wire entries_20 : {ppn : UInt<20>, tag : UInt<27>, level : UInt<2>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>} @[TLB.scala 87:43]
    entries_20 is invalid @[TLB.scala 87:43]
    wire _T_495 : UInt<62>
    _T_495 is invalid
    _T_495 <= reg_entries[20]
    node _T_496 = bits(_T_495, 0, 0) @[TLB.scala 87:43]
    entries_20.c <= _T_496 @[TLB.scala 87:43]
    node _T_497 = bits(_T_495, 1, 1) @[TLB.scala 87:43]
    entries_20.eff <= _T_497 @[TLB.scala 87:43]
    node _T_498 = bits(_T_495, 2, 2) @[TLB.scala 87:43]
    entries_20.paa <= _T_498 @[TLB.scala 87:43]
    node _T_499 = bits(_T_495, 3, 3) @[TLB.scala 87:43]
    entries_20.pal <= _T_499 @[TLB.scala 87:43]
    node _T_500 = bits(_T_495, 4, 4) @[TLB.scala 87:43]
    entries_20.pr <= _T_500 @[TLB.scala 87:43]
    node _T_501 = bits(_T_495, 5, 5) @[TLB.scala 87:43]
    entries_20.px <= _T_501 @[TLB.scala 87:43]
    node _T_502 = bits(_T_495, 6, 6) @[TLB.scala 87:43]
    entries_20.pw <= _T_502 @[TLB.scala 87:43]
    node _T_503 = bits(_T_495, 7, 7) @[TLB.scala 87:43]
    entries_20.sr <= _T_503 @[TLB.scala 87:43]
    node _T_504 = bits(_T_495, 8, 8) @[TLB.scala 87:43]
    entries_20.sx <= _T_504 @[TLB.scala 87:43]
    node _T_505 = bits(_T_495, 9, 9) @[TLB.scala 87:43]
    entries_20.sw <= _T_505 @[TLB.scala 87:43]
    node _T_506 = bits(_T_495, 10, 10) @[TLB.scala 87:43]
    entries_20.ae <= _T_506 @[TLB.scala 87:43]
    node _T_507 = bits(_T_495, 11, 11) @[TLB.scala 87:43]
    entries_20.g <= _T_507 @[TLB.scala 87:43]
    node _T_508 = bits(_T_495, 12, 12) @[TLB.scala 87:43]
    entries_20.u <= _T_508 @[TLB.scala 87:43]
    node _T_509 = bits(_T_495, 14, 13) @[TLB.scala 87:43]
    entries_20.level <= _T_509 @[TLB.scala 87:43]
    node _T_510 = bits(_T_495, 41, 15) @[TLB.scala 87:43]
    entries_20.tag <= _T_510 @[TLB.scala 87:43]
    node _T_511 = bits(_T_495, 61, 42) @[TLB.scala 87:43]
    entries_20.ppn <= _T_511 @[TLB.scala 87:43]
    wire entries_21 : {ppn : UInt<20>, tag : UInt<27>, level : UInt<2>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>} @[TLB.scala 87:43]
    entries_21 is invalid @[TLB.scala 87:43]
    wire _T_515 : UInt<62>
    _T_515 is invalid
    _T_515 <= reg_entries[21]
    node _T_516 = bits(_T_515, 0, 0) @[TLB.scala 87:43]
    entries_21.c <= _T_516 @[TLB.scala 87:43]
    node _T_517 = bits(_T_515, 1, 1) @[TLB.scala 87:43]
    entries_21.eff <= _T_517 @[TLB.scala 87:43]
    node _T_518 = bits(_T_515, 2, 2) @[TLB.scala 87:43]
    entries_21.paa <= _T_518 @[TLB.scala 87:43]
    node _T_519 = bits(_T_515, 3, 3) @[TLB.scala 87:43]
    entries_21.pal <= _T_519 @[TLB.scala 87:43]
    node _T_520 = bits(_T_515, 4, 4) @[TLB.scala 87:43]
    entries_21.pr <= _T_520 @[TLB.scala 87:43]
    node _T_521 = bits(_T_515, 5, 5) @[TLB.scala 87:43]
    entries_21.px <= _T_521 @[TLB.scala 87:43]
    node _T_522 = bits(_T_515, 6, 6) @[TLB.scala 87:43]
    entries_21.pw <= _T_522 @[TLB.scala 87:43]
    node _T_523 = bits(_T_515, 7, 7) @[TLB.scala 87:43]
    entries_21.sr <= _T_523 @[TLB.scala 87:43]
    node _T_524 = bits(_T_515, 8, 8) @[TLB.scala 87:43]
    entries_21.sx <= _T_524 @[TLB.scala 87:43]
    node _T_525 = bits(_T_515, 9, 9) @[TLB.scala 87:43]
    entries_21.sw <= _T_525 @[TLB.scala 87:43]
    node _T_526 = bits(_T_515, 10, 10) @[TLB.scala 87:43]
    entries_21.ae <= _T_526 @[TLB.scala 87:43]
    node _T_527 = bits(_T_515, 11, 11) @[TLB.scala 87:43]
    entries_21.g <= _T_527 @[TLB.scala 87:43]
    node _T_528 = bits(_T_515, 12, 12) @[TLB.scala 87:43]
    entries_21.u <= _T_528 @[TLB.scala 87:43]
    node _T_529 = bits(_T_515, 14, 13) @[TLB.scala 87:43]
    entries_21.level <= _T_529 @[TLB.scala 87:43]
    node _T_530 = bits(_T_515, 41, 15) @[TLB.scala 87:43]
    entries_21.tag <= _T_530 @[TLB.scala 87:43]
    node _T_531 = bits(_T_515, 61, 42) @[TLB.scala 87:43]
    entries_21.ppn <= _T_531 @[TLB.scala 87:43]
    wire entries_22 : {ppn : UInt<20>, tag : UInt<27>, level : UInt<2>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>} @[TLB.scala 87:43]
    entries_22 is invalid @[TLB.scala 87:43]
    wire _T_535 : UInt<62>
    _T_535 is invalid
    _T_535 <= reg_entries[22]
    node _T_536 = bits(_T_535, 0, 0) @[TLB.scala 87:43]
    entries_22.c <= _T_536 @[TLB.scala 87:43]
    node _T_537 = bits(_T_535, 1, 1) @[TLB.scala 87:43]
    entries_22.eff <= _T_537 @[TLB.scala 87:43]
    node _T_538 = bits(_T_535, 2, 2) @[TLB.scala 87:43]
    entries_22.paa <= _T_538 @[TLB.scala 87:43]
    node _T_539 = bits(_T_535, 3, 3) @[TLB.scala 87:43]
    entries_22.pal <= _T_539 @[TLB.scala 87:43]
    node _T_540 = bits(_T_535, 4, 4) @[TLB.scala 87:43]
    entries_22.pr <= _T_540 @[TLB.scala 87:43]
    node _T_541 = bits(_T_535, 5, 5) @[TLB.scala 87:43]
    entries_22.px <= _T_541 @[TLB.scala 87:43]
    node _T_542 = bits(_T_535, 6, 6) @[TLB.scala 87:43]
    entries_22.pw <= _T_542 @[TLB.scala 87:43]
    node _T_543 = bits(_T_535, 7, 7) @[TLB.scala 87:43]
    entries_22.sr <= _T_543 @[TLB.scala 87:43]
    node _T_544 = bits(_T_535, 8, 8) @[TLB.scala 87:43]
    entries_22.sx <= _T_544 @[TLB.scala 87:43]
    node _T_545 = bits(_T_535, 9, 9) @[TLB.scala 87:43]
    entries_22.sw <= _T_545 @[TLB.scala 87:43]
    node _T_546 = bits(_T_535, 10, 10) @[TLB.scala 87:43]
    entries_22.ae <= _T_546 @[TLB.scala 87:43]
    node _T_547 = bits(_T_535, 11, 11) @[TLB.scala 87:43]
    entries_22.g <= _T_547 @[TLB.scala 87:43]
    node _T_548 = bits(_T_535, 12, 12) @[TLB.scala 87:43]
    entries_22.u <= _T_548 @[TLB.scala 87:43]
    node _T_549 = bits(_T_535, 14, 13) @[TLB.scala 87:43]
    entries_22.level <= _T_549 @[TLB.scala 87:43]
    node _T_550 = bits(_T_535, 41, 15) @[TLB.scala 87:43]
    entries_22.tag <= _T_550 @[TLB.scala 87:43]
    node _T_551 = bits(_T_535, 61, 42) @[TLB.scala 87:43]
    entries_22.ppn <= _T_551 @[TLB.scala 87:43]
    wire entries_23 : {ppn : UInt<20>, tag : UInt<27>, level : UInt<2>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>} @[TLB.scala 87:43]
    entries_23 is invalid @[TLB.scala 87:43]
    wire _T_555 : UInt<62>
    _T_555 is invalid
    _T_555 <= reg_entries[23]
    node _T_556 = bits(_T_555, 0, 0) @[TLB.scala 87:43]
    entries_23.c <= _T_556 @[TLB.scala 87:43]
    node _T_557 = bits(_T_555, 1, 1) @[TLB.scala 87:43]
    entries_23.eff <= _T_557 @[TLB.scala 87:43]
    node _T_558 = bits(_T_555, 2, 2) @[TLB.scala 87:43]
    entries_23.paa <= _T_558 @[TLB.scala 87:43]
    node _T_559 = bits(_T_555, 3, 3) @[TLB.scala 87:43]
    entries_23.pal <= _T_559 @[TLB.scala 87:43]
    node _T_560 = bits(_T_555, 4, 4) @[TLB.scala 87:43]
    entries_23.pr <= _T_560 @[TLB.scala 87:43]
    node _T_561 = bits(_T_555, 5, 5) @[TLB.scala 87:43]
    entries_23.px <= _T_561 @[TLB.scala 87:43]
    node _T_562 = bits(_T_555, 6, 6) @[TLB.scala 87:43]
    entries_23.pw <= _T_562 @[TLB.scala 87:43]
    node _T_563 = bits(_T_555, 7, 7) @[TLB.scala 87:43]
    entries_23.sr <= _T_563 @[TLB.scala 87:43]
    node _T_564 = bits(_T_555, 8, 8) @[TLB.scala 87:43]
    entries_23.sx <= _T_564 @[TLB.scala 87:43]
    node _T_565 = bits(_T_555, 9, 9) @[TLB.scala 87:43]
    entries_23.sw <= _T_565 @[TLB.scala 87:43]
    node _T_566 = bits(_T_555, 10, 10) @[TLB.scala 87:43]
    entries_23.ae <= _T_566 @[TLB.scala 87:43]
    node _T_567 = bits(_T_555, 11, 11) @[TLB.scala 87:43]
    entries_23.g <= _T_567 @[TLB.scala 87:43]
    node _T_568 = bits(_T_555, 12, 12) @[TLB.scala 87:43]
    entries_23.u <= _T_568 @[TLB.scala 87:43]
    node _T_569 = bits(_T_555, 14, 13) @[TLB.scala 87:43]
    entries_23.level <= _T_569 @[TLB.scala 87:43]
    node _T_570 = bits(_T_555, 41, 15) @[TLB.scala 87:43]
    entries_23.tag <= _T_570 @[TLB.scala 87:43]
    node _T_571 = bits(_T_555, 61, 42) @[TLB.scala 87:43]
    entries_23.ppn <= _T_571 @[TLB.scala 87:43]
    wire entries_24 : {ppn : UInt<20>, tag : UInt<27>, level : UInt<2>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>} @[TLB.scala 87:43]
    entries_24 is invalid @[TLB.scala 87:43]
    wire _T_575 : UInt<62>
    _T_575 is invalid
    _T_575 <= reg_entries[24]
    node _T_576 = bits(_T_575, 0, 0) @[TLB.scala 87:43]
    entries_24.c <= _T_576 @[TLB.scala 87:43]
    node _T_577 = bits(_T_575, 1, 1) @[TLB.scala 87:43]
    entries_24.eff <= _T_577 @[TLB.scala 87:43]
    node _T_578 = bits(_T_575, 2, 2) @[TLB.scala 87:43]
    entries_24.paa <= _T_578 @[TLB.scala 87:43]
    node _T_579 = bits(_T_575, 3, 3) @[TLB.scala 87:43]
    entries_24.pal <= _T_579 @[TLB.scala 87:43]
    node _T_580 = bits(_T_575, 4, 4) @[TLB.scala 87:43]
    entries_24.pr <= _T_580 @[TLB.scala 87:43]
    node _T_581 = bits(_T_575, 5, 5) @[TLB.scala 87:43]
    entries_24.px <= _T_581 @[TLB.scala 87:43]
    node _T_582 = bits(_T_575, 6, 6) @[TLB.scala 87:43]
    entries_24.pw <= _T_582 @[TLB.scala 87:43]
    node _T_583 = bits(_T_575, 7, 7) @[TLB.scala 87:43]
    entries_24.sr <= _T_583 @[TLB.scala 87:43]
    node _T_584 = bits(_T_575, 8, 8) @[TLB.scala 87:43]
    entries_24.sx <= _T_584 @[TLB.scala 87:43]
    node _T_585 = bits(_T_575, 9, 9) @[TLB.scala 87:43]
    entries_24.sw <= _T_585 @[TLB.scala 87:43]
    node _T_586 = bits(_T_575, 10, 10) @[TLB.scala 87:43]
    entries_24.ae <= _T_586 @[TLB.scala 87:43]
    node _T_587 = bits(_T_575, 11, 11) @[TLB.scala 87:43]
    entries_24.g <= _T_587 @[TLB.scala 87:43]
    node _T_588 = bits(_T_575, 12, 12) @[TLB.scala 87:43]
    entries_24.u <= _T_588 @[TLB.scala 87:43]
    node _T_589 = bits(_T_575, 14, 13) @[TLB.scala 87:43]
    entries_24.level <= _T_589 @[TLB.scala 87:43]
    node _T_590 = bits(_T_575, 41, 15) @[TLB.scala 87:43]
    entries_24.tag <= _T_590 @[TLB.scala 87:43]
    node _T_591 = bits(_T_575, 61, 42) @[TLB.scala 87:43]
    entries_24.ppn <= _T_591 @[TLB.scala 87:43]
    wire entries_25 : {ppn : UInt<20>, tag : UInt<27>, level : UInt<2>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>} @[TLB.scala 87:43]
    entries_25 is invalid @[TLB.scala 87:43]
    wire _T_595 : UInt<62>
    _T_595 is invalid
    _T_595 <= reg_entries[25]
    node _T_596 = bits(_T_595, 0, 0) @[TLB.scala 87:43]
    entries_25.c <= _T_596 @[TLB.scala 87:43]
    node _T_597 = bits(_T_595, 1, 1) @[TLB.scala 87:43]
    entries_25.eff <= _T_597 @[TLB.scala 87:43]
    node _T_598 = bits(_T_595, 2, 2) @[TLB.scala 87:43]
    entries_25.paa <= _T_598 @[TLB.scala 87:43]
    node _T_599 = bits(_T_595, 3, 3) @[TLB.scala 87:43]
    entries_25.pal <= _T_599 @[TLB.scala 87:43]
    node _T_600 = bits(_T_595, 4, 4) @[TLB.scala 87:43]
    entries_25.pr <= _T_600 @[TLB.scala 87:43]
    node _T_601 = bits(_T_595, 5, 5) @[TLB.scala 87:43]
    entries_25.px <= _T_601 @[TLB.scala 87:43]
    node _T_602 = bits(_T_595, 6, 6) @[TLB.scala 87:43]
    entries_25.pw <= _T_602 @[TLB.scala 87:43]
    node _T_603 = bits(_T_595, 7, 7) @[TLB.scala 87:43]
    entries_25.sr <= _T_603 @[TLB.scala 87:43]
    node _T_604 = bits(_T_595, 8, 8) @[TLB.scala 87:43]
    entries_25.sx <= _T_604 @[TLB.scala 87:43]
    node _T_605 = bits(_T_595, 9, 9) @[TLB.scala 87:43]
    entries_25.sw <= _T_605 @[TLB.scala 87:43]
    node _T_606 = bits(_T_595, 10, 10) @[TLB.scala 87:43]
    entries_25.ae <= _T_606 @[TLB.scala 87:43]
    node _T_607 = bits(_T_595, 11, 11) @[TLB.scala 87:43]
    entries_25.g <= _T_607 @[TLB.scala 87:43]
    node _T_608 = bits(_T_595, 12, 12) @[TLB.scala 87:43]
    entries_25.u <= _T_608 @[TLB.scala 87:43]
    node _T_609 = bits(_T_595, 14, 13) @[TLB.scala 87:43]
    entries_25.level <= _T_609 @[TLB.scala 87:43]
    node _T_610 = bits(_T_595, 41, 15) @[TLB.scala 87:43]
    entries_25.tag <= _T_610 @[TLB.scala 87:43]
    node _T_611 = bits(_T_595, 61, 42) @[TLB.scala 87:43]
    entries_25.ppn <= _T_611 @[TLB.scala 87:43]
    wire entries_26 : {ppn : UInt<20>, tag : UInt<27>, level : UInt<2>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>} @[TLB.scala 87:43]
    entries_26 is invalid @[TLB.scala 87:43]
    wire _T_615 : UInt<62>
    _T_615 is invalid
    _T_615 <= reg_entries[26]
    node _T_616 = bits(_T_615, 0, 0) @[TLB.scala 87:43]
    entries_26.c <= _T_616 @[TLB.scala 87:43]
    node _T_617 = bits(_T_615, 1, 1) @[TLB.scala 87:43]
    entries_26.eff <= _T_617 @[TLB.scala 87:43]
    node _T_618 = bits(_T_615, 2, 2) @[TLB.scala 87:43]
    entries_26.paa <= _T_618 @[TLB.scala 87:43]
    node _T_619 = bits(_T_615, 3, 3) @[TLB.scala 87:43]
    entries_26.pal <= _T_619 @[TLB.scala 87:43]
    node _T_620 = bits(_T_615, 4, 4) @[TLB.scala 87:43]
    entries_26.pr <= _T_620 @[TLB.scala 87:43]
    node _T_621 = bits(_T_615, 5, 5) @[TLB.scala 87:43]
    entries_26.px <= _T_621 @[TLB.scala 87:43]
    node _T_622 = bits(_T_615, 6, 6) @[TLB.scala 87:43]
    entries_26.pw <= _T_622 @[TLB.scala 87:43]
    node _T_623 = bits(_T_615, 7, 7) @[TLB.scala 87:43]
    entries_26.sr <= _T_623 @[TLB.scala 87:43]
    node _T_624 = bits(_T_615, 8, 8) @[TLB.scala 87:43]
    entries_26.sx <= _T_624 @[TLB.scala 87:43]
    node _T_625 = bits(_T_615, 9, 9) @[TLB.scala 87:43]
    entries_26.sw <= _T_625 @[TLB.scala 87:43]
    node _T_626 = bits(_T_615, 10, 10) @[TLB.scala 87:43]
    entries_26.ae <= _T_626 @[TLB.scala 87:43]
    node _T_627 = bits(_T_615, 11, 11) @[TLB.scala 87:43]
    entries_26.g <= _T_627 @[TLB.scala 87:43]
    node _T_628 = bits(_T_615, 12, 12) @[TLB.scala 87:43]
    entries_26.u <= _T_628 @[TLB.scala 87:43]
    node _T_629 = bits(_T_615, 14, 13) @[TLB.scala 87:43]
    entries_26.level <= _T_629 @[TLB.scala 87:43]
    node _T_630 = bits(_T_615, 41, 15) @[TLB.scala 87:43]
    entries_26.tag <= _T_630 @[TLB.scala 87:43]
    node _T_631 = bits(_T_615, 61, 42) @[TLB.scala 87:43]
    entries_26.ppn <= _T_631 @[TLB.scala 87:43]
    wire entries_27 : {ppn : UInt<20>, tag : UInt<27>, level : UInt<2>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>} @[TLB.scala 87:43]
    entries_27 is invalid @[TLB.scala 87:43]
    wire _T_635 : UInt<62>
    _T_635 is invalid
    _T_635 <= reg_entries[27]
    node _T_636 = bits(_T_635, 0, 0) @[TLB.scala 87:43]
    entries_27.c <= _T_636 @[TLB.scala 87:43]
    node _T_637 = bits(_T_635, 1, 1) @[TLB.scala 87:43]
    entries_27.eff <= _T_637 @[TLB.scala 87:43]
    node _T_638 = bits(_T_635, 2, 2) @[TLB.scala 87:43]
    entries_27.paa <= _T_638 @[TLB.scala 87:43]
    node _T_639 = bits(_T_635, 3, 3) @[TLB.scala 87:43]
    entries_27.pal <= _T_639 @[TLB.scala 87:43]
    node _T_640 = bits(_T_635, 4, 4) @[TLB.scala 87:43]
    entries_27.pr <= _T_640 @[TLB.scala 87:43]
    node _T_641 = bits(_T_635, 5, 5) @[TLB.scala 87:43]
    entries_27.px <= _T_641 @[TLB.scala 87:43]
    node _T_642 = bits(_T_635, 6, 6) @[TLB.scala 87:43]
    entries_27.pw <= _T_642 @[TLB.scala 87:43]
    node _T_643 = bits(_T_635, 7, 7) @[TLB.scala 87:43]
    entries_27.sr <= _T_643 @[TLB.scala 87:43]
    node _T_644 = bits(_T_635, 8, 8) @[TLB.scala 87:43]
    entries_27.sx <= _T_644 @[TLB.scala 87:43]
    node _T_645 = bits(_T_635, 9, 9) @[TLB.scala 87:43]
    entries_27.sw <= _T_645 @[TLB.scala 87:43]
    node _T_646 = bits(_T_635, 10, 10) @[TLB.scala 87:43]
    entries_27.ae <= _T_646 @[TLB.scala 87:43]
    node _T_647 = bits(_T_635, 11, 11) @[TLB.scala 87:43]
    entries_27.g <= _T_647 @[TLB.scala 87:43]
    node _T_648 = bits(_T_635, 12, 12) @[TLB.scala 87:43]
    entries_27.u <= _T_648 @[TLB.scala 87:43]
    node _T_649 = bits(_T_635, 14, 13) @[TLB.scala 87:43]
    entries_27.level <= _T_649 @[TLB.scala 87:43]
    node _T_650 = bits(_T_635, 41, 15) @[TLB.scala 87:43]
    entries_27.tag <= _T_650 @[TLB.scala 87:43]
    node _T_651 = bits(_T_635, 61, 42) @[TLB.scala 87:43]
    entries_27.ppn <= _T_651 @[TLB.scala 87:43]
    wire entries_28 : {ppn : UInt<20>, tag : UInt<27>, level : UInt<2>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>} @[TLB.scala 87:43]
    entries_28 is invalid @[TLB.scala 87:43]
    wire _T_655 : UInt<62>
    _T_655 is invalid
    _T_655 <= reg_entries[28]
    node _T_656 = bits(_T_655, 0, 0) @[TLB.scala 87:43]
    entries_28.c <= _T_656 @[TLB.scala 87:43]
    node _T_657 = bits(_T_655, 1, 1) @[TLB.scala 87:43]
    entries_28.eff <= _T_657 @[TLB.scala 87:43]
    node _T_658 = bits(_T_655, 2, 2) @[TLB.scala 87:43]
    entries_28.paa <= _T_658 @[TLB.scala 87:43]
    node _T_659 = bits(_T_655, 3, 3) @[TLB.scala 87:43]
    entries_28.pal <= _T_659 @[TLB.scala 87:43]
    node _T_660 = bits(_T_655, 4, 4) @[TLB.scala 87:43]
    entries_28.pr <= _T_660 @[TLB.scala 87:43]
    node _T_661 = bits(_T_655, 5, 5) @[TLB.scala 87:43]
    entries_28.px <= _T_661 @[TLB.scala 87:43]
    node _T_662 = bits(_T_655, 6, 6) @[TLB.scala 87:43]
    entries_28.pw <= _T_662 @[TLB.scala 87:43]
    node _T_663 = bits(_T_655, 7, 7) @[TLB.scala 87:43]
    entries_28.sr <= _T_663 @[TLB.scala 87:43]
    node _T_664 = bits(_T_655, 8, 8) @[TLB.scala 87:43]
    entries_28.sx <= _T_664 @[TLB.scala 87:43]
    node _T_665 = bits(_T_655, 9, 9) @[TLB.scala 87:43]
    entries_28.sw <= _T_665 @[TLB.scala 87:43]
    node _T_666 = bits(_T_655, 10, 10) @[TLB.scala 87:43]
    entries_28.ae <= _T_666 @[TLB.scala 87:43]
    node _T_667 = bits(_T_655, 11, 11) @[TLB.scala 87:43]
    entries_28.g <= _T_667 @[TLB.scala 87:43]
    node _T_668 = bits(_T_655, 12, 12) @[TLB.scala 87:43]
    entries_28.u <= _T_668 @[TLB.scala 87:43]
    node _T_669 = bits(_T_655, 14, 13) @[TLB.scala 87:43]
    entries_28.level <= _T_669 @[TLB.scala 87:43]
    node _T_670 = bits(_T_655, 41, 15) @[TLB.scala 87:43]
    entries_28.tag <= _T_670 @[TLB.scala 87:43]
    node _T_671 = bits(_T_655, 61, 42) @[TLB.scala 87:43]
    entries_28.ppn <= _T_671 @[TLB.scala 87:43]
    wire entries_29 : {ppn : UInt<20>, tag : UInt<27>, level : UInt<2>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>} @[TLB.scala 87:43]
    entries_29 is invalid @[TLB.scala 87:43]
    wire _T_675 : UInt<62>
    _T_675 is invalid
    _T_675 <= reg_entries[29]
    node _T_676 = bits(_T_675, 0, 0) @[TLB.scala 87:43]
    entries_29.c <= _T_676 @[TLB.scala 87:43]
    node _T_677 = bits(_T_675, 1, 1) @[TLB.scala 87:43]
    entries_29.eff <= _T_677 @[TLB.scala 87:43]
    node _T_678 = bits(_T_675, 2, 2) @[TLB.scala 87:43]
    entries_29.paa <= _T_678 @[TLB.scala 87:43]
    node _T_679 = bits(_T_675, 3, 3) @[TLB.scala 87:43]
    entries_29.pal <= _T_679 @[TLB.scala 87:43]
    node _T_680 = bits(_T_675, 4, 4) @[TLB.scala 87:43]
    entries_29.pr <= _T_680 @[TLB.scala 87:43]
    node _T_681 = bits(_T_675, 5, 5) @[TLB.scala 87:43]
    entries_29.px <= _T_681 @[TLB.scala 87:43]
    node _T_682 = bits(_T_675, 6, 6) @[TLB.scala 87:43]
    entries_29.pw <= _T_682 @[TLB.scala 87:43]
    node _T_683 = bits(_T_675, 7, 7) @[TLB.scala 87:43]
    entries_29.sr <= _T_683 @[TLB.scala 87:43]
    node _T_684 = bits(_T_675, 8, 8) @[TLB.scala 87:43]
    entries_29.sx <= _T_684 @[TLB.scala 87:43]
    node _T_685 = bits(_T_675, 9, 9) @[TLB.scala 87:43]
    entries_29.sw <= _T_685 @[TLB.scala 87:43]
    node _T_686 = bits(_T_675, 10, 10) @[TLB.scala 87:43]
    entries_29.ae <= _T_686 @[TLB.scala 87:43]
    node _T_687 = bits(_T_675, 11, 11) @[TLB.scala 87:43]
    entries_29.g <= _T_687 @[TLB.scala 87:43]
    node _T_688 = bits(_T_675, 12, 12) @[TLB.scala 87:43]
    entries_29.u <= _T_688 @[TLB.scala 87:43]
    node _T_689 = bits(_T_675, 14, 13) @[TLB.scala 87:43]
    entries_29.level <= _T_689 @[TLB.scala 87:43]
    node _T_690 = bits(_T_675, 41, 15) @[TLB.scala 87:43]
    entries_29.tag <= _T_690 @[TLB.scala 87:43]
    node _T_691 = bits(_T_675, 61, 42) @[TLB.scala 87:43]
    entries_29.ppn <= _T_691 @[TLB.scala 87:43]
    wire entries_30 : {ppn : UInt<20>, tag : UInt<27>, level : UInt<2>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>} @[TLB.scala 87:43]
    entries_30 is invalid @[TLB.scala 87:43]
    wire _T_695 : UInt<62>
    _T_695 is invalid
    _T_695 <= reg_entries[30]
    node _T_696 = bits(_T_695, 0, 0) @[TLB.scala 87:43]
    entries_30.c <= _T_696 @[TLB.scala 87:43]
    node _T_697 = bits(_T_695, 1, 1) @[TLB.scala 87:43]
    entries_30.eff <= _T_697 @[TLB.scala 87:43]
    node _T_698 = bits(_T_695, 2, 2) @[TLB.scala 87:43]
    entries_30.paa <= _T_698 @[TLB.scala 87:43]
    node _T_699 = bits(_T_695, 3, 3) @[TLB.scala 87:43]
    entries_30.pal <= _T_699 @[TLB.scala 87:43]
    node _T_700 = bits(_T_695, 4, 4) @[TLB.scala 87:43]
    entries_30.pr <= _T_700 @[TLB.scala 87:43]
    node _T_701 = bits(_T_695, 5, 5) @[TLB.scala 87:43]
    entries_30.px <= _T_701 @[TLB.scala 87:43]
    node _T_702 = bits(_T_695, 6, 6) @[TLB.scala 87:43]
    entries_30.pw <= _T_702 @[TLB.scala 87:43]
    node _T_703 = bits(_T_695, 7, 7) @[TLB.scala 87:43]
    entries_30.sr <= _T_703 @[TLB.scala 87:43]
    node _T_704 = bits(_T_695, 8, 8) @[TLB.scala 87:43]
    entries_30.sx <= _T_704 @[TLB.scala 87:43]
    node _T_705 = bits(_T_695, 9, 9) @[TLB.scala 87:43]
    entries_30.sw <= _T_705 @[TLB.scala 87:43]
    node _T_706 = bits(_T_695, 10, 10) @[TLB.scala 87:43]
    entries_30.ae <= _T_706 @[TLB.scala 87:43]
    node _T_707 = bits(_T_695, 11, 11) @[TLB.scala 87:43]
    entries_30.g <= _T_707 @[TLB.scala 87:43]
    node _T_708 = bits(_T_695, 12, 12) @[TLB.scala 87:43]
    entries_30.u <= _T_708 @[TLB.scala 87:43]
    node _T_709 = bits(_T_695, 14, 13) @[TLB.scala 87:43]
    entries_30.level <= _T_709 @[TLB.scala 87:43]
    node _T_710 = bits(_T_695, 41, 15) @[TLB.scala 87:43]
    entries_30.tag <= _T_710 @[TLB.scala 87:43]
    node _T_711 = bits(_T_695, 61, 42) @[TLB.scala 87:43]
    entries_30.ppn <= _T_711 @[TLB.scala 87:43]
    wire entries_31 : {ppn : UInt<20>, tag : UInt<27>, level : UInt<2>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>} @[TLB.scala 87:43]
    entries_31 is invalid @[TLB.scala 87:43]
    wire _T_715 : UInt<62>
    _T_715 is invalid
    _T_715 <= reg_entries[31]
    node _T_716 = bits(_T_715, 0, 0) @[TLB.scala 87:43]
    entries_31.c <= _T_716 @[TLB.scala 87:43]
    node _T_717 = bits(_T_715, 1, 1) @[TLB.scala 87:43]
    entries_31.eff <= _T_717 @[TLB.scala 87:43]
    node _T_718 = bits(_T_715, 2, 2) @[TLB.scala 87:43]
    entries_31.paa <= _T_718 @[TLB.scala 87:43]
    node _T_719 = bits(_T_715, 3, 3) @[TLB.scala 87:43]
    entries_31.pal <= _T_719 @[TLB.scala 87:43]
    node _T_720 = bits(_T_715, 4, 4) @[TLB.scala 87:43]
    entries_31.pr <= _T_720 @[TLB.scala 87:43]
    node _T_721 = bits(_T_715, 5, 5) @[TLB.scala 87:43]
    entries_31.px <= _T_721 @[TLB.scala 87:43]
    node _T_722 = bits(_T_715, 6, 6) @[TLB.scala 87:43]
    entries_31.pw <= _T_722 @[TLB.scala 87:43]
    node _T_723 = bits(_T_715, 7, 7) @[TLB.scala 87:43]
    entries_31.sr <= _T_723 @[TLB.scala 87:43]
    node _T_724 = bits(_T_715, 8, 8) @[TLB.scala 87:43]
    entries_31.sx <= _T_724 @[TLB.scala 87:43]
    node _T_725 = bits(_T_715, 9, 9) @[TLB.scala 87:43]
    entries_31.sw <= _T_725 @[TLB.scala 87:43]
    node _T_726 = bits(_T_715, 10, 10) @[TLB.scala 87:43]
    entries_31.ae <= _T_726 @[TLB.scala 87:43]
    node _T_727 = bits(_T_715, 11, 11) @[TLB.scala 87:43]
    entries_31.g <= _T_727 @[TLB.scala 87:43]
    node _T_728 = bits(_T_715, 12, 12) @[TLB.scala 87:43]
    entries_31.u <= _T_728 @[TLB.scala 87:43]
    node _T_729 = bits(_T_715, 14, 13) @[TLB.scala 87:43]
    entries_31.level <= _T_729 @[TLB.scala 87:43]
    node _T_730 = bits(_T_715, 41, 15) @[TLB.scala 87:43]
    entries_31.tag <= _T_730 @[TLB.scala 87:43]
    node _T_731 = bits(_T_715, 61, 42) @[TLB.scala 87:43]
    entries_31.ppn <= _T_731 @[TLB.scala 87:43]
    wire entries_32 : {ppn : UInt<20>, tag : UInt<27>, level : UInt<2>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>} @[TLB.scala 87:43]
    entries_32 is invalid @[TLB.scala 87:43]
    wire _T_735 : UInt<62>
    _T_735 is invalid
    _T_735 <= reg_entries[32]
    node _T_736 = bits(_T_735, 0, 0) @[TLB.scala 87:43]
    entries_32.c <= _T_736 @[TLB.scala 87:43]
    node _T_737 = bits(_T_735, 1, 1) @[TLB.scala 87:43]
    entries_32.eff <= _T_737 @[TLB.scala 87:43]
    node _T_738 = bits(_T_735, 2, 2) @[TLB.scala 87:43]
    entries_32.paa <= _T_738 @[TLB.scala 87:43]
    node _T_739 = bits(_T_735, 3, 3) @[TLB.scala 87:43]
    entries_32.pal <= _T_739 @[TLB.scala 87:43]
    node _T_740 = bits(_T_735, 4, 4) @[TLB.scala 87:43]
    entries_32.pr <= _T_740 @[TLB.scala 87:43]
    node _T_741 = bits(_T_735, 5, 5) @[TLB.scala 87:43]
    entries_32.px <= _T_741 @[TLB.scala 87:43]
    node _T_742 = bits(_T_735, 6, 6) @[TLB.scala 87:43]
    entries_32.pw <= _T_742 @[TLB.scala 87:43]
    node _T_743 = bits(_T_735, 7, 7) @[TLB.scala 87:43]
    entries_32.sr <= _T_743 @[TLB.scala 87:43]
    node _T_744 = bits(_T_735, 8, 8) @[TLB.scala 87:43]
    entries_32.sx <= _T_744 @[TLB.scala 87:43]
    node _T_745 = bits(_T_735, 9, 9) @[TLB.scala 87:43]
    entries_32.sw <= _T_745 @[TLB.scala 87:43]
    node _T_746 = bits(_T_735, 10, 10) @[TLB.scala 87:43]
    entries_32.ae <= _T_746 @[TLB.scala 87:43]
    node _T_747 = bits(_T_735, 11, 11) @[TLB.scala 87:43]
    entries_32.g <= _T_747 @[TLB.scala 87:43]
    node _T_748 = bits(_T_735, 12, 12) @[TLB.scala 87:43]
    entries_32.u <= _T_748 @[TLB.scala 87:43]
    node _T_749 = bits(_T_735, 14, 13) @[TLB.scala 87:43]
    entries_32.level <= _T_749 @[TLB.scala 87:43]
    node _T_750 = bits(_T_735, 41, 15) @[TLB.scala 87:43]
    entries_32.tag <= _T_750 @[TLB.scala 87:43]
    node _T_751 = bits(_T_735, 61, 42) @[TLB.scala 87:43]
    entries_32.ppn <= _T_751 @[TLB.scala 87:43]
    reg state : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[TLB.scala 90:18]
    reg r_refill_tag : UInt<27>, clock @[TLB.scala 91:25]
    reg r_refill_waddr : UInt<5>, clock @[TLB.scala 92:27]
    reg r_req : {vaddr : UInt<40>, passthrough : UInt<1>, sfence : {valid : UInt<1>, bits : {rs1 : UInt<1>, rs2 : UInt<1>, addr : UInt<39>, asid : UInt<1>}}, size : UInt<2>, cmd : UInt<5>}, clock @[TLB.scala 93:18]
    node priv_s = bits(io.ptw.status.dprv, 0, 0) @[TLB.scala 96:20]
    node priv_uses_vm = leq(io.ptw.status.dprv, UInt<1>("h01")) @[TLB.scala 97:27]
    node _T_765 = bits(io.ptw.ptbr.mode, 3, 3) @[TLB.scala 98:53]
    node _T_766 = and(UInt<1>("h01"), _T_765) @[TLB.scala 98:34]
    node _T_767 = and(_T_766, priv_uses_vm) @[TLB.scala 98:83]
    node _T_769 = eq(io.req.bits.passthrough, UInt<1>("h00")) @[TLB.scala 98:102]
    node vm_enabled = and(_T_767, _T_769) @[TLB.scala 98:99]
    node refill_ppn = bits(io.ptw.resp.bits.pte.ppn, 19, 0) @[TLB.scala 101:44]
    node do_refill = and(UInt<1>("h01"), io.ptw.resp.valid) @[TLB.scala 102:33]
    node _T_771 = eq(state, UInt<2>("h01")) @[package.scala 14:47]
    node _T_772 = eq(state, UInt<2>("h03")) @[package.scala 14:47]
    node invalidate_refill = or(_T_771, _T_772) @[package.scala 14:62]
    node _T_773 = shr(io.req.bits.vaddr, 12) @[TLB.scala 105:69]
    node _T_774 = mux(vm_enabled, entries_32.ppn, _T_773) @[TLB.scala 105:20]
    node mpu_ppn = mux(do_refill, refill_ppn, _T_774) @[TLB.scala 104:20]
    node _T_775 = bits(io.req.bits.vaddr, 11, 0) @[TLB.scala 106:52]
    node mpu_physaddr = cat(mpu_ppn, _T_775) @[Cat.scala 30:58]
    inst pmp of PMPChecker @[TLB.scala 107:19]
    pmp.io is invalid
    pmp.clock <= clock
    pmp.reset <= reset
    pmp.io.addr <= mpu_physaddr @[TLB.scala 108:15]
    pmp.io.size <= io.req.bits.size @[TLB.scala 109:15]
    pmp.io.pmp[0] <- io.ptw.pmp[0] @[TLB.scala 110:14]
    pmp.io.pmp[1] <- io.ptw.pmp[1] @[TLB.scala 110:14]
    pmp.io.pmp[2] <- io.ptw.pmp[2] @[TLB.scala 110:14]
    pmp.io.pmp[3] <- io.ptw.pmp[3] @[TLB.scala 110:14]
    pmp.io.pmp[4] <- io.ptw.pmp[4] @[TLB.scala 110:14]
    pmp.io.pmp[5] <- io.ptw.pmp[5] @[TLB.scala 110:14]
    pmp.io.pmp[6] <- io.ptw.pmp[6] @[TLB.scala 110:14]
    pmp.io.pmp[7] <- io.ptw.pmp[7] @[TLB.scala 110:14]
    node _T_777 = or(do_refill, io.req.bits.passthrough) @[TLB.scala 111:49]
    node _T_778 = and(UInt<1>("h01"), _T_777) @[TLB.scala 111:35]
    node _T_780 = mux(_T_778, UInt<1>("h01"), io.ptw.status.dprv) @[TLB.scala 111:20]
    pmp.io.prv <= _T_780 @[TLB.scala 111:14]
    node _T_782 = xor(mpu_physaddr, UInt<28>("h0c000000")) @[Parameters.scala 153:31]
    node _T_783 = cvt(_T_782) @[Parameters.scala 153:49]
    node _T_785 = and(_T_783, asSInt(UInt<27>("h04000000"))) @[Parameters.scala 153:52]
    node _T_786 = asSInt(_T_785) @[Parameters.scala 153:52]
    node _T_788 = eq(_T_786, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_790 = xor(mpu_physaddr, UInt<26>("h02000000")) @[Parameters.scala 153:31]
    node _T_791 = cvt(_T_790) @[Parameters.scala 153:49]
    node _T_793 = and(_T_791, asSInt(UInt<17>("h010000"))) @[Parameters.scala 153:52]
    node _T_794 = asSInt(_T_793) @[Parameters.scala 153:52]
    node _T_796 = eq(_T_794, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_798 = xor(mpu_physaddr, UInt<1>("h00")) @[Parameters.scala 153:31]
    node _T_799 = cvt(_T_798) @[Parameters.scala 153:49]
    node _T_801 = and(_T_799, asSInt(UInt<13>("h01000"))) @[Parameters.scala 153:52]
    node _T_802 = asSInt(_T_801) @[Parameters.scala 153:52]
    node _T_804 = eq(_T_802, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_806 = xor(mpu_physaddr, UInt<17>("h010000")) @[Parameters.scala 153:31]
    node _T_807 = cvt(_T_806) @[Parameters.scala 153:49]
    node _T_809 = and(_T_807, asSInt(UInt<17>("h010000"))) @[Parameters.scala 153:52]
    node _T_810 = asSInt(_T_809) @[Parameters.scala 153:52]
    node _T_812 = eq(_T_810, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_814 = xor(mpu_physaddr, UInt<14>("h03000")) @[Parameters.scala 153:31]
    node _T_815 = cvt(_T_814) @[Parameters.scala 153:49]
    node _T_817 = and(_T_815, asSInt(UInt<13>("h01000"))) @[Parameters.scala 153:52]
    node _T_818 = asSInt(_T_817) @[Parameters.scala 153:52]
    node _T_820 = eq(_T_818, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_822 = xor(mpu_physaddr, UInt<32>("h080000000")) @[Parameters.scala 153:31]
    node _T_823 = cvt(_T_822) @[Parameters.scala 153:49]
    node _T_825 = and(_T_823, asSInt(UInt<29>("h010000000"))) @[Parameters.scala 153:52]
    node _T_826 = asSInt(_T_825) @[Parameters.scala 153:52]
    node _T_828 = eq(_T_826, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    wire _T_831 : UInt<1>[6] @[Parameters.scala 122:36]
    _T_831 is invalid @[Parameters.scala 122:36]
    _T_831[0] <= _T_788 @[Parameters.scala 122:36]
    _T_831[1] <= _T_796 @[Parameters.scala 122:36]
    _T_831[2] <= _T_804 @[Parameters.scala 122:36]
    _T_831[3] <= _T_812 @[Parameters.scala 122:36]
    _T_831[4] <= _T_820 @[Parameters.scala 122:36]
    _T_831[5] <= _T_828 @[Parameters.scala 122:36]
    node _T_840 = or(_T_831[0], _T_831[1]) @[TLB.scala 112:67]
    node _T_841 = or(_T_840, _T_831[2]) @[TLB.scala 112:67]
    node _T_842 = or(_T_841, _T_831[3]) @[TLB.scala 112:67]
    node _T_843 = or(_T_842, _T_831[4]) @[TLB.scala 112:67]
    node legal_address = or(_T_843, _T_831[5]) @[TLB.scala 112:67]
    node _T_845 = xor(mpu_physaddr, UInt<28>("h08000000")) @[Parameters.scala 153:31]
    node _T_846 = cvt(_T_845) @[Parameters.scala 153:49]
    node _T_848 = and(_T_846, asSInt(UInt<33>("h088000000"))) @[Parameters.scala 153:52]
    node _T_849 = asSInt(_T_848) @[Parameters.scala 153:52]
    node _T_851 = eq(_T_849, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_853 = xor(mpu_physaddr, UInt<26>("h02000000")) @[Parameters.scala 153:31]
    node _T_854 = cvt(_T_853) @[Parameters.scala 153:49]
    node _T_856 = and(_T_854, asSInt(UInt<33>("h08a010000"))) @[Parameters.scala 153:52]
    node _T_857 = asSInt(_T_856) @[Parameters.scala 153:52]
    node _T_859 = eq(_T_857, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_861 = xor(mpu_physaddr, UInt<1>("h00")) @[Parameters.scala 153:31]
    node _T_862 = cvt(_T_861) @[Parameters.scala 153:49]
    node _T_864 = and(_T_862, asSInt(UInt<33>("h08a012000"))) @[Parameters.scala 153:52]
    node _T_865 = asSInt(_T_864) @[Parameters.scala 153:52]
    node _T_867 = eq(_T_865, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_869 = xor(mpu_physaddr, UInt<17>("h010000")) @[Parameters.scala 153:31]
    node _T_870 = cvt(_T_869) @[Parameters.scala 153:49]
    node _T_872 = and(_T_870, asSInt(UInt<33>("h08a010000"))) @[Parameters.scala 153:52]
    node _T_873 = asSInt(_T_872) @[Parameters.scala 153:52]
    node _T_875 = eq(_T_873, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_876 = or(_T_851, _T_859) @[Parameters.scala 137:89]
    node _T_877 = or(_T_876, _T_867) @[Parameters.scala 137:89]
    node _T_878 = or(_T_877, _T_875) @[Parameters.scala 137:89]
    node _T_881 = xor(mpu_physaddr, UInt<14>("h02000")) @[Parameters.scala 153:31]
    node _T_882 = cvt(_T_881) @[Parameters.scala 153:49]
    node _T_884 = and(_T_882, asSInt(UInt<33>("h08a012000"))) @[Parameters.scala 153:52]
    node _T_885 = asSInt(_T_884) @[Parameters.scala 153:52]
    node _T_887 = eq(_T_885, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_889 = xor(mpu_physaddr, UInt<32>("h080000000")) @[Parameters.scala 153:31]
    node _T_890 = cvt(_T_889) @[Parameters.scala 153:49]
    node _T_892 = and(_T_890, asSInt(UInt<33>("h080000000"))) @[Parameters.scala 153:52]
    node _T_893 = asSInt(_T_892) @[Parameters.scala 153:52]
    node _T_895 = eq(_T_893, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_896 = or(_T_887, _T_895) @[Parameters.scala 137:89]
    node _T_900 = mux(_T_878, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_902 = mux(_T_896, UInt<1>("h01"), UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_903 = or(_T_900, _T_902) @[Mux.scala 19:72]
    wire _T_905 : UInt<1> @[Mux.scala 19:72]
    _T_905 <= _T_903 @[Mux.scala 19:72]
    node _T_906 = and(legal_address, _T_905) @[TLB.scala 114:19]
    node cacheable = and(_T_906, UInt<1>("h01")) @[TLB.scala 115:49]
    node _T_909 = xor(mpu_physaddr, UInt<28>("h0c000000")) @[Parameters.scala 153:31]
    node _T_910 = cvt(_T_909) @[Parameters.scala 153:49]
    node _T_912 = and(_T_910, asSInt(UInt<27>("h04000000"))) @[Parameters.scala 153:52]
    node _T_913 = asSInt(_T_912) @[Parameters.scala 153:52]
    node _T_915 = eq(_T_913, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_917 = xor(mpu_physaddr, UInt<26>("h02000000")) @[Parameters.scala 153:31]
    node _T_918 = cvt(_T_917) @[Parameters.scala 153:49]
    node _T_920 = and(_T_918, asSInt(UInt<17>("h010000"))) @[Parameters.scala 153:52]
    node _T_921 = asSInt(_T_920) @[Parameters.scala 153:52]
    node _T_923 = eq(_T_921, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_925 = xor(mpu_physaddr, UInt<14>("h03000")) @[Parameters.scala 153:31]
    node _T_926 = cvt(_T_925) @[Parameters.scala 153:49]
    node _T_928 = and(_T_926, asSInt(UInt<13>("h01000"))) @[Parameters.scala 153:52]
    node _T_929 = asSInt(_T_928) @[Parameters.scala 153:52]
    node _T_931 = eq(_T_929, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_933 = xor(mpu_physaddr, UInt<17>("h010000")) @[Parameters.scala 153:31]
    node _T_934 = cvt(_T_933) @[Parameters.scala 153:49]
    node _T_936 = and(_T_934, asSInt(UInt<17>("h010000"))) @[Parameters.scala 153:52]
    node _T_937 = asSInt(_T_936) @[Parameters.scala 153:52]
    node _T_939 = eq(_T_937, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_941 = xor(mpu_physaddr, UInt<32>("h080000000")) @[Parameters.scala 153:31]
    node _T_942 = cvt(_T_941) @[Parameters.scala 153:49]
    node _T_944 = and(_T_942, asSInt(UInt<29>("h010000000"))) @[Parameters.scala 153:52]
    node _T_945 = asSInt(_T_944) @[Parameters.scala 153:52]
    node _T_947 = eq(_T_945, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_949 = xor(mpu_physaddr, UInt<1>("h00")) @[Parameters.scala 153:31]
    node _T_950 = cvt(_T_949) @[Parameters.scala 153:49]
    node _T_952 = and(_T_950, asSInt(UInt<13>("h01000"))) @[Parameters.scala 153:52]
    node _T_953 = asSInt(_T_952) @[Parameters.scala 153:52]
    node _T_955 = eq(_T_953, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_957 = or(UInt<1>("h00"), _T_915) @[TLBPermissions.scala 91:65]
    node _T_958 = or(_T_957, _T_923) @[TLBPermissions.scala 91:65]
    node _T_959 = or(_T_958, _T_931) @[TLBPermissions.scala 91:65]
    node _T_960 = or(_T_959, _T_939) @[TLBPermissions.scala 91:65]
    node _T_961 = or(_T_960, _T_947) @[TLBPermissions.scala 91:65]
    node homogeneous = or(_T_961, _T_955) @[TLBPermissions.scala 91:65]
    node _T_964 = eq(UInt<1>("h00"), UInt<1>("h00")) @[TLBPermissions.scala 77:22]
    node _T_966 = xor(mpu_physaddr, UInt<17>("h010000")) @[Parameters.scala 153:31]
    node _T_967 = cvt(_T_966) @[Parameters.scala 153:49]
    node _T_969 = and(_T_967, asSInt(UInt<33>("h088010000"))) @[Parameters.scala 153:52]
    node _T_970 = asSInt(_T_969) @[Parameters.scala 153:52]
    node _T_972 = eq(_T_970, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_974 = or(UInt<1>("h00"), _T_972) @[TLBPermissions.scala 77:66]
    node _T_976 = eq(_T_974, UInt<1>("h00")) @[TLBPermissions.scala 77:22]
    node _T_978 = xor(mpu_physaddr, UInt<28>("h08000000")) @[Parameters.scala 153:31]
    node _T_979 = cvt(_T_978) @[Parameters.scala 153:49]
    node _T_981 = and(_T_979, asSInt(UInt<33>("h088000000"))) @[Parameters.scala 153:52]
    node _T_982 = asSInt(_T_981) @[Parameters.scala 153:52]
    node _T_984 = eq(_T_982, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_986 = xor(mpu_physaddr, UInt<26>("h02000000")) @[Parameters.scala 153:31]
    node _T_987 = cvt(_T_986) @[Parameters.scala 153:49]
    node _T_989 = and(_T_987, asSInt(UInt<33>("h08a000000"))) @[Parameters.scala 153:52]
    node _T_990 = asSInt(_T_989) @[Parameters.scala 153:52]
    node _T_992 = eq(_T_990, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_994 = or(UInt<1>("h00"), _T_984) @[TLBPermissions.scala 77:66]
    node _T_995 = or(_T_994, _T_992) @[TLBPermissions.scala 77:66]
    node _T_997 = eq(_T_995, UInt<1>("h00")) @[TLBPermissions.scala 77:22]
    node _T_999 = xor(mpu_physaddr, UInt<14>("h02000")) @[Parameters.scala 153:31]
    node _T_1000 = cvt(_T_999) @[Parameters.scala 153:49]
    node _T_1002 = and(_T_1000, asSInt(UInt<33>("h08a012000"))) @[Parameters.scala 153:52]
    node _T_1003 = asSInt(_T_1002) @[Parameters.scala 153:52]
    node _T_1005 = eq(_T_1003, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_1007 = xor(mpu_physaddr, UInt<32>("h080000000")) @[Parameters.scala 153:31]
    node _T_1008 = cvt(_T_1007) @[Parameters.scala 153:49]
    node _T_1010 = and(_T_1008, asSInt(UInt<33>("h080000000"))) @[Parameters.scala 153:52]
    node _T_1011 = asSInt(_T_1010) @[Parameters.scala 153:52]
    node _T_1013 = eq(_T_1011, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_1015 = or(UInt<1>("h00"), _T_1005) @[TLBPermissions.scala 75:66]
    node _T_1016 = or(_T_1015, _T_1013) @[TLBPermissions.scala 75:66]
    node _T_1018 = xor(mpu_physaddr, UInt<17>("h010000")) @[Parameters.scala 153:31]
    node _T_1019 = cvt(_T_1018) @[Parameters.scala 153:49]
    node _T_1021 = and(_T_1019, asSInt(UInt<33>("h088010000"))) @[Parameters.scala 153:52]
    node _T_1022 = asSInt(_T_1021) @[Parameters.scala 153:52]
    node _T_1024 = eq(_T_1022, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_1026 = xor(mpu_physaddr, UInt<32>("h080000000")) @[Parameters.scala 153:31]
    node _T_1027 = cvt(_T_1026) @[Parameters.scala 153:49]
    node _T_1029 = and(_T_1027, asSInt(UInt<33>("h080000000"))) @[Parameters.scala 153:52]
    node _T_1030 = asSInt(_T_1029) @[Parameters.scala 153:52]
    node _T_1032 = eq(_T_1030, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_1034 = or(UInt<1>("h00"), _T_1024) @[TLBPermissions.scala 77:66]
    node _T_1035 = or(_T_1034, _T_1032) @[TLBPermissions.scala 77:66]
    node _T_1037 = eq(_T_1035, UInt<1>("h00")) @[TLBPermissions.scala 77:22]
    node _T_1039 = xor(mpu_physaddr, UInt<17>("h010000")) @[Parameters.scala 153:31]
    node _T_1040 = cvt(_T_1039) @[Parameters.scala 153:49]
    node _T_1042 = and(_T_1040, asSInt(UInt<33>("h088010000"))) @[Parameters.scala 153:52]
    node _T_1043 = asSInt(_T_1042) @[Parameters.scala 153:52]
    node _T_1045 = eq(_T_1043, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_1047 = xor(mpu_physaddr, UInt<32>("h080000000")) @[Parameters.scala 153:31]
    node _T_1048 = cvt(_T_1047) @[Parameters.scala 153:49]
    node _T_1050 = and(_T_1048, asSInt(UInt<33>("h080000000"))) @[Parameters.scala 153:52]
    node _T_1051 = asSInt(_T_1050) @[Parameters.scala 153:52]
    node _T_1053 = eq(_T_1051, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_1055 = or(UInt<1>("h00"), _T_1045) @[TLBPermissions.scala 77:66]
    node _T_1056 = or(_T_1055, _T_1053) @[TLBPermissions.scala 77:66]
    node _T_1058 = eq(_T_1056, UInt<1>("h00")) @[TLBPermissions.scala 77:22]
    node _T_1060 = xor(mpu_physaddr, UInt<1>("h00")) @[Parameters.scala 153:31]
    node _T_1061 = cvt(_T_1060) @[Parameters.scala 153:49]
    node _T_1063 = and(_T_1061, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:52]
    node _T_1064 = asSInt(_T_1063) @[Parameters.scala 153:52]
    node _T_1066 = eq(_T_1064, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_1068 = and(legal_address, UInt<1>("h01")) @[TLB.scala 114:19]
    node prot_r = and(_T_1068, pmp.io.r) @[TLB.scala 117:41]
    node _T_1070 = xor(mpu_physaddr, UInt<17>("h010000")) @[Parameters.scala 153:31]
    node _T_1071 = cvt(_T_1070) @[Parameters.scala 153:49]
    node _T_1073 = and(_T_1071, asSInt(UInt<33>("h088010000"))) @[Parameters.scala 153:52]
    node _T_1074 = asSInt(_T_1073) @[Parameters.scala 153:52]
    node _T_1076 = eq(_T_1074, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_1079 = xor(mpu_physaddr, UInt<28>("h08000000")) @[Parameters.scala 153:31]
    node _T_1080 = cvt(_T_1079) @[Parameters.scala 153:49]
    node _T_1082 = and(_T_1080, asSInt(UInt<33>("h088000000"))) @[Parameters.scala 153:52]
    node _T_1083 = asSInt(_T_1082) @[Parameters.scala 153:52]
    node _T_1085 = eq(_T_1083, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_1087 = xor(mpu_physaddr, UInt<1>("h00")) @[Parameters.scala 153:31]
    node _T_1088 = cvt(_T_1087) @[Parameters.scala 153:49]
    node _T_1090 = and(_T_1088, asSInt(UInt<33>("h088010000"))) @[Parameters.scala 153:52]
    node _T_1091 = asSInt(_T_1090) @[Parameters.scala 153:52]
    node _T_1093 = eq(_T_1091, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_1095 = xor(mpu_physaddr, UInt<32>("h080000000")) @[Parameters.scala 153:31]
    node _T_1096 = cvt(_T_1095) @[Parameters.scala 153:49]
    node _T_1098 = and(_T_1096, asSInt(UInt<33>("h080000000"))) @[Parameters.scala 153:52]
    node _T_1099 = asSInt(_T_1098) @[Parameters.scala 153:52]
    node _T_1101 = eq(_T_1099, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_1102 = or(_T_1085, _T_1093) @[Parameters.scala 137:89]
    node _T_1103 = or(_T_1102, _T_1101) @[Parameters.scala 137:89]
    node _T_1107 = mux(_T_1076, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_1109 = mux(_T_1103, UInt<1>("h01"), UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_1110 = or(_T_1107, _T_1109) @[Mux.scala 19:72]
    wire _T_1112 : UInt<1> @[Mux.scala 19:72]
    _T_1112 <= _T_1110 @[Mux.scala 19:72]
    node _T_1113 = and(legal_address, _T_1112) @[TLB.scala 114:19]
    node prot_w = and(_T_1113, pmp.io.w) @[TLB.scala 118:45]
    node _T_1115 = xor(mpu_physaddr, UInt<17>("h010000")) @[Parameters.scala 153:31]
    node _T_1116 = cvt(_T_1115) @[Parameters.scala 153:49]
    node _T_1118 = and(_T_1116, asSInt(UInt<33>("h088010000"))) @[Parameters.scala 153:52]
    node _T_1119 = asSInt(_T_1118) @[Parameters.scala 153:52]
    node _T_1121 = eq(_T_1119, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_1123 = xor(mpu_physaddr, UInt<32>("h080000000")) @[Parameters.scala 153:31]
    node _T_1124 = cvt(_T_1123) @[Parameters.scala 153:49]
    node _T_1126 = and(_T_1124, asSInt(UInt<33>("h080000000"))) @[Parameters.scala 153:52]
    node _T_1127 = asSInt(_T_1126) @[Parameters.scala 153:52]
    node _T_1129 = eq(_T_1127, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_1130 = or(_T_1121, _T_1129) @[Parameters.scala 137:89]
    node _T_1133 = xor(mpu_physaddr, UInt<28>("h08000000")) @[Parameters.scala 153:31]
    node _T_1134 = cvt(_T_1133) @[Parameters.scala 153:49]
    node _T_1136 = and(_T_1134, asSInt(UInt<33>("h088000000"))) @[Parameters.scala 153:52]
    node _T_1137 = asSInt(_T_1136) @[Parameters.scala 153:52]
    node _T_1139 = eq(_T_1137, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_1141 = xor(mpu_physaddr, UInt<1>("h00")) @[Parameters.scala 153:31]
    node _T_1142 = cvt(_T_1141) @[Parameters.scala 153:49]
    node _T_1144 = and(_T_1142, asSInt(UInt<33>("h088010000"))) @[Parameters.scala 153:52]
    node _T_1145 = asSInt(_T_1144) @[Parameters.scala 153:52]
    node _T_1147 = eq(_T_1145, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_1148 = or(_T_1139, _T_1147) @[Parameters.scala 137:89]
    node _T_1152 = mux(_T_1130, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_1154 = mux(_T_1148, UInt<1>("h01"), UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_1155 = or(_T_1152, _T_1154) @[Mux.scala 19:72]
    wire _T_1157 : UInt<1> @[Mux.scala 19:72]
    _T_1157 <= _T_1155 @[Mux.scala 19:72]
    node _T_1158 = and(legal_address, _T_1157) @[TLB.scala 114:19]
    node _T_1160 = and(cacheable, UInt<1>("h01")) @[TLB.scala 119:60]
    node prot_al = or(_T_1158, _T_1160) @[TLB.scala 119:46]
    node _T_1162 = xor(mpu_physaddr, UInt<17>("h010000")) @[Parameters.scala 153:31]
    node _T_1163 = cvt(_T_1162) @[Parameters.scala 153:49]
    node _T_1165 = and(_T_1163, asSInt(UInt<33>("h088010000"))) @[Parameters.scala 153:52]
    node _T_1166 = asSInt(_T_1165) @[Parameters.scala 153:52]
    node _T_1168 = eq(_T_1166, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_1170 = xor(mpu_physaddr, UInt<32>("h080000000")) @[Parameters.scala 153:31]
    node _T_1171 = cvt(_T_1170) @[Parameters.scala 153:49]
    node _T_1173 = and(_T_1171, asSInt(UInt<33>("h080000000"))) @[Parameters.scala 153:52]
    node _T_1174 = asSInt(_T_1173) @[Parameters.scala 153:52]
    node _T_1176 = eq(_T_1174, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_1177 = or(_T_1168, _T_1176) @[Parameters.scala 137:89]
    node _T_1180 = xor(mpu_physaddr, UInt<28>("h08000000")) @[Parameters.scala 153:31]
    node _T_1181 = cvt(_T_1180) @[Parameters.scala 153:49]
    node _T_1183 = and(_T_1181, asSInt(UInt<33>("h088000000"))) @[Parameters.scala 153:52]
    node _T_1184 = asSInt(_T_1183) @[Parameters.scala 153:52]
    node _T_1186 = eq(_T_1184, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_1188 = xor(mpu_physaddr, UInt<1>("h00")) @[Parameters.scala 153:31]
    node _T_1189 = cvt(_T_1188) @[Parameters.scala 153:49]
    node _T_1191 = and(_T_1189, asSInt(UInt<33>("h088010000"))) @[Parameters.scala 153:52]
    node _T_1192 = asSInt(_T_1191) @[Parameters.scala 153:52]
    node _T_1194 = eq(_T_1192, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_1195 = or(_T_1186, _T_1194) @[Parameters.scala 137:89]
    node _T_1199 = mux(_T_1177, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_1201 = mux(_T_1195, UInt<1>("h01"), UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_1202 = or(_T_1199, _T_1201) @[Mux.scala 19:72]
    wire _T_1204 : UInt<1> @[Mux.scala 19:72]
    _T_1204 <= _T_1202 @[Mux.scala 19:72]
    node _T_1205 = and(legal_address, _T_1204) @[TLB.scala 114:19]
    node _T_1207 = and(cacheable, UInt<1>("h01")) @[TLB.scala 120:63]
    node prot_aa = or(_T_1205, _T_1207) @[TLB.scala 120:49]
    node _T_1209 = xor(mpu_physaddr, UInt<28>("h08000000")) @[Parameters.scala 153:31]
    node _T_1210 = cvt(_T_1209) @[Parameters.scala 153:49]
    node _T_1212 = and(_T_1210, asSInt(UInt<33>("h088000000"))) @[Parameters.scala 153:52]
    node _T_1213 = asSInt(_T_1212) @[Parameters.scala 153:52]
    node _T_1215 = eq(_T_1213, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_1217 = xor(mpu_physaddr, UInt<26>("h02000000")) @[Parameters.scala 153:31]
    node _T_1218 = cvt(_T_1217) @[Parameters.scala 153:49]
    node _T_1220 = and(_T_1218, asSInt(UInt<33>("h08a000000"))) @[Parameters.scala 153:52]
    node _T_1221 = asSInt(_T_1220) @[Parameters.scala 153:52]
    node _T_1223 = eq(_T_1221, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_1224 = or(_T_1215, _T_1223) @[Parameters.scala 137:89]
    node _T_1227 = xor(mpu_physaddr, UInt<1>("h00")) @[Parameters.scala 153:31]
    node _T_1228 = cvt(_T_1227) @[Parameters.scala 153:49]
    node _T_1230 = and(_T_1228, asSInt(UInt<33>("h08a000000"))) @[Parameters.scala 153:52]
    node _T_1231 = asSInt(_T_1230) @[Parameters.scala 153:52]
    node _T_1233 = eq(_T_1231, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_1235 = xor(mpu_physaddr, UInt<32>("h080000000")) @[Parameters.scala 153:31]
    node _T_1236 = cvt(_T_1235) @[Parameters.scala 153:49]
    node _T_1238 = and(_T_1236, asSInt(UInt<33>("h080000000"))) @[Parameters.scala 153:52]
    node _T_1239 = asSInt(_T_1238) @[Parameters.scala 153:52]
    node _T_1241 = eq(_T_1239, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_1242 = or(_T_1233, _T_1241) @[Parameters.scala 137:89]
    node _T_1246 = mux(_T_1224, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_1248 = mux(_T_1242, UInt<1>("h01"), UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_1249 = or(_T_1246, _T_1248) @[Mux.scala 19:72]
    wire _T_1251 : UInt<1> @[Mux.scala 19:72]
    _T_1251 <= _T_1249 @[Mux.scala 19:72]
    node _T_1252 = and(legal_address, _T_1251) @[TLB.scala 114:19]
    node prot_x = and(_T_1252, pmp.io.x) @[TLB.scala 121:40]
    node _T_1254 = xor(mpu_physaddr, UInt<17>("h010000")) @[Parameters.scala 153:31]
    node _T_1255 = cvt(_T_1254) @[Parameters.scala 153:49]
    node _T_1257 = and(_T_1255, asSInt(UInt<33>("h08a010000"))) @[Parameters.scala 153:52]
    node _T_1258 = asSInt(_T_1257) @[Parameters.scala 153:52]
    node _T_1260 = eq(_T_1258, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_1262 = xor(mpu_physaddr, UInt<14>("h02000")) @[Parameters.scala 153:31]
    node _T_1263 = cvt(_T_1262) @[Parameters.scala 153:49]
    node _T_1265 = and(_T_1263, asSInt(UInt<33>("h08a012000"))) @[Parameters.scala 153:52]
    node _T_1266 = asSInt(_T_1265) @[Parameters.scala 153:52]
    node _T_1268 = eq(_T_1266, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_1270 = xor(mpu_physaddr, UInt<32>("h080000000")) @[Parameters.scala 153:31]
    node _T_1271 = cvt(_T_1270) @[Parameters.scala 153:49]
    node _T_1273 = and(_T_1271, asSInt(UInt<33>("h080000000"))) @[Parameters.scala 153:52]
    node _T_1274 = asSInt(_T_1273) @[Parameters.scala 153:52]
    node _T_1276 = eq(_T_1274, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_1277 = or(_T_1260, _T_1268) @[Parameters.scala 137:89]
    node _T_1278 = or(_T_1277, _T_1276) @[Parameters.scala 137:89]
    node _T_1281 = xor(mpu_physaddr, UInt<28>("h08000000")) @[Parameters.scala 153:31]
    node _T_1282 = cvt(_T_1281) @[Parameters.scala 153:49]
    node _T_1284 = and(_T_1282, asSInt(UInt<33>("h088000000"))) @[Parameters.scala 153:52]
    node _T_1285 = asSInt(_T_1284) @[Parameters.scala 153:52]
    node _T_1287 = eq(_T_1285, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_1289 = xor(mpu_physaddr, UInt<26>("h02000000")) @[Parameters.scala 153:31]
    node _T_1290 = cvt(_T_1289) @[Parameters.scala 153:49]
    node _T_1292 = and(_T_1290, asSInt(UInt<33>("h08a010000"))) @[Parameters.scala 153:52]
    node _T_1293 = asSInt(_T_1292) @[Parameters.scala 153:52]
    node _T_1295 = eq(_T_1293, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_1297 = xor(mpu_physaddr, UInt<1>("h00")) @[Parameters.scala 153:31]
    node _T_1298 = cvt(_T_1297) @[Parameters.scala 153:49]
    node _T_1300 = and(_T_1298, asSInt(UInt<33>("h08a012000"))) @[Parameters.scala 153:52]
    node _T_1301 = asSInt(_T_1300) @[Parameters.scala 153:52]
    node _T_1303 = eq(_T_1301, asSInt(UInt<1>("h00"))) @[Parameters.scala 153:67]
    node _T_1304 = or(_T_1287, _T_1295) @[Parameters.scala 137:89]
    node _T_1305 = or(_T_1304, _T_1303) @[Parameters.scala 137:89]
    node _T_1309 = mux(_T_1278, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_1311 = mux(_T_1305, UInt<1>("h01"), UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_1312 = or(_T_1309, _T_1311) @[Mux.scala 19:72]
    wire _T_1314 : UInt<1> @[Mux.scala 19:72]
    _T_1314 <= _T_1312 @[Mux.scala 19:72]
    node prot_eff = and(legal_address, _T_1314) @[TLB.scala 114:19]
    node vpn = bits(io.req.bits.vaddr, 38, 12) @[TLB.scala 124:30]
    node lookup_tag = cat(io.ptw.ptbr.asid, vpn) @[Cat.scala 30:58]
    node _T_1315 = bits(valid, 0, 0) @[TLB.scala 127:25]
    node _T_1317 = lt(entries_0.level, UInt<1>("h00")) @[TLB.scala 130:48]
    node _T_1318 = bits(entries_0.tag, 26, 18) @[TLB.scala 130:69]
    node _T_1319 = bits(vpn, 26, 18) @[TLB.scala 130:107]
    node _T_1320 = eq(_T_1318, _T_1319) @[TLB.scala 130:100]
    node _T_1321 = or(_T_1317, _T_1320) @[TLB.scala 130:52]
    node _T_1322 = and(_T_1315, _T_1321) @[TLB.scala 130:27]
    node _T_1324 = lt(entries_0.level, UInt<1>("h01")) @[TLB.scala 130:48]
    node _T_1325 = bits(entries_0.tag, 17, 9) @[TLB.scala 130:69]
    node _T_1326 = bits(vpn, 17, 9) @[TLB.scala 130:107]
    node _T_1327 = eq(_T_1325, _T_1326) @[TLB.scala 130:100]
    node _T_1328 = or(_T_1324, _T_1327) @[TLB.scala 130:52]
    node _T_1329 = and(_T_1322, _T_1328) @[TLB.scala 130:27]
    node _T_1331 = lt(entries_0.level, UInt<2>("h02")) @[TLB.scala 130:48]
    node _T_1332 = bits(entries_0.tag, 8, 0) @[TLB.scala 130:69]
    node _T_1333 = bits(vpn, 8, 0) @[TLB.scala 130:107]
    node _T_1334 = eq(_T_1332, _T_1333) @[TLB.scala 130:100]
    node _T_1335 = or(_T_1331, _T_1334) @[TLB.scala 130:52]
    node _T_1336 = and(_T_1329, _T_1335) @[TLB.scala 130:27]
    node hitsVec_0 = and(vm_enabled, _T_1336) @[TLB.scala 126:89]
    node _T_1337 = bits(valid, 1, 1) @[TLB.scala 127:25]
    node _T_1339 = lt(entries_1.level, UInt<1>("h00")) @[TLB.scala 130:48]
    node _T_1340 = bits(entries_1.tag, 26, 18) @[TLB.scala 130:69]
    node _T_1341 = bits(vpn, 26, 18) @[TLB.scala 130:107]
    node _T_1342 = eq(_T_1340, _T_1341) @[TLB.scala 130:100]
    node _T_1343 = or(_T_1339, _T_1342) @[TLB.scala 130:52]
    node _T_1344 = and(_T_1337, _T_1343) @[TLB.scala 130:27]
    node _T_1346 = lt(entries_1.level, UInt<1>("h01")) @[TLB.scala 130:48]
    node _T_1347 = bits(entries_1.tag, 17, 9) @[TLB.scala 130:69]
    node _T_1348 = bits(vpn, 17, 9) @[TLB.scala 130:107]
    node _T_1349 = eq(_T_1347, _T_1348) @[TLB.scala 130:100]
    node _T_1350 = or(_T_1346, _T_1349) @[TLB.scala 130:52]
    node _T_1351 = and(_T_1344, _T_1350) @[TLB.scala 130:27]
    node _T_1353 = lt(entries_1.level, UInt<2>("h02")) @[TLB.scala 130:48]
    node _T_1354 = bits(entries_1.tag, 8, 0) @[TLB.scala 130:69]
    node _T_1355 = bits(vpn, 8, 0) @[TLB.scala 130:107]
    node _T_1356 = eq(_T_1354, _T_1355) @[TLB.scala 130:100]
    node _T_1357 = or(_T_1353, _T_1356) @[TLB.scala 130:52]
    node _T_1358 = and(_T_1351, _T_1357) @[TLB.scala 130:27]
    node hitsVec_1 = and(vm_enabled, _T_1358) @[TLB.scala 126:89]
    node _T_1359 = bits(valid, 2, 2) @[TLB.scala 127:25]
    node _T_1361 = lt(entries_2.level, UInt<1>("h00")) @[TLB.scala 130:48]
    node _T_1362 = bits(entries_2.tag, 26, 18) @[TLB.scala 130:69]
    node _T_1363 = bits(vpn, 26, 18) @[TLB.scala 130:107]
    node _T_1364 = eq(_T_1362, _T_1363) @[TLB.scala 130:100]
    node _T_1365 = or(_T_1361, _T_1364) @[TLB.scala 130:52]
    node _T_1366 = and(_T_1359, _T_1365) @[TLB.scala 130:27]
    node _T_1368 = lt(entries_2.level, UInt<1>("h01")) @[TLB.scala 130:48]
    node _T_1369 = bits(entries_2.tag, 17, 9) @[TLB.scala 130:69]
    node _T_1370 = bits(vpn, 17, 9) @[TLB.scala 130:107]
    node _T_1371 = eq(_T_1369, _T_1370) @[TLB.scala 130:100]
    node _T_1372 = or(_T_1368, _T_1371) @[TLB.scala 130:52]
    node _T_1373 = and(_T_1366, _T_1372) @[TLB.scala 130:27]
    node _T_1375 = lt(entries_2.level, UInt<2>("h02")) @[TLB.scala 130:48]
    node _T_1376 = bits(entries_2.tag, 8, 0) @[TLB.scala 130:69]
    node _T_1377 = bits(vpn, 8, 0) @[TLB.scala 130:107]
    node _T_1378 = eq(_T_1376, _T_1377) @[TLB.scala 130:100]
    node _T_1379 = or(_T_1375, _T_1378) @[TLB.scala 130:52]
    node _T_1380 = and(_T_1373, _T_1379) @[TLB.scala 130:27]
    node hitsVec_2 = and(vm_enabled, _T_1380) @[TLB.scala 126:89]
    node _T_1381 = bits(valid, 3, 3) @[TLB.scala 127:25]
    node _T_1383 = lt(entries_3.level, UInt<1>("h00")) @[TLB.scala 130:48]
    node _T_1384 = bits(entries_3.tag, 26, 18) @[TLB.scala 130:69]
    node _T_1385 = bits(vpn, 26, 18) @[TLB.scala 130:107]
    node _T_1386 = eq(_T_1384, _T_1385) @[TLB.scala 130:100]
    node _T_1387 = or(_T_1383, _T_1386) @[TLB.scala 130:52]
    node _T_1388 = and(_T_1381, _T_1387) @[TLB.scala 130:27]
    node _T_1390 = lt(entries_3.level, UInt<1>("h01")) @[TLB.scala 130:48]
    node _T_1391 = bits(entries_3.tag, 17, 9) @[TLB.scala 130:69]
    node _T_1392 = bits(vpn, 17, 9) @[TLB.scala 130:107]
    node _T_1393 = eq(_T_1391, _T_1392) @[TLB.scala 130:100]
    node _T_1394 = or(_T_1390, _T_1393) @[TLB.scala 130:52]
    node _T_1395 = and(_T_1388, _T_1394) @[TLB.scala 130:27]
    node _T_1397 = lt(entries_3.level, UInt<2>("h02")) @[TLB.scala 130:48]
    node _T_1398 = bits(entries_3.tag, 8, 0) @[TLB.scala 130:69]
    node _T_1399 = bits(vpn, 8, 0) @[TLB.scala 130:107]
    node _T_1400 = eq(_T_1398, _T_1399) @[TLB.scala 130:100]
    node _T_1401 = or(_T_1397, _T_1400) @[TLB.scala 130:52]
    node _T_1402 = and(_T_1395, _T_1401) @[TLB.scala 130:27]
    node hitsVec_3 = and(vm_enabled, _T_1402) @[TLB.scala 126:89]
    node _T_1403 = bits(valid, 4, 4) @[TLB.scala 127:25]
    node _T_1405 = lt(entries_4.level, UInt<1>("h00")) @[TLB.scala 130:48]
    node _T_1406 = bits(entries_4.tag, 26, 18) @[TLB.scala 130:69]
    node _T_1407 = bits(vpn, 26, 18) @[TLB.scala 130:107]
    node _T_1408 = eq(_T_1406, _T_1407) @[TLB.scala 130:100]
    node _T_1409 = or(_T_1405, _T_1408) @[TLB.scala 130:52]
    node _T_1410 = and(_T_1403, _T_1409) @[TLB.scala 130:27]
    node _T_1412 = lt(entries_4.level, UInt<1>("h01")) @[TLB.scala 130:48]
    node _T_1413 = bits(entries_4.tag, 17, 9) @[TLB.scala 130:69]
    node _T_1414 = bits(vpn, 17, 9) @[TLB.scala 130:107]
    node _T_1415 = eq(_T_1413, _T_1414) @[TLB.scala 130:100]
    node _T_1416 = or(_T_1412, _T_1415) @[TLB.scala 130:52]
    node _T_1417 = and(_T_1410, _T_1416) @[TLB.scala 130:27]
    node _T_1419 = lt(entries_4.level, UInt<2>("h02")) @[TLB.scala 130:48]
    node _T_1420 = bits(entries_4.tag, 8, 0) @[TLB.scala 130:69]
    node _T_1421 = bits(vpn, 8, 0) @[TLB.scala 130:107]
    node _T_1422 = eq(_T_1420, _T_1421) @[TLB.scala 130:100]
    node _T_1423 = or(_T_1419, _T_1422) @[TLB.scala 130:52]
    node _T_1424 = and(_T_1417, _T_1423) @[TLB.scala 130:27]
    node hitsVec_4 = and(vm_enabled, _T_1424) @[TLB.scala 126:89]
    node _T_1425 = bits(valid, 5, 5) @[TLB.scala 127:25]
    node _T_1427 = lt(entries_5.level, UInt<1>("h00")) @[TLB.scala 130:48]
    node _T_1428 = bits(entries_5.tag, 26, 18) @[TLB.scala 130:69]
    node _T_1429 = bits(vpn, 26, 18) @[TLB.scala 130:107]
    node _T_1430 = eq(_T_1428, _T_1429) @[TLB.scala 130:100]
    node _T_1431 = or(_T_1427, _T_1430) @[TLB.scala 130:52]
    node _T_1432 = and(_T_1425, _T_1431) @[TLB.scala 130:27]
    node _T_1434 = lt(entries_5.level, UInt<1>("h01")) @[TLB.scala 130:48]
    node _T_1435 = bits(entries_5.tag, 17, 9) @[TLB.scala 130:69]
    node _T_1436 = bits(vpn, 17, 9) @[TLB.scala 130:107]
    node _T_1437 = eq(_T_1435, _T_1436) @[TLB.scala 130:100]
    node _T_1438 = or(_T_1434, _T_1437) @[TLB.scala 130:52]
    node _T_1439 = and(_T_1432, _T_1438) @[TLB.scala 130:27]
    node _T_1441 = lt(entries_5.level, UInt<2>("h02")) @[TLB.scala 130:48]
    node _T_1442 = bits(entries_5.tag, 8, 0) @[TLB.scala 130:69]
    node _T_1443 = bits(vpn, 8, 0) @[TLB.scala 130:107]
    node _T_1444 = eq(_T_1442, _T_1443) @[TLB.scala 130:100]
    node _T_1445 = or(_T_1441, _T_1444) @[TLB.scala 130:52]
    node _T_1446 = and(_T_1439, _T_1445) @[TLB.scala 130:27]
    node hitsVec_5 = and(vm_enabled, _T_1446) @[TLB.scala 126:89]
    node _T_1447 = bits(valid, 6, 6) @[TLB.scala 127:25]
    node _T_1449 = lt(entries_6.level, UInt<1>("h00")) @[TLB.scala 130:48]
    node _T_1450 = bits(entries_6.tag, 26, 18) @[TLB.scala 130:69]
    node _T_1451 = bits(vpn, 26, 18) @[TLB.scala 130:107]
    node _T_1452 = eq(_T_1450, _T_1451) @[TLB.scala 130:100]
    node _T_1453 = or(_T_1449, _T_1452) @[TLB.scala 130:52]
    node _T_1454 = and(_T_1447, _T_1453) @[TLB.scala 130:27]
    node _T_1456 = lt(entries_6.level, UInt<1>("h01")) @[TLB.scala 130:48]
    node _T_1457 = bits(entries_6.tag, 17, 9) @[TLB.scala 130:69]
    node _T_1458 = bits(vpn, 17, 9) @[TLB.scala 130:107]
    node _T_1459 = eq(_T_1457, _T_1458) @[TLB.scala 130:100]
    node _T_1460 = or(_T_1456, _T_1459) @[TLB.scala 130:52]
    node _T_1461 = and(_T_1454, _T_1460) @[TLB.scala 130:27]
    node _T_1463 = lt(entries_6.level, UInt<2>("h02")) @[TLB.scala 130:48]
    node _T_1464 = bits(entries_6.tag, 8, 0) @[TLB.scala 130:69]
    node _T_1465 = bits(vpn, 8, 0) @[TLB.scala 130:107]
    node _T_1466 = eq(_T_1464, _T_1465) @[TLB.scala 130:100]
    node _T_1467 = or(_T_1463, _T_1466) @[TLB.scala 130:52]
    node _T_1468 = and(_T_1461, _T_1467) @[TLB.scala 130:27]
    node hitsVec_6 = and(vm_enabled, _T_1468) @[TLB.scala 126:89]
    node _T_1469 = bits(valid, 7, 7) @[TLB.scala 127:25]
    node _T_1471 = lt(entries_7.level, UInt<1>("h00")) @[TLB.scala 130:48]
    node _T_1472 = bits(entries_7.tag, 26, 18) @[TLB.scala 130:69]
    node _T_1473 = bits(vpn, 26, 18) @[TLB.scala 130:107]
    node _T_1474 = eq(_T_1472, _T_1473) @[TLB.scala 130:100]
    node _T_1475 = or(_T_1471, _T_1474) @[TLB.scala 130:52]
    node _T_1476 = and(_T_1469, _T_1475) @[TLB.scala 130:27]
    node _T_1478 = lt(entries_7.level, UInt<1>("h01")) @[TLB.scala 130:48]
    node _T_1479 = bits(entries_7.tag, 17, 9) @[TLB.scala 130:69]
    node _T_1480 = bits(vpn, 17, 9) @[TLB.scala 130:107]
    node _T_1481 = eq(_T_1479, _T_1480) @[TLB.scala 130:100]
    node _T_1482 = or(_T_1478, _T_1481) @[TLB.scala 130:52]
    node _T_1483 = and(_T_1476, _T_1482) @[TLB.scala 130:27]
    node _T_1485 = lt(entries_7.level, UInt<2>("h02")) @[TLB.scala 130:48]
    node _T_1486 = bits(entries_7.tag, 8, 0) @[TLB.scala 130:69]
    node _T_1487 = bits(vpn, 8, 0) @[TLB.scala 130:107]
    node _T_1488 = eq(_T_1486, _T_1487) @[TLB.scala 130:100]
    node _T_1489 = or(_T_1485, _T_1488) @[TLB.scala 130:52]
    node _T_1490 = and(_T_1483, _T_1489) @[TLB.scala 130:27]
    node hitsVec_7 = and(vm_enabled, _T_1490) @[TLB.scala 126:89]
    node _T_1491 = bits(valid, 8, 8) @[TLB.scala 127:25]
    node _T_1493 = lt(entries_8.level, UInt<1>("h00")) @[TLB.scala 130:48]
    node _T_1494 = bits(entries_8.tag, 26, 18) @[TLB.scala 130:69]
    node _T_1495 = bits(vpn, 26, 18) @[TLB.scala 130:107]
    node _T_1496 = eq(_T_1494, _T_1495) @[TLB.scala 130:100]
    node _T_1497 = or(_T_1493, _T_1496) @[TLB.scala 130:52]
    node _T_1498 = and(_T_1491, _T_1497) @[TLB.scala 130:27]
    node _T_1500 = lt(entries_8.level, UInt<1>("h01")) @[TLB.scala 130:48]
    node _T_1501 = bits(entries_8.tag, 17, 9) @[TLB.scala 130:69]
    node _T_1502 = bits(vpn, 17, 9) @[TLB.scala 130:107]
    node _T_1503 = eq(_T_1501, _T_1502) @[TLB.scala 130:100]
    node _T_1504 = or(_T_1500, _T_1503) @[TLB.scala 130:52]
    node _T_1505 = and(_T_1498, _T_1504) @[TLB.scala 130:27]
    node _T_1507 = lt(entries_8.level, UInt<2>("h02")) @[TLB.scala 130:48]
    node _T_1508 = bits(entries_8.tag, 8, 0) @[TLB.scala 130:69]
    node _T_1509 = bits(vpn, 8, 0) @[TLB.scala 130:107]
    node _T_1510 = eq(_T_1508, _T_1509) @[TLB.scala 130:100]
    node _T_1511 = or(_T_1507, _T_1510) @[TLB.scala 130:52]
    node _T_1512 = and(_T_1505, _T_1511) @[TLB.scala 130:27]
    node hitsVec_8 = and(vm_enabled, _T_1512) @[TLB.scala 126:89]
    node _T_1513 = bits(valid, 9, 9) @[TLB.scala 127:25]
    node _T_1515 = lt(entries_9.level, UInt<1>("h00")) @[TLB.scala 130:48]
    node _T_1516 = bits(entries_9.tag, 26, 18) @[TLB.scala 130:69]
    node _T_1517 = bits(vpn, 26, 18) @[TLB.scala 130:107]
    node _T_1518 = eq(_T_1516, _T_1517) @[TLB.scala 130:100]
    node _T_1519 = or(_T_1515, _T_1518) @[TLB.scala 130:52]
    node _T_1520 = and(_T_1513, _T_1519) @[TLB.scala 130:27]
    node _T_1522 = lt(entries_9.level, UInt<1>("h01")) @[TLB.scala 130:48]
    node _T_1523 = bits(entries_9.tag, 17, 9) @[TLB.scala 130:69]
    node _T_1524 = bits(vpn, 17, 9) @[TLB.scala 130:107]
    node _T_1525 = eq(_T_1523, _T_1524) @[TLB.scala 130:100]
    node _T_1526 = or(_T_1522, _T_1525) @[TLB.scala 130:52]
    node _T_1527 = and(_T_1520, _T_1526) @[TLB.scala 130:27]
    node _T_1529 = lt(entries_9.level, UInt<2>("h02")) @[TLB.scala 130:48]
    node _T_1530 = bits(entries_9.tag, 8, 0) @[TLB.scala 130:69]
    node _T_1531 = bits(vpn, 8, 0) @[TLB.scala 130:107]
    node _T_1532 = eq(_T_1530, _T_1531) @[TLB.scala 130:100]
    node _T_1533 = or(_T_1529, _T_1532) @[TLB.scala 130:52]
    node _T_1534 = and(_T_1527, _T_1533) @[TLB.scala 130:27]
    node hitsVec_9 = and(vm_enabled, _T_1534) @[TLB.scala 126:89]
    node _T_1535 = bits(valid, 10, 10) @[TLB.scala 127:25]
    node _T_1537 = lt(entries_10.level, UInt<1>("h00")) @[TLB.scala 130:48]
    node _T_1538 = bits(entries_10.tag, 26, 18) @[TLB.scala 130:69]
    node _T_1539 = bits(vpn, 26, 18) @[TLB.scala 130:107]
    node _T_1540 = eq(_T_1538, _T_1539) @[TLB.scala 130:100]
    node _T_1541 = or(_T_1537, _T_1540) @[TLB.scala 130:52]
    node _T_1542 = and(_T_1535, _T_1541) @[TLB.scala 130:27]
    node _T_1544 = lt(entries_10.level, UInt<1>("h01")) @[TLB.scala 130:48]
    node _T_1545 = bits(entries_10.tag, 17, 9) @[TLB.scala 130:69]
    node _T_1546 = bits(vpn, 17, 9) @[TLB.scala 130:107]
    node _T_1547 = eq(_T_1545, _T_1546) @[TLB.scala 130:100]
    node _T_1548 = or(_T_1544, _T_1547) @[TLB.scala 130:52]
    node _T_1549 = and(_T_1542, _T_1548) @[TLB.scala 130:27]
    node _T_1551 = lt(entries_10.level, UInt<2>("h02")) @[TLB.scala 130:48]
    node _T_1552 = bits(entries_10.tag, 8, 0) @[TLB.scala 130:69]
    node _T_1553 = bits(vpn, 8, 0) @[TLB.scala 130:107]
    node _T_1554 = eq(_T_1552, _T_1553) @[TLB.scala 130:100]
    node _T_1555 = or(_T_1551, _T_1554) @[TLB.scala 130:52]
    node _T_1556 = and(_T_1549, _T_1555) @[TLB.scala 130:27]
    node hitsVec_10 = and(vm_enabled, _T_1556) @[TLB.scala 126:89]
    node _T_1557 = bits(valid, 11, 11) @[TLB.scala 127:25]
    node _T_1559 = lt(entries_11.level, UInt<1>("h00")) @[TLB.scala 130:48]
    node _T_1560 = bits(entries_11.tag, 26, 18) @[TLB.scala 130:69]
    node _T_1561 = bits(vpn, 26, 18) @[TLB.scala 130:107]
    node _T_1562 = eq(_T_1560, _T_1561) @[TLB.scala 130:100]
    node _T_1563 = or(_T_1559, _T_1562) @[TLB.scala 130:52]
    node _T_1564 = and(_T_1557, _T_1563) @[TLB.scala 130:27]
    node _T_1566 = lt(entries_11.level, UInt<1>("h01")) @[TLB.scala 130:48]
    node _T_1567 = bits(entries_11.tag, 17, 9) @[TLB.scala 130:69]
    node _T_1568 = bits(vpn, 17, 9) @[TLB.scala 130:107]
    node _T_1569 = eq(_T_1567, _T_1568) @[TLB.scala 130:100]
    node _T_1570 = or(_T_1566, _T_1569) @[TLB.scala 130:52]
    node _T_1571 = and(_T_1564, _T_1570) @[TLB.scala 130:27]
    node _T_1573 = lt(entries_11.level, UInt<2>("h02")) @[TLB.scala 130:48]
    node _T_1574 = bits(entries_11.tag, 8, 0) @[TLB.scala 130:69]
    node _T_1575 = bits(vpn, 8, 0) @[TLB.scala 130:107]
    node _T_1576 = eq(_T_1574, _T_1575) @[TLB.scala 130:100]
    node _T_1577 = or(_T_1573, _T_1576) @[TLB.scala 130:52]
    node _T_1578 = and(_T_1571, _T_1577) @[TLB.scala 130:27]
    node hitsVec_11 = and(vm_enabled, _T_1578) @[TLB.scala 126:89]
    node _T_1579 = bits(valid, 12, 12) @[TLB.scala 127:25]
    node _T_1581 = lt(entries_12.level, UInt<1>("h00")) @[TLB.scala 130:48]
    node _T_1582 = bits(entries_12.tag, 26, 18) @[TLB.scala 130:69]
    node _T_1583 = bits(vpn, 26, 18) @[TLB.scala 130:107]
    node _T_1584 = eq(_T_1582, _T_1583) @[TLB.scala 130:100]
    node _T_1585 = or(_T_1581, _T_1584) @[TLB.scala 130:52]
    node _T_1586 = and(_T_1579, _T_1585) @[TLB.scala 130:27]
    node _T_1588 = lt(entries_12.level, UInt<1>("h01")) @[TLB.scala 130:48]
    node _T_1589 = bits(entries_12.tag, 17, 9) @[TLB.scala 130:69]
    node _T_1590 = bits(vpn, 17, 9) @[TLB.scala 130:107]
    node _T_1591 = eq(_T_1589, _T_1590) @[TLB.scala 130:100]
    node _T_1592 = or(_T_1588, _T_1591) @[TLB.scala 130:52]
    node _T_1593 = and(_T_1586, _T_1592) @[TLB.scala 130:27]
    node _T_1595 = lt(entries_12.level, UInt<2>("h02")) @[TLB.scala 130:48]
    node _T_1596 = bits(entries_12.tag, 8, 0) @[TLB.scala 130:69]
    node _T_1597 = bits(vpn, 8, 0) @[TLB.scala 130:107]
    node _T_1598 = eq(_T_1596, _T_1597) @[TLB.scala 130:100]
    node _T_1599 = or(_T_1595, _T_1598) @[TLB.scala 130:52]
    node _T_1600 = and(_T_1593, _T_1599) @[TLB.scala 130:27]
    node hitsVec_12 = and(vm_enabled, _T_1600) @[TLB.scala 126:89]
    node _T_1601 = bits(valid, 13, 13) @[TLB.scala 127:25]
    node _T_1603 = lt(entries_13.level, UInt<1>("h00")) @[TLB.scala 130:48]
    node _T_1604 = bits(entries_13.tag, 26, 18) @[TLB.scala 130:69]
    node _T_1605 = bits(vpn, 26, 18) @[TLB.scala 130:107]
    node _T_1606 = eq(_T_1604, _T_1605) @[TLB.scala 130:100]
    node _T_1607 = or(_T_1603, _T_1606) @[TLB.scala 130:52]
    node _T_1608 = and(_T_1601, _T_1607) @[TLB.scala 130:27]
    node _T_1610 = lt(entries_13.level, UInt<1>("h01")) @[TLB.scala 130:48]
    node _T_1611 = bits(entries_13.tag, 17, 9) @[TLB.scala 130:69]
    node _T_1612 = bits(vpn, 17, 9) @[TLB.scala 130:107]
    node _T_1613 = eq(_T_1611, _T_1612) @[TLB.scala 130:100]
    node _T_1614 = or(_T_1610, _T_1613) @[TLB.scala 130:52]
    node _T_1615 = and(_T_1608, _T_1614) @[TLB.scala 130:27]
    node _T_1617 = lt(entries_13.level, UInt<2>("h02")) @[TLB.scala 130:48]
    node _T_1618 = bits(entries_13.tag, 8, 0) @[TLB.scala 130:69]
    node _T_1619 = bits(vpn, 8, 0) @[TLB.scala 130:107]
    node _T_1620 = eq(_T_1618, _T_1619) @[TLB.scala 130:100]
    node _T_1621 = or(_T_1617, _T_1620) @[TLB.scala 130:52]
    node _T_1622 = and(_T_1615, _T_1621) @[TLB.scala 130:27]
    node hitsVec_13 = and(vm_enabled, _T_1622) @[TLB.scala 126:89]
    node _T_1623 = bits(valid, 14, 14) @[TLB.scala 127:25]
    node _T_1625 = lt(entries_14.level, UInt<1>("h00")) @[TLB.scala 130:48]
    node _T_1626 = bits(entries_14.tag, 26, 18) @[TLB.scala 130:69]
    node _T_1627 = bits(vpn, 26, 18) @[TLB.scala 130:107]
    node _T_1628 = eq(_T_1626, _T_1627) @[TLB.scala 130:100]
    node _T_1629 = or(_T_1625, _T_1628) @[TLB.scala 130:52]
    node _T_1630 = and(_T_1623, _T_1629) @[TLB.scala 130:27]
    node _T_1632 = lt(entries_14.level, UInt<1>("h01")) @[TLB.scala 130:48]
    node _T_1633 = bits(entries_14.tag, 17, 9) @[TLB.scala 130:69]
    node _T_1634 = bits(vpn, 17, 9) @[TLB.scala 130:107]
    node _T_1635 = eq(_T_1633, _T_1634) @[TLB.scala 130:100]
    node _T_1636 = or(_T_1632, _T_1635) @[TLB.scala 130:52]
    node _T_1637 = and(_T_1630, _T_1636) @[TLB.scala 130:27]
    node _T_1639 = lt(entries_14.level, UInt<2>("h02")) @[TLB.scala 130:48]
    node _T_1640 = bits(entries_14.tag, 8, 0) @[TLB.scala 130:69]
    node _T_1641 = bits(vpn, 8, 0) @[TLB.scala 130:107]
    node _T_1642 = eq(_T_1640, _T_1641) @[TLB.scala 130:100]
    node _T_1643 = or(_T_1639, _T_1642) @[TLB.scala 130:52]
    node _T_1644 = and(_T_1637, _T_1643) @[TLB.scala 130:27]
    node hitsVec_14 = and(vm_enabled, _T_1644) @[TLB.scala 126:89]
    node _T_1645 = bits(valid, 15, 15) @[TLB.scala 127:25]
    node _T_1647 = lt(entries_15.level, UInt<1>("h00")) @[TLB.scala 130:48]
    node _T_1648 = bits(entries_15.tag, 26, 18) @[TLB.scala 130:69]
    node _T_1649 = bits(vpn, 26, 18) @[TLB.scala 130:107]
    node _T_1650 = eq(_T_1648, _T_1649) @[TLB.scala 130:100]
    node _T_1651 = or(_T_1647, _T_1650) @[TLB.scala 130:52]
    node _T_1652 = and(_T_1645, _T_1651) @[TLB.scala 130:27]
    node _T_1654 = lt(entries_15.level, UInt<1>("h01")) @[TLB.scala 130:48]
    node _T_1655 = bits(entries_15.tag, 17, 9) @[TLB.scala 130:69]
    node _T_1656 = bits(vpn, 17, 9) @[TLB.scala 130:107]
    node _T_1657 = eq(_T_1655, _T_1656) @[TLB.scala 130:100]
    node _T_1658 = or(_T_1654, _T_1657) @[TLB.scala 130:52]
    node _T_1659 = and(_T_1652, _T_1658) @[TLB.scala 130:27]
    node _T_1661 = lt(entries_15.level, UInt<2>("h02")) @[TLB.scala 130:48]
    node _T_1662 = bits(entries_15.tag, 8, 0) @[TLB.scala 130:69]
    node _T_1663 = bits(vpn, 8, 0) @[TLB.scala 130:107]
    node _T_1664 = eq(_T_1662, _T_1663) @[TLB.scala 130:100]
    node _T_1665 = or(_T_1661, _T_1664) @[TLB.scala 130:52]
    node _T_1666 = and(_T_1659, _T_1665) @[TLB.scala 130:27]
    node hitsVec_15 = and(vm_enabled, _T_1666) @[TLB.scala 126:89]
    node _T_1667 = bits(valid, 16, 16) @[TLB.scala 127:25]
    node _T_1669 = lt(entries_16.level, UInt<1>("h00")) @[TLB.scala 130:48]
    node _T_1670 = bits(entries_16.tag, 26, 18) @[TLB.scala 130:69]
    node _T_1671 = bits(vpn, 26, 18) @[TLB.scala 130:107]
    node _T_1672 = eq(_T_1670, _T_1671) @[TLB.scala 130:100]
    node _T_1673 = or(_T_1669, _T_1672) @[TLB.scala 130:52]
    node _T_1674 = and(_T_1667, _T_1673) @[TLB.scala 130:27]
    node _T_1676 = lt(entries_16.level, UInt<1>("h01")) @[TLB.scala 130:48]
    node _T_1677 = bits(entries_16.tag, 17, 9) @[TLB.scala 130:69]
    node _T_1678 = bits(vpn, 17, 9) @[TLB.scala 130:107]
    node _T_1679 = eq(_T_1677, _T_1678) @[TLB.scala 130:100]
    node _T_1680 = or(_T_1676, _T_1679) @[TLB.scala 130:52]
    node _T_1681 = and(_T_1674, _T_1680) @[TLB.scala 130:27]
    node _T_1683 = lt(entries_16.level, UInt<2>("h02")) @[TLB.scala 130:48]
    node _T_1684 = bits(entries_16.tag, 8, 0) @[TLB.scala 130:69]
    node _T_1685 = bits(vpn, 8, 0) @[TLB.scala 130:107]
    node _T_1686 = eq(_T_1684, _T_1685) @[TLB.scala 130:100]
    node _T_1687 = or(_T_1683, _T_1686) @[TLB.scala 130:52]
    node _T_1688 = and(_T_1681, _T_1687) @[TLB.scala 130:27]
    node hitsVec_16 = and(vm_enabled, _T_1688) @[TLB.scala 126:89]
    node _T_1689 = bits(valid, 17, 17) @[TLB.scala 127:25]
    node _T_1691 = lt(entries_17.level, UInt<1>("h00")) @[TLB.scala 130:48]
    node _T_1692 = bits(entries_17.tag, 26, 18) @[TLB.scala 130:69]
    node _T_1693 = bits(vpn, 26, 18) @[TLB.scala 130:107]
    node _T_1694 = eq(_T_1692, _T_1693) @[TLB.scala 130:100]
    node _T_1695 = or(_T_1691, _T_1694) @[TLB.scala 130:52]
    node _T_1696 = and(_T_1689, _T_1695) @[TLB.scala 130:27]
    node _T_1698 = lt(entries_17.level, UInt<1>("h01")) @[TLB.scala 130:48]
    node _T_1699 = bits(entries_17.tag, 17, 9) @[TLB.scala 130:69]
    node _T_1700 = bits(vpn, 17, 9) @[TLB.scala 130:107]
    node _T_1701 = eq(_T_1699, _T_1700) @[TLB.scala 130:100]
    node _T_1702 = or(_T_1698, _T_1701) @[TLB.scala 130:52]
    node _T_1703 = and(_T_1696, _T_1702) @[TLB.scala 130:27]
    node _T_1705 = lt(entries_17.level, UInt<2>("h02")) @[TLB.scala 130:48]
    node _T_1706 = bits(entries_17.tag, 8, 0) @[TLB.scala 130:69]
    node _T_1707 = bits(vpn, 8, 0) @[TLB.scala 130:107]
    node _T_1708 = eq(_T_1706, _T_1707) @[TLB.scala 130:100]
    node _T_1709 = or(_T_1705, _T_1708) @[TLB.scala 130:52]
    node _T_1710 = and(_T_1703, _T_1709) @[TLB.scala 130:27]
    node hitsVec_17 = and(vm_enabled, _T_1710) @[TLB.scala 126:89]
    node _T_1711 = bits(valid, 18, 18) @[TLB.scala 127:25]
    node _T_1713 = lt(entries_18.level, UInt<1>("h00")) @[TLB.scala 130:48]
    node _T_1714 = bits(entries_18.tag, 26, 18) @[TLB.scala 130:69]
    node _T_1715 = bits(vpn, 26, 18) @[TLB.scala 130:107]
    node _T_1716 = eq(_T_1714, _T_1715) @[TLB.scala 130:100]
    node _T_1717 = or(_T_1713, _T_1716) @[TLB.scala 130:52]
    node _T_1718 = and(_T_1711, _T_1717) @[TLB.scala 130:27]
    node _T_1720 = lt(entries_18.level, UInt<1>("h01")) @[TLB.scala 130:48]
    node _T_1721 = bits(entries_18.tag, 17, 9) @[TLB.scala 130:69]
    node _T_1722 = bits(vpn, 17, 9) @[TLB.scala 130:107]
    node _T_1723 = eq(_T_1721, _T_1722) @[TLB.scala 130:100]
    node _T_1724 = or(_T_1720, _T_1723) @[TLB.scala 130:52]
    node _T_1725 = and(_T_1718, _T_1724) @[TLB.scala 130:27]
    node _T_1727 = lt(entries_18.level, UInt<2>("h02")) @[TLB.scala 130:48]
    node _T_1728 = bits(entries_18.tag, 8, 0) @[TLB.scala 130:69]
    node _T_1729 = bits(vpn, 8, 0) @[TLB.scala 130:107]
    node _T_1730 = eq(_T_1728, _T_1729) @[TLB.scala 130:100]
    node _T_1731 = or(_T_1727, _T_1730) @[TLB.scala 130:52]
    node _T_1732 = and(_T_1725, _T_1731) @[TLB.scala 130:27]
    node hitsVec_18 = and(vm_enabled, _T_1732) @[TLB.scala 126:89]
    node _T_1733 = bits(valid, 19, 19) @[TLB.scala 127:25]
    node _T_1735 = lt(entries_19.level, UInt<1>("h00")) @[TLB.scala 130:48]
    node _T_1736 = bits(entries_19.tag, 26, 18) @[TLB.scala 130:69]
    node _T_1737 = bits(vpn, 26, 18) @[TLB.scala 130:107]
    node _T_1738 = eq(_T_1736, _T_1737) @[TLB.scala 130:100]
    node _T_1739 = or(_T_1735, _T_1738) @[TLB.scala 130:52]
    node _T_1740 = and(_T_1733, _T_1739) @[TLB.scala 130:27]
    node _T_1742 = lt(entries_19.level, UInt<1>("h01")) @[TLB.scala 130:48]
    node _T_1743 = bits(entries_19.tag, 17, 9) @[TLB.scala 130:69]
    node _T_1744 = bits(vpn, 17, 9) @[TLB.scala 130:107]
    node _T_1745 = eq(_T_1743, _T_1744) @[TLB.scala 130:100]
    node _T_1746 = or(_T_1742, _T_1745) @[TLB.scala 130:52]
    node _T_1747 = and(_T_1740, _T_1746) @[TLB.scala 130:27]
    node _T_1749 = lt(entries_19.level, UInt<2>("h02")) @[TLB.scala 130:48]
    node _T_1750 = bits(entries_19.tag, 8, 0) @[TLB.scala 130:69]
    node _T_1751 = bits(vpn, 8, 0) @[TLB.scala 130:107]
    node _T_1752 = eq(_T_1750, _T_1751) @[TLB.scala 130:100]
    node _T_1753 = or(_T_1749, _T_1752) @[TLB.scala 130:52]
    node _T_1754 = and(_T_1747, _T_1753) @[TLB.scala 130:27]
    node hitsVec_19 = and(vm_enabled, _T_1754) @[TLB.scala 126:89]
    node _T_1755 = bits(valid, 20, 20) @[TLB.scala 127:25]
    node _T_1757 = lt(entries_20.level, UInt<1>("h00")) @[TLB.scala 130:48]
    node _T_1758 = bits(entries_20.tag, 26, 18) @[TLB.scala 130:69]
    node _T_1759 = bits(vpn, 26, 18) @[TLB.scala 130:107]
    node _T_1760 = eq(_T_1758, _T_1759) @[TLB.scala 130:100]
    node _T_1761 = or(_T_1757, _T_1760) @[TLB.scala 130:52]
    node _T_1762 = and(_T_1755, _T_1761) @[TLB.scala 130:27]
    node _T_1764 = lt(entries_20.level, UInt<1>("h01")) @[TLB.scala 130:48]
    node _T_1765 = bits(entries_20.tag, 17, 9) @[TLB.scala 130:69]
    node _T_1766 = bits(vpn, 17, 9) @[TLB.scala 130:107]
    node _T_1767 = eq(_T_1765, _T_1766) @[TLB.scala 130:100]
    node _T_1768 = or(_T_1764, _T_1767) @[TLB.scala 130:52]
    node _T_1769 = and(_T_1762, _T_1768) @[TLB.scala 130:27]
    node _T_1771 = lt(entries_20.level, UInt<2>("h02")) @[TLB.scala 130:48]
    node _T_1772 = bits(entries_20.tag, 8, 0) @[TLB.scala 130:69]
    node _T_1773 = bits(vpn, 8, 0) @[TLB.scala 130:107]
    node _T_1774 = eq(_T_1772, _T_1773) @[TLB.scala 130:100]
    node _T_1775 = or(_T_1771, _T_1774) @[TLB.scala 130:52]
    node _T_1776 = and(_T_1769, _T_1775) @[TLB.scala 130:27]
    node hitsVec_20 = and(vm_enabled, _T_1776) @[TLB.scala 126:89]
    node _T_1777 = bits(valid, 21, 21) @[TLB.scala 127:25]
    node _T_1779 = lt(entries_21.level, UInt<1>("h00")) @[TLB.scala 130:48]
    node _T_1780 = bits(entries_21.tag, 26, 18) @[TLB.scala 130:69]
    node _T_1781 = bits(vpn, 26, 18) @[TLB.scala 130:107]
    node _T_1782 = eq(_T_1780, _T_1781) @[TLB.scala 130:100]
    node _T_1783 = or(_T_1779, _T_1782) @[TLB.scala 130:52]
    node _T_1784 = and(_T_1777, _T_1783) @[TLB.scala 130:27]
    node _T_1786 = lt(entries_21.level, UInt<1>("h01")) @[TLB.scala 130:48]
    node _T_1787 = bits(entries_21.tag, 17, 9) @[TLB.scala 130:69]
    node _T_1788 = bits(vpn, 17, 9) @[TLB.scala 130:107]
    node _T_1789 = eq(_T_1787, _T_1788) @[TLB.scala 130:100]
    node _T_1790 = or(_T_1786, _T_1789) @[TLB.scala 130:52]
    node _T_1791 = and(_T_1784, _T_1790) @[TLB.scala 130:27]
    node _T_1793 = lt(entries_21.level, UInt<2>("h02")) @[TLB.scala 130:48]
    node _T_1794 = bits(entries_21.tag, 8, 0) @[TLB.scala 130:69]
    node _T_1795 = bits(vpn, 8, 0) @[TLB.scala 130:107]
    node _T_1796 = eq(_T_1794, _T_1795) @[TLB.scala 130:100]
    node _T_1797 = or(_T_1793, _T_1796) @[TLB.scala 130:52]
    node _T_1798 = and(_T_1791, _T_1797) @[TLB.scala 130:27]
    node hitsVec_21 = and(vm_enabled, _T_1798) @[TLB.scala 126:89]
    node _T_1799 = bits(valid, 22, 22) @[TLB.scala 127:25]
    node _T_1801 = lt(entries_22.level, UInt<1>("h00")) @[TLB.scala 130:48]
    node _T_1802 = bits(entries_22.tag, 26, 18) @[TLB.scala 130:69]
    node _T_1803 = bits(vpn, 26, 18) @[TLB.scala 130:107]
    node _T_1804 = eq(_T_1802, _T_1803) @[TLB.scala 130:100]
    node _T_1805 = or(_T_1801, _T_1804) @[TLB.scala 130:52]
    node _T_1806 = and(_T_1799, _T_1805) @[TLB.scala 130:27]
    node _T_1808 = lt(entries_22.level, UInt<1>("h01")) @[TLB.scala 130:48]
    node _T_1809 = bits(entries_22.tag, 17, 9) @[TLB.scala 130:69]
    node _T_1810 = bits(vpn, 17, 9) @[TLB.scala 130:107]
    node _T_1811 = eq(_T_1809, _T_1810) @[TLB.scala 130:100]
    node _T_1812 = or(_T_1808, _T_1811) @[TLB.scala 130:52]
    node _T_1813 = and(_T_1806, _T_1812) @[TLB.scala 130:27]
    node _T_1815 = lt(entries_22.level, UInt<2>("h02")) @[TLB.scala 130:48]
    node _T_1816 = bits(entries_22.tag, 8, 0) @[TLB.scala 130:69]
    node _T_1817 = bits(vpn, 8, 0) @[TLB.scala 130:107]
    node _T_1818 = eq(_T_1816, _T_1817) @[TLB.scala 130:100]
    node _T_1819 = or(_T_1815, _T_1818) @[TLB.scala 130:52]
    node _T_1820 = and(_T_1813, _T_1819) @[TLB.scala 130:27]
    node hitsVec_22 = and(vm_enabled, _T_1820) @[TLB.scala 126:89]
    node _T_1821 = bits(valid, 23, 23) @[TLB.scala 127:25]
    node _T_1823 = lt(entries_23.level, UInt<1>("h00")) @[TLB.scala 130:48]
    node _T_1824 = bits(entries_23.tag, 26, 18) @[TLB.scala 130:69]
    node _T_1825 = bits(vpn, 26, 18) @[TLB.scala 130:107]
    node _T_1826 = eq(_T_1824, _T_1825) @[TLB.scala 130:100]
    node _T_1827 = or(_T_1823, _T_1826) @[TLB.scala 130:52]
    node _T_1828 = and(_T_1821, _T_1827) @[TLB.scala 130:27]
    node _T_1830 = lt(entries_23.level, UInt<1>("h01")) @[TLB.scala 130:48]
    node _T_1831 = bits(entries_23.tag, 17, 9) @[TLB.scala 130:69]
    node _T_1832 = bits(vpn, 17, 9) @[TLB.scala 130:107]
    node _T_1833 = eq(_T_1831, _T_1832) @[TLB.scala 130:100]
    node _T_1834 = or(_T_1830, _T_1833) @[TLB.scala 130:52]
    node _T_1835 = and(_T_1828, _T_1834) @[TLB.scala 130:27]
    node _T_1837 = lt(entries_23.level, UInt<2>("h02")) @[TLB.scala 130:48]
    node _T_1838 = bits(entries_23.tag, 8, 0) @[TLB.scala 130:69]
    node _T_1839 = bits(vpn, 8, 0) @[TLB.scala 130:107]
    node _T_1840 = eq(_T_1838, _T_1839) @[TLB.scala 130:100]
    node _T_1841 = or(_T_1837, _T_1840) @[TLB.scala 130:52]
    node _T_1842 = and(_T_1835, _T_1841) @[TLB.scala 130:27]
    node hitsVec_23 = and(vm_enabled, _T_1842) @[TLB.scala 126:89]
    node _T_1843 = bits(valid, 24, 24) @[TLB.scala 127:25]
    node _T_1845 = lt(entries_24.level, UInt<1>("h00")) @[TLB.scala 130:48]
    node _T_1846 = bits(entries_24.tag, 26, 18) @[TLB.scala 130:69]
    node _T_1847 = bits(vpn, 26, 18) @[TLB.scala 130:107]
    node _T_1848 = eq(_T_1846, _T_1847) @[TLB.scala 130:100]
    node _T_1849 = or(_T_1845, _T_1848) @[TLB.scala 130:52]
    node _T_1850 = and(_T_1843, _T_1849) @[TLB.scala 130:27]
    node _T_1852 = lt(entries_24.level, UInt<1>("h01")) @[TLB.scala 130:48]
    node _T_1853 = bits(entries_24.tag, 17, 9) @[TLB.scala 130:69]
    node _T_1854 = bits(vpn, 17, 9) @[TLB.scala 130:107]
    node _T_1855 = eq(_T_1853, _T_1854) @[TLB.scala 130:100]
    node _T_1856 = or(_T_1852, _T_1855) @[TLB.scala 130:52]
    node _T_1857 = and(_T_1850, _T_1856) @[TLB.scala 130:27]
    node _T_1859 = lt(entries_24.level, UInt<2>("h02")) @[TLB.scala 130:48]
    node _T_1860 = bits(entries_24.tag, 8, 0) @[TLB.scala 130:69]
    node _T_1861 = bits(vpn, 8, 0) @[TLB.scala 130:107]
    node _T_1862 = eq(_T_1860, _T_1861) @[TLB.scala 130:100]
    node _T_1863 = or(_T_1859, _T_1862) @[TLB.scala 130:52]
    node _T_1864 = and(_T_1857, _T_1863) @[TLB.scala 130:27]
    node hitsVec_24 = and(vm_enabled, _T_1864) @[TLB.scala 126:89]
    node _T_1865 = bits(valid, 25, 25) @[TLB.scala 127:25]
    node _T_1867 = lt(entries_25.level, UInt<1>("h00")) @[TLB.scala 130:48]
    node _T_1868 = bits(entries_25.tag, 26, 18) @[TLB.scala 130:69]
    node _T_1869 = bits(vpn, 26, 18) @[TLB.scala 130:107]
    node _T_1870 = eq(_T_1868, _T_1869) @[TLB.scala 130:100]
    node _T_1871 = or(_T_1867, _T_1870) @[TLB.scala 130:52]
    node _T_1872 = and(_T_1865, _T_1871) @[TLB.scala 130:27]
    node _T_1874 = lt(entries_25.level, UInt<1>("h01")) @[TLB.scala 130:48]
    node _T_1875 = bits(entries_25.tag, 17, 9) @[TLB.scala 130:69]
    node _T_1876 = bits(vpn, 17, 9) @[TLB.scala 130:107]
    node _T_1877 = eq(_T_1875, _T_1876) @[TLB.scala 130:100]
    node _T_1878 = or(_T_1874, _T_1877) @[TLB.scala 130:52]
    node _T_1879 = and(_T_1872, _T_1878) @[TLB.scala 130:27]
    node _T_1881 = lt(entries_25.level, UInt<2>("h02")) @[TLB.scala 130:48]
    node _T_1882 = bits(entries_25.tag, 8, 0) @[TLB.scala 130:69]
    node _T_1883 = bits(vpn, 8, 0) @[TLB.scala 130:107]
    node _T_1884 = eq(_T_1882, _T_1883) @[TLB.scala 130:100]
    node _T_1885 = or(_T_1881, _T_1884) @[TLB.scala 130:52]
    node _T_1886 = and(_T_1879, _T_1885) @[TLB.scala 130:27]
    node hitsVec_25 = and(vm_enabled, _T_1886) @[TLB.scala 126:89]
    node _T_1887 = bits(valid, 26, 26) @[TLB.scala 127:25]
    node _T_1889 = lt(entries_26.level, UInt<1>("h00")) @[TLB.scala 130:48]
    node _T_1890 = bits(entries_26.tag, 26, 18) @[TLB.scala 130:69]
    node _T_1891 = bits(vpn, 26, 18) @[TLB.scala 130:107]
    node _T_1892 = eq(_T_1890, _T_1891) @[TLB.scala 130:100]
    node _T_1893 = or(_T_1889, _T_1892) @[TLB.scala 130:52]
    node _T_1894 = and(_T_1887, _T_1893) @[TLB.scala 130:27]
    node _T_1896 = lt(entries_26.level, UInt<1>("h01")) @[TLB.scala 130:48]
    node _T_1897 = bits(entries_26.tag, 17, 9) @[TLB.scala 130:69]
    node _T_1898 = bits(vpn, 17, 9) @[TLB.scala 130:107]
    node _T_1899 = eq(_T_1897, _T_1898) @[TLB.scala 130:100]
    node _T_1900 = or(_T_1896, _T_1899) @[TLB.scala 130:52]
    node _T_1901 = and(_T_1894, _T_1900) @[TLB.scala 130:27]
    node _T_1903 = lt(entries_26.level, UInt<2>("h02")) @[TLB.scala 130:48]
    node _T_1904 = bits(entries_26.tag, 8, 0) @[TLB.scala 130:69]
    node _T_1905 = bits(vpn, 8, 0) @[TLB.scala 130:107]
    node _T_1906 = eq(_T_1904, _T_1905) @[TLB.scala 130:100]
    node _T_1907 = or(_T_1903, _T_1906) @[TLB.scala 130:52]
    node _T_1908 = and(_T_1901, _T_1907) @[TLB.scala 130:27]
    node hitsVec_26 = and(vm_enabled, _T_1908) @[TLB.scala 126:89]
    node _T_1909 = bits(valid, 27, 27) @[TLB.scala 127:25]
    node _T_1911 = lt(entries_27.level, UInt<1>("h00")) @[TLB.scala 130:48]
    node _T_1912 = bits(entries_27.tag, 26, 18) @[TLB.scala 130:69]
    node _T_1913 = bits(vpn, 26, 18) @[TLB.scala 130:107]
    node _T_1914 = eq(_T_1912, _T_1913) @[TLB.scala 130:100]
    node _T_1915 = or(_T_1911, _T_1914) @[TLB.scala 130:52]
    node _T_1916 = and(_T_1909, _T_1915) @[TLB.scala 130:27]
    node _T_1918 = lt(entries_27.level, UInt<1>("h01")) @[TLB.scala 130:48]
    node _T_1919 = bits(entries_27.tag, 17, 9) @[TLB.scala 130:69]
    node _T_1920 = bits(vpn, 17, 9) @[TLB.scala 130:107]
    node _T_1921 = eq(_T_1919, _T_1920) @[TLB.scala 130:100]
    node _T_1922 = or(_T_1918, _T_1921) @[TLB.scala 130:52]
    node _T_1923 = and(_T_1916, _T_1922) @[TLB.scala 130:27]
    node _T_1925 = lt(entries_27.level, UInt<2>("h02")) @[TLB.scala 130:48]
    node _T_1926 = bits(entries_27.tag, 8, 0) @[TLB.scala 130:69]
    node _T_1927 = bits(vpn, 8, 0) @[TLB.scala 130:107]
    node _T_1928 = eq(_T_1926, _T_1927) @[TLB.scala 130:100]
    node _T_1929 = or(_T_1925, _T_1928) @[TLB.scala 130:52]
    node _T_1930 = and(_T_1923, _T_1929) @[TLB.scala 130:27]
    node hitsVec_27 = and(vm_enabled, _T_1930) @[TLB.scala 126:89]
    node _T_1931 = bits(valid, 28, 28) @[TLB.scala 127:25]
    node _T_1933 = lt(entries_28.level, UInt<1>("h00")) @[TLB.scala 130:48]
    node _T_1934 = bits(entries_28.tag, 26, 18) @[TLB.scala 130:69]
    node _T_1935 = bits(vpn, 26, 18) @[TLB.scala 130:107]
    node _T_1936 = eq(_T_1934, _T_1935) @[TLB.scala 130:100]
    node _T_1937 = or(_T_1933, _T_1936) @[TLB.scala 130:52]
    node _T_1938 = and(_T_1931, _T_1937) @[TLB.scala 130:27]
    node _T_1940 = lt(entries_28.level, UInt<1>("h01")) @[TLB.scala 130:48]
    node _T_1941 = bits(entries_28.tag, 17, 9) @[TLB.scala 130:69]
    node _T_1942 = bits(vpn, 17, 9) @[TLB.scala 130:107]
    node _T_1943 = eq(_T_1941, _T_1942) @[TLB.scala 130:100]
    node _T_1944 = or(_T_1940, _T_1943) @[TLB.scala 130:52]
    node _T_1945 = and(_T_1938, _T_1944) @[TLB.scala 130:27]
    node _T_1947 = lt(entries_28.level, UInt<2>("h02")) @[TLB.scala 130:48]
    node _T_1948 = bits(entries_28.tag, 8, 0) @[TLB.scala 130:69]
    node _T_1949 = bits(vpn, 8, 0) @[TLB.scala 130:107]
    node _T_1950 = eq(_T_1948, _T_1949) @[TLB.scala 130:100]
    node _T_1951 = or(_T_1947, _T_1950) @[TLB.scala 130:52]
    node _T_1952 = and(_T_1945, _T_1951) @[TLB.scala 130:27]
    node hitsVec_28 = and(vm_enabled, _T_1952) @[TLB.scala 126:89]
    node _T_1953 = bits(valid, 29, 29) @[TLB.scala 127:25]
    node _T_1955 = lt(entries_29.level, UInt<1>("h00")) @[TLB.scala 130:48]
    node _T_1956 = bits(entries_29.tag, 26, 18) @[TLB.scala 130:69]
    node _T_1957 = bits(vpn, 26, 18) @[TLB.scala 130:107]
    node _T_1958 = eq(_T_1956, _T_1957) @[TLB.scala 130:100]
    node _T_1959 = or(_T_1955, _T_1958) @[TLB.scala 130:52]
    node _T_1960 = and(_T_1953, _T_1959) @[TLB.scala 130:27]
    node _T_1962 = lt(entries_29.level, UInt<1>("h01")) @[TLB.scala 130:48]
    node _T_1963 = bits(entries_29.tag, 17, 9) @[TLB.scala 130:69]
    node _T_1964 = bits(vpn, 17, 9) @[TLB.scala 130:107]
    node _T_1965 = eq(_T_1963, _T_1964) @[TLB.scala 130:100]
    node _T_1966 = or(_T_1962, _T_1965) @[TLB.scala 130:52]
    node _T_1967 = and(_T_1960, _T_1966) @[TLB.scala 130:27]
    node _T_1969 = lt(entries_29.level, UInt<2>("h02")) @[TLB.scala 130:48]
    node _T_1970 = bits(entries_29.tag, 8, 0) @[TLB.scala 130:69]
    node _T_1971 = bits(vpn, 8, 0) @[TLB.scala 130:107]
    node _T_1972 = eq(_T_1970, _T_1971) @[TLB.scala 130:100]
    node _T_1973 = or(_T_1969, _T_1972) @[TLB.scala 130:52]
    node _T_1974 = and(_T_1967, _T_1973) @[TLB.scala 130:27]
    node hitsVec_29 = and(vm_enabled, _T_1974) @[TLB.scala 126:89]
    node _T_1975 = bits(valid, 30, 30) @[TLB.scala 127:25]
    node _T_1977 = lt(entries_30.level, UInt<1>("h00")) @[TLB.scala 130:48]
    node _T_1978 = bits(entries_30.tag, 26, 18) @[TLB.scala 130:69]
    node _T_1979 = bits(vpn, 26, 18) @[TLB.scala 130:107]
    node _T_1980 = eq(_T_1978, _T_1979) @[TLB.scala 130:100]
    node _T_1981 = or(_T_1977, _T_1980) @[TLB.scala 130:52]
    node _T_1982 = and(_T_1975, _T_1981) @[TLB.scala 130:27]
    node _T_1984 = lt(entries_30.level, UInt<1>("h01")) @[TLB.scala 130:48]
    node _T_1985 = bits(entries_30.tag, 17, 9) @[TLB.scala 130:69]
    node _T_1986 = bits(vpn, 17, 9) @[TLB.scala 130:107]
    node _T_1987 = eq(_T_1985, _T_1986) @[TLB.scala 130:100]
    node _T_1988 = or(_T_1984, _T_1987) @[TLB.scala 130:52]
    node _T_1989 = and(_T_1982, _T_1988) @[TLB.scala 130:27]
    node _T_1991 = lt(entries_30.level, UInt<2>("h02")) @[TLB.scala 130:48]
    node _T_1992 = bits(entries_30.tag, 8, 0) @[TLB.scala 130:69]
    node _T_1993 = bits(vpn, 8, 0) @[TLB.scala 130:107]
    node _T_1994 = eq(_T_1992, _T_1993) @[TLB.scala 130:100]
    node _T_1995 = or(_T_1991, _T_1994) @[TLB.scala 130:52]
    node _T_1996 = and(_T_1989, _T_1995) @[TLB.scala 130:27]
    node hitsVec_30 = and(vm_enabled, _T_1996) @[TLB.scala 126:89]
    node _T_1997 = bits(valid, 31, 31) @[TLB.scala 127:25]
    node _T_1999 = lt(entries_31.level, UInt<1>("h00")) @[TLB.scala 130:48]
    node _T_2000 = bits(entries_31.tag, 26, 18) @[TLB.scala 130:69]
    node _T_2001 = bits(vpn, 26, 18) @[TLB.scala 130:107]
    node _T_2002 = eq(_T_2000, _T_2001) @[TLB.scala 130:100]
    node _T_2003 = or(_T_1999, _T_2002) @[TLB.scala 130:52]
    node _T_2004 = and(_T_1997, _T_2003) @[TLB.scala 130:27]
    node _T_2006 = lt(entries_31.level, UInt<1>("h01")) @[TLB.scala 130:48]
    node _T_2007 = bits(entries_31.tag, 17, 9) @[TLB.scala 130:69]
    node _T_2008 = bits(vpn, 17, 9) @[TLB.scala 130:107]
    node _T_2009 = eq(_T_2007, _T_2008) @[TLB.scala 130:100]
    node _T_2010 = or(_T_2006, _T_2009) @[TLB.scala 130:52]
    node _T_2011 = and(_T_2004, _T_2010) @[TLB.scala 130:27]
    node _T_2013 = lt(entries_31.level, UInt<2>("h02")) @[TLB.scala 130:48]
    node _T_2014 = bits(entries_31.tag, 8, 0) @[TLB.scala 130:69]
    node _T_2015 = bits(vpn, 8, 0) @[TLB.scala 130:107]
    node _T_2016 = eq(_T_2014, _T_2015) @[TLB.scala 130:100]
    node _T_2017 = or(_T_2013, _T_2016) @[TLB.scala 130:52]
    node _T_2018 = and(_T_2011, _T_2017) @[TLB.scala 130:27]
    node hitsVec_31 = and(vm_enabled, _T_2018) @[TLB.scala 126:89]
    node _T_2019 = bits(valid, 32, 32) @[TLB.scala 127:25]
    node _T_2021 = lt(entries_32.level, UInt<1>("h00")) @[TLB.scala 130:48]
    node _T_2022 = bits(entries_32.tag, 26, 18) @[TLB.scala 130:69]
    node _T_2023 = bits(vpn, 26, 18) @[TLB.scala 130:107]
    node _T_2024 = eq(_T_2022, _T_2023) @[TLB.scala 130:100]
    node _T_2025 = or(_T_2021, _T_2024) @[TLB.scala 130:52]
    node _T_2026 = and(_T_2019, _T_2025) @[TLB.scala 130:27]
    node _T_2028 = lt(entries_32.level, UInt<1>("h01")) @[TLB.scala 130:48]
    node _T_2029 = bits(entries_32.tag, 17, 9) @[TLB.scala 130:69]
    node _T_2030 = bits(vpn, 17, 9) @[TLB.scala 130:107]
    node _T_2031 = eq(_T_2029, _T_2030) @[TLB.scala 130:100]
    node _T_2032 = or(_T_2028, _T_2031) @[TLB.scala 130:52]
    node _T_2033 = and(_T_2026, _T_2032) @[TLB.scala 130:27]
    node _T_2035 = lt(entries_32.level, UInt<2>("h02")) @[TLB.scala 130:48]
    node _T_2036 = bits(entries_32.tag, 8, 0) @[TLB.scala 130:69]
    node _T_2037 = bits(vpn, 8, 0) @[TLB.scala 130:107]
    node _T_2038 = eq(_T_2036, _T_2037) @[TLB.scala 130:100]
    node _T_2039 = or(_T_2035, _T_2038) @[TLB.scala 130:52]
    node _T_2040 = and(_T_2033, _T_2039) @[TLB.scala 130:27]
    node hitsVec_32 = and(vm_enabled, _T_2040) @[TLB.scala 126:89]
    node hitsVec_33 = eq(vm_enabled, UInt<1>("h00")) @[TLB.scala 133:9]
    node _T_2042 = cat(hitsVec_1, hitsVec_0) @[Cat.scala 30:58]
    node _T_2043 = cat(hitsVec_3, hitsVec_2) @[Cat.scala 30:58]
    node _T_2044 = cat(_T_2043, _T_2042) @[Cat.scala 30:58]
    node _T_2045 = cat(hitsVec_5, hitsVec_4) @[Cat.scala 30:58]
    node _T_2046 = cat(hitsVec_7, hitsVec_6) @[Cat.scala 30:58]
    node _T_2047 = cat(_T_2046, _T_2045) @[Cat.scala 30:58]
    node _T_2048 = cat(_T_2047, _T_2044) @[Cat.scala 30:58]
    node _T_2049 = cat(hitsVec_9, hitsVec_8) @[Cat.scala 30:58]
    node _T_2050 = cat(hitsVec_11, hitsVec_10) @[Cat.scala 30:58]
    node _T_2051 = cat(_T_2050, _T_2049) @[Cat.scala 30:58]
    node _T_2052 = cat(hitsVec_13, hitsVec_12) @[Cat.scala 30:58]
    node _T_2053 = cat(hitsVec_16, hitsVec_15) @[Cat.scala 30:58]
    node _T_2054 = cat(_T_2053, hitsVec_14) @[Cat.scala 30:58]
    node _T_2055 = cat(_T_2054, _T_2052) @[Cat.scala 30:58]
    node _T_2056 = cat(_T_2055, _T_2051) @[Cat.scala 30:58]
    node _T_2057 = cat(_T_2056, _T_2048) @[Cat.scala 30:58]
    node _T_2058 = cat(hitsVec_18, hitsVec_17) @[Cat.scala 30:58]
    node _T_2059 = cat(hitsVec_20, hitsVec_19) @[Cat.scala 30:58]
    node _T_2060 = cat(_T_2059, _T_2058) @[Cat.scala 30:58]
    node _T_2061 = cat(hitsVec_22, hitsVec_21) @[Cat.scala 30:58]
    node _T_2062 = cat(hitsVec_24, hitsVec_23) @[Cat.scala 30:58]
    node _T_2063 = cat(_T_2062, _T_2061) @[Cat.scala 30:58]
    node _T_2064 = cat(_T_2063, _T_2060) @[Cat.scala 30:58]
    node _T_2065 = cat(hitsVec_26, hitsVec_25) @[Cat.scala 30:58]
    node _T_2066 = cat(hitsVec_28, hitsVec_27) @[Cat.scala 30:58]
    node _T_2067 = cat(_T_2066, _T_2065) @[Cat.scala 30:58]
    node _T_2068 = cat(hitsVec_30, hitsVec_29) @[Cat.scala 30:58]
    node _T_2069 = cat(hitsVec_33, hitsVec_32) @[Cat.scala 30:58]
    node _T_2070 = cat(_T_2069, hitsVec_31) @[Cat.scala 30:58]
    node _T_2071 = cat(_T_2070, _T_2068) @[Cat.scala 30:58]
    node _T_2072 = cat(_T_2071, _T_2067) @[Cat.scala 30:58]
    node _T_2073 = cat(_T_2072, _T_2064) @[Cat.scala 30:58]
    node hits = cat(_T_2073, _T_2057) @[Cat.scala 30:58]
    node _T_2076 = mux(hitsVec_0, entries_0.level, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2078 = mux(hitsVec_1, entries_1.level, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2080 = mux(hitsVec_2, entries_2.level, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2082 = mux(hitsVec_3, entries_3.level, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2084 = mux(hitsVec_4, entries_4.level, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2086 = mux(hitsVec_5, entries_5.level, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2088 = mux(hitsVec_6, entries_6.level, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2090 = mux(hitsVec_7, entries_7.level, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2092 = mux(hitsVec_8, entries_8.level, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2094 = mux(hitsVec_9, entries_9.level, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2096 = mux(hitsVec_10, entries_10.level, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2098 = mux(hitsVec_11, entries_11.level, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2100 = mux(hitsVec_12, entries_12.level, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2102 = mux(hitsVec_13, entries_13.level, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2104 = mux(hitsVec_14, entries_14.level, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2106 = mux(hitsVec_15, entries_15.level, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2108 = mux(hitsVec_16, entries_16.level, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2110 = mux(hitsVec_17, entries_17.level, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2112 = mux(hitsVec_18, entries_18.level, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2114 = mux(hitsVec_19, entries_19.level, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2116 = mux(hitsVec_20, entries_20.level, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2118 = mux(hitsVec_21, entries_21.level, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2120 = mux(hitsVec_22, entries_22.level, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2122 = mux(hitsVec_23, entries_23.level, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2124 = mux(hitsVec_24, entries_24.level, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2126 = mux(hitsVec_25, entries_25.level, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2128 = mux(hitsVec_26, entries_26.level, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2130 = mux(hitsVec_27, entries_27.level, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2132 = mux(hitsVec_28, entries_28.level, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2134 = mux(hitsVec_29, entries_29.level, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2136 = mux(hitsVec_30, entries_30.level, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2138 = mux(hitsVec_31, entries_31.level, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2140 = mux(hitsVec_32, entries_32.level, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2141 = or(_T_2076, _T_2078) @[Mux.scala 19:72]
    node _T_2142 = or(_T_2141, _T_2080) @[Mux.scala 19:72]
    node _T_2143 = or(_T_2142, _T_2082) @[Mux.scala 19:72]
    node _T_2144 = or(_T_2143, _T_2084) @[Mux.scala 19:72]
    node _T_2145 = or(_T_2144, _T_2086) @[Mux.scala 19:72]
    node _T_2146 = or(_T_2145, _T_2088) @[Mux.scala 19:72]
    node _T_2147 = or(_T_2146, _T_2090) @[Mux.scala 19:72]
    node _T_2148 = or(_T_2147, _T_2092) @[Mux.scala 19:72]
    node _T_2149 = or(_T_2148, _T_2094) @[Mux.scala 19:72]
    node _T_2150 = or(_T_2149, _T_2096) @[Mux.scala 19:72]
    node _T_2151 = or(_T_2150, _T_2098) @[Mux.scala 19:72]
    node _T_2152 = or(_T_2151, _T_2100) @[Mux.scala 19:72]
    node _T_2153 = or(_T_2152, _T_2102) @[Mux.scala 19:72]
    node _T_2154 = or(_T_2153, _T_2104) @[Mux.scala 19:72]
    node _T_2155 = or(_T_2154, _T_2106) @[Mux.scala 19:72]
    node _T_2156 = or(_T_2155, _T_2108) @[Mux.scala 19:72]
    node _T_2157 = or(_T_2156, _T_2110) @[Mux.scala 19:72]
    node _T_2158 = or(_T_2157, _T_2112) @[Mux.scala 19:72]
    node _T_2159 = or(_T_2158, _T_2114) @[Mux.scala 19:72]
    node _T_2160 = or(_T_2159, _T_2116) @[Mux.scala 19:72]
    node _T_2161 = or(_T_2160, _T_2118) @[Mux.scala 19:72]
    node _T_2162 = or(_T_2161, _T_2120) @[Mux.scala 19:72]
    node _T_2163 = or(_T_2162, _T_2122) @[Mux.scala 19:72]
    node _T_2164 = or(_T_2163, _T_2124) @[Mux.scala 19:72]
    node _T_2165 = or(_T_2164, _T_2126) @[Mux.scala 19:72]
    node _T_2166 = or(_T_2165, _T_2128) @[Mux.scala 19:72]
    node _T_2167 = or(_T_2166, _T_2130) @[Mux.scala 19:72]
    node _T_2168 = or(_T_2167, _T_2132) @[Mux.scala 19:72]
    node _T_2169 = or(_T_2168, _T_2134) @[Mux.scala 19:72]
    node _T_2170 = or(_T_2169, _T_2136) @[Mux.scala 19:72]
    node _T_2171 = or(_T_2170, _T_2138) @[Mux.scala 19:72]
    node _T_2172 = or(_T_2171, _T_2140) @[Mux.scala 19:72]
    wire level : UInt<2> @[Mux.scala 19:72]
    level <= _T_2172 @[Mux.scala 19:72]
    node _T_2176 = mux(hitsVec_0, entries_0.ppn, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2178 = mux(hitsVec_1, entries_1.ppn, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2180 = mux(hitsVec_2, entries_2.ppn, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2182 = mux(hitsVec_3, entries_3.ppn, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2184 = mux(hitsVec_4, entries_4.ppn, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2186 = mux(hitsVec_5, entries_5.ppn, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2188 = mux(hitsVec_6, entries_6.ppn, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2190 = mux(hitsVec_7, entries_7.ppn, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2192 = mux(hitsVec_8, entries_8.ppn, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2194 = mux(hitsVec_9, entries_9.ppn, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2196 = mux(hitsVec_10, entries_10.ppn, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2198 = mux(hitsVec_11, entries_11.ppn, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2200 = mux(hitsVec_12, entries_12.ppn, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2202 = mux(hitsVec_13, entries_13.ppn, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2204 = mux(hitsVec_14, entries_14.ppn, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2206 = mux(hitsVec_15, entries_15.ppn, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2208 = mux(hitsVec_16, entries_16.ppn, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2210 = mux(hitsVec_17, entries_17.ppn, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2212 = mux(hitsVec_18, entries_18.ppn, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2214 = mux(hitsVec_19, entries_19.ppn, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2216 = mux(hitsVec_20, entries_20.ppn, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2218 = mux(hitsVec_21, entries_21.ppn, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2220 = mux(hitsVec_22, entries_22.ppn, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2222 = mux(hitsVec_23, entries_23.ppn, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2224 = mux(hitsVec_24, entries_24.ppn, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2226 = mux(hitsVec_25, entries_25.ppn, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2228 = mux(hitsVec_26, entries_26.ppn, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2230 = mux(hitsVec_27, entries_27.ppn, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2232 = mux(hitsVec_28, entries_28.ppn, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2234 = mux(hitsVec_29, entries_29.ppn, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2236 = mux(hitsVec_30, entries_30.ppn, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2238 = mux(hitsVec_31, entries_31.ppn, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2240 = mux(hitsVec_32, entries_32.ppn, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_2241 = or(_T_2176, _T_2178) @[Mux.scala 19:72]
    node _T_2242 = or(_T_2241, _T_2180) @[Mux.scala 19:72]
    node _T_2243 = or(_T_2242, _T_2182) @[Mux.scala 19:72]
    node _T_2244 = or(_T_2243, _T_2184) @[Mux.scala 19:72]
    node _T_2245 = or(_T_2244, _T_2186) @[Mux.scala 19:72]
    node _T_2246 = or(_T_2245, _T_2188) @[Mux.scala 19:72]
    node _T_2247 = or(_T_2246, _T_2190) @[Mux.scala 19:72]
    node _T_2248 = or(_T_2247, _T_2192) @[Mux.scala 19:72]
    node _T_2249 = or(_T_2248, _T_2194) @[Mux.scala 19:72]
    node _T_2250 = or(_T_2249, _T_2196) @[Mux.scala 19:72]
    node _T_2251 = or(_T_2250, _T_2198) @[Mux.scala 19:72]
    node _T_2252 = or(_T_2251, _T_2200) @[Mux.scala 19:72]
    node _T_2253 = or(_T_2252, _T_2202) @[Mux.scala 19:72]
    node _T_2254 = or(_T_2253, _T_2204) @[Mux.scala 19:72]
    node _T_2255 = or(_T_2254, _T_2206) @[Mux.scala 19:72]
    node _T_2256 = or(_T_2255, _T_2208) @[Mux.scala 19:72]
    node _T_2257 = or(_T_2256, _T_2210) @[Mux.scala 19:72]
    node _T_2258 = or(_T_2257, _T_2212) @[Mux.scala 19:72]
    node _T_2259 = or(_T_2258, _T_2214) @[Mux.scala 19:72]
    node _T_2260 = or(_T_2259, _T_2216) @[Mux.scala 19:72]
    node _T_2261 = or(_T_2260, _T_2218) @[Mux.scala 19:72]
    node _T_2262 = or(_T_2261, _T_2220) @[Mux.scala 19:72]
    node _T_2263 = or(_T_2262, _T_2222) @[Mux.scala 19:72]
    node _T_2264 = or(_T_2263, _T_2224) @[Mux.scala 19:72]
    node _T_2265 = or(_T_2264, _T_2226) @[Mux.scala 19:72]
    node _T_2266 = or(_T_2265, _T_2228) @[Mux.scala 19:72]
    node _T_2267 = or(_T_2266, _T_2230) @[Mux.scala 19:72]
    node _T_2268 = or(_T_2267, _T_2232) @[Mux.scala 19:72]
    node _T_2269 = or(_T_2268, _T_2234) @[Mux.scala 19:72]
    node _T_2270 = or(_T_2269, _T_2236) @[Mux.scala 19:72]
    node _T_2271 = or(_T_2270, _T_2238) @[Mux.scala 19:72]
    node _T_2272 = or(_T_2271, _T_2240) @[Mux.scala 19:72]
    wire partialPPN : UInt<20> @[Mux.scala 19:72]
    partialPPN <= _T_2272 @[Mux.scala 19:72]
    node _T_2274 = mux(vm_enabled, partialPPN, vpn) @[TLB.scala 138:18]
    node _T_2275 = bits(_T_2274, 26, 18) @[TLB.scala 138:47]
    node _T_2277 = lt(level, UInt<1>("h01")) @[TLB.scala 140:33]
    node _T_2279 = mux(_T_2277, vpn, UInt<1>("h00")) @[TLB.scala 140:26]
    node _T_2280 = or(_T_2279, partialPPN) @[TLB.scala 140:48]
    node _T_2281 = bits(_T_2280, 17, 9) @[TLB.scala 140:61]
    node _T_2282 = cat(_T_2275, _T_2281) @[Cat.scala 30:58]
    node _T_2284 = lt(level, UInt<2>("h02")) @[TLB.scala 140:33]
    node _T_2286 = mux(_T_2284, vpn, UInt<1>("h00")) @[TLB.scala 140:26]
    node _T_2287 = or(_T_2286, partialPPN) @[TLB.scala 140:48]
    node _T_2288 = bits(_T_2287, 8, 0) @[TLB.scala 140:61]
    node ppn = cat(_T_2282, _T_2288) @[Cat.scala 30:58]
    node _T_2290 = eq(invalidate_refill, UInt<1>("h00")) @[TLB.scala 145:22]
    node _T_2291 = and(do_refill, _T_2290) @[TLB.scala 145:19]
    when _T_2291 : @[TLB.scala 145:42]
      node _T_2294 = eq(io.ptw.resp.bits.homogeneous, UInt<1>("h00")) @[TLB.scala 146:57]
      node _T_2296 = mux(_T_2294, UInt<6>("h020"), r_refill_waddr) @[TLB.scala 146:56]
      node _T_2297 = mux(io.ptw.resp.bits.ae, UInt<1>("h00"), _T_2296) @[TLB.scala 146:20]
      wire _T_2299 : {ppn : UInt<20>, tag : UInt<27>, level : UInt<2>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>} @[TLB.scala 148:24]
      _T_2299 is invalid @[TLB.scala 148:24]
      _T_2299.ppn <= io.ptw.resp.bits.pte.ppn @[TLB.scala 149:18]
      _T_2299.tag <= r_refill_tag @[TLB.scala 150:18]
      _T_2299.level <= io.ptw.resp.bits.level @[TLB.scala 151:20]
      _T_2299.c <= cacheable @[TLB.scala 152:16]
      _T_2299.u <= io.ptw.resp.bits.pte.u @[TLB.scala 153:16]
      _T_2299.g <= io.ptw.resp.bits.pte.g @[TLB.scala 154:16]
      _T_2299.ae <= io.ptw.resp.bits.ae @[TLB.scala 155:17]
      node _T_2301 = eq(io.ptw.resp.bits.pte.w, UInt<1>("h00")) @[PTW.scala 63:47]
      node _T_2302 = and(io.ptw.resp.bits.pte.x, _T_2301) @[PTW.scala 63:44]
      node _T_2303 = or(io.ptw.resp.bits.pte.r, _T_2302) @[PTW.scala 63:38]
      node _T_2304 = and(io.ptw.resp.bits.pte.v, _T_2303) @[PTW.scala 63:32]
      node _T_2305 = and(_T_2304, io.ptw.resp.bits.pte.a) @[PTW.scala 63:52]
      node _T_2306 = and(_T_2305, io.ptw.resp.bits.pte.r) @[PTW.scala 67:35]
      _T_2299.sr <= _T_2306 @[TLB.scala 156:17]
      node _T_2308 = eq(io.ptw.resp.bits.pte.w, UInt<1>("h00")) @[PTW.scala 63:47]
      node _T_2309 = and(io.ptw.resp.bits.pte.x, _T_2308) @[PTW.scala 63:44]
      node _T_2310 = or(io.ptw.resp.bits.pte.r, _T_2309) @[PTW.scala 63:38]
      node _T_2311 = and(io.ptw.resp.bits.pte.v, _T_2310) @[PTW.scala 63:32]
      node _T_2312 = and(_T_2311, io.ptw.resp.bits.pte.a) @[PTW.scala 63:52]
      node _T_2313 = and(_T_2312, io.ptw.resp.bits.pte.w) @[PTW.scala 68:35]
      node _T_2314 = and(_T_2313, io.ptw.resp.bits.pte.d) @[PTW.scala 68:40]
      _T_2299.sw <= _T_2314 @[TLB.scala 157:17]
      node _T_2316 = eq(io.ptw.resp.bits.pte.w, UInt<1>("h00")) @[PTW.scala 63:47]
      node _T_2317 = and(io.ptw.resp.bits.pte.x, _T_2316) @[PTW.scala 63:44]
      node _T_2318 = or(io.ptw.resp.bits.pte.r, _T_2317) @[PTW.scala 63:38]
      node _T_2319 = and(io.ptw.resp.bits.pte.v, _T_2318) @[PTW.scala 63:32]
      node _T_2320 = and(_T_2319, io.ptw.resp.bits.pte.a) @[PTW.scala 63:52]
      node _T_2321 = and(_T_2320, io.ptw.resp.bits.pte.x) @[PTW.scala 69:35]
      _T_2299.sx <= _T_2321 @[TLB.scala 158:17]
      node _T_2323 = eq(io.ptw.resp.bits.ae, UInt<1>("h00")) @[TLB.scala 159:30]
      node _T_2324 = and(prot_r, _T_2323) @[TLB.scala 159:27]
      _T_2299.pr <= _T_2324 @[TLB.scala 159:17]
      node _T_2326 = eq(io.ptw.resp.bits.ae, UInt<1>("h00")) @[TLB.scala 160:30]
      node _T_2327 = and(prot_w, _T_2326) @[TLB.scala 160:27]
      _T_2299.pw <= _T_2327 @[TLB.scala 160:17]
      node _T_2329 = eq(io.ptw.resp.bits.ae, UInt<1>("h00")) @[TLB.scala 161:30]
      node _T_2330 = and(prot_x, _T_2329) @[TLB.scala 161:27]
      _T_2299.px <= _T_2330 @[TLB.scala 161:17]
      _T_2299.pal <= prot_al @[TLB.scala 162:18]
      _T_2299.paa <= prot_aa @[TLB.scala 163:18]
      _T_2299.eff <= prot_eff @[TLB.scala 164:18]
      node _T_2332 = dshl(UInt<1>("h01"), _T_2297) @[OneHot.scala 45:35]
      node _T_2333 = or(valid, _T_2332) @[TLB.scala 166:20]
      valid <= _T_2333 @[TLB.scala 166:11]
      node _T_2335 = cat(_T_2299.eff, _T_2299.c) @[TLB.scala 167:36]
      node _T_2336 = cat(_T_2299.pal, _T_2299.paa) @[TLB.scala 167:36]
      node _T_2337 = cat(_T_2336, _T_2335) @[TLB.scala 167:36]
      node _T_2338 = cat(_T_2299.px, _T_2299.pr) @[TLB.scala 167:36]
      node _T_2339 = cat(_T_2299.sr, _T_2299.pw) @[TLB.scala 167:36]
      node _T_2340 = cat(_T_2339, _T_2338) @[TLB.scala 167:36]
      node _T_2341 = cat(_T_2340, _T_2337) @[TLB.scala 167:36]
      node _T_2342 = cat(_T_2299.sw, _T_2299.sx) @[TLB.scala 167:36]
      node _T_2343 = cat(_T_2299.g, _T_2299.ae) @[TLB.scala 167:36]
      node _T_2344 = cat(_T_2343, _T_2342) @[TLB.scala 167:36]
      node _T_2345 = cat(_T_2299.level, _T_2299.u) @[TLB.scala 167:36]
      node _T_2346 = cat(_T_2299.ppn, _T_2299.tag) @[TLB.scala 167:36]
      node _T_2347 = cat(_T_2346, _T_2345) @[TLB.scala 167:36]
      node _T_2348 = cat(_T_2347, _T_2344) @[TLB.scala 167:36]
      node _T_2349 = cat(_T_2348, _T_2341) @[TLB.scala 167:36]
      reg_entries[_T_2297] <= _T_2349 @[TLB.scala 167:24]
      skip @[TLB.scala 145:42]
    reg _T_2351 : UInt<31>, clock @[Replacement.scala 41:30]
    node _T_2352 = bits(valid, 31, 0) @[TLB.scala 171:30]
    node _T_2353 = not(_T_2352) @[TLB.scala 171:51]
    node _T_2355 = eq(_T_2353, UInt<1>("h00")) @[TLB.scala 171:51]
    node _T_2357 = eq(_T_2355, UInt<1>("h00")) @[TLB.scala 171:24]
    node _T_2358 = bits(valid, 31, 0) @[TLB.scala 171:79]
    node _T_2359 = not(_T_2358) @[TLB.scala 171:73]
    node _T_2360 = bits(_T_2359, 0, 0) @[OneHot.scala 39:40]
    node _T_2361 = bits(_T_2359, 1, 1) @[OneHot.scala 39:40]
    node _T_2362 = bits(_T_2359, 2, 2) @[OneHot.scala 39:40]
    node _T_2363 = bits(_T_2359, 3, 3) @[OneHot.scala 39:40]
    node _T_2364 = bits(_T_2359, 4, 4) @[OneHot.scala 39:40]
    node _T_2365 = bits(_T_2359, 5, 5) @[OneHot.scala 39:40]
    node _T_2366 = bits(_T_2359, 6, 6) @[OneHot.scala 39:40]
    node _T_2367 = bits(_T_2359, 7, 7) @[OneHot.scala 39:40]
    node _T_2368 = bits(_T_2359, 8, 8) @[OneHot.scala 39:40]
    node _T_2369 = bits(_T_2359, 9, 9) @[OneHot.scala 39:40]
    node _T_2370 = bits(_T_2359, 10, 10) @[OneHot.scala 39:40]
    node _T_2371 = bits(_T_2359, 11, 11) @[OneHot.scala 39:40]
    node _T_2372 = bits(_T_2359, 12, 12) @[OneHot.scala 39:40]
    node _T_2373 = bits(_T_2359, 13, 13) @[OneHot.scala 39:40]
    node _T_2374 = bits(_T_2359, 14, 14) @[OneHot.scala 39:40]
    node _T_2375 = bits(_T_2359, 15, 15) @[OneHot.scala 39:40]
    node _T_2376 = bits(_T_2359, 16, 16) @[OneHot.scala 39:40]
    node _T_2377 = bits(_T_2359, 17, 17) @[OneHot.scala 39:40]
    node _T_2378 = bits(_T_2359, 18, 18) @[OneHot.scala 39:40]
    node _T_2379 = bits(_T_2359, 19, 19) @[OneHot.scala 39:40]
    node _T_2380 = bits(_T_2359, 20, 20) @[OneHot.scala 39:40]
    node _T_2381 = bits(_T_2359, 21, 21) @[OneHot.scala 39:40]
    node _T_2382 = bits(_T_2359, 22, 22) @[OneHot.scala 39:40]
    node _T_2383 = bits(_T_2359, 23, 23) @[OneHot.scala 39:40]
    node _T_2384 = bits(_T_2359, 24, 24) @[OneHot.scala 39:40]
    node _T_2385 = bits(_T_2359, 25, 25) @[OneHot.scala 39:40]
    node _T_2386 = bits(_T_2359, 26, 26) @[OneHot.scala 39:40]
    node _T_2387 = bits(_T_2359, 27, 27) @[OneHot.scala 39:40]
    node _T_2388 = bits(_T_2359, 28, 28) @[OneHot.scala 39:40]
    node _T_2389 = bits(_T_2359, 29, 29) @[OneHot.scala 39:40]
    node _T_2390 = bits(_T_2359, 30, 30) @[OneHot.scala 39:40]
    node _T_2391 = bits(_T_2359, 31, 31) @[OneHot.scala 39:40]
    node _T_2424 = mux(_T_2390, UInt<5>("h01e"), UInt<5>("h01f")) @[Mux.scala 31:69]
    node _T_2425 = mux(_T_2389, UInt<5>("h01d"), _T_2424) @[Mux.scala 31:69]
    node _T_2426 = mux(_T_2388, UInt<5>("h01c"), _T_2425) @[Mux.scala 31:69]
    node _T_2427 = mux(_T_2387, UInt<5>("h01b"), _T_2426) @[Mux.scala 31:69]
    node _T_2428 = mux(_T_2386, UInt<5>("h01a"), _T_2427) @[Mux.scala 31:69]
    node _T_2429 = mux(_T_2385, UInt<5>("h019"), _T_2428) @[Mux.scala 31:69]
    node _T_2430 = mux(_T_2384, UInt<5>("h018"), _T_2429) @[Mux.scala 31:69]
    node _T_2431 = mux(_T_2383, UInt<5>("h017"), _T_2430) @[Mux.scala 31:69]
    node _T_2432 = mux(_T_2382, UInt<5>("h016"), _T_2431) @[Mux.scala 31:69]
    node _T_2433 = mux(_T_2381, UInt<5>("h015"), _T_2432) @[Mux.scala 31:69]
    node _T_2434 = mux(_T_2380, UInt<5>("h014"), _T_2433) @[Mux.scala 31:69]
    node _T_2435 = mux(_T_2379, UInt<5>("h013"), _T_2434) @[Mux.scala 31:69]
    node _T_2436 = mux(_T_2378, UInt<5>("h012"), _T_2435) @[Mux.scala 31:69]
    node _T_2437 = mux(_T_2377, UInt<5>("h011"), _T_2436) @[Mux.scala 31:69]
    node _T_2438 = mux(_T_2376, UInt<5>("h010"), _T_2437) @[Mux.scala 31:69]
    node _T_2439 = mux(_T_2375, UInt<4>("h0f"), _T_2438) @[Mux.scala 31:69]
    node _T_2440 = mux(_T_2374, UInt<4>("h0e"), _T_2439) @[Mux.scala 31:69]
    node _T_2441 = mux(_T_2373, UInt<4>("h0d"), _T_2440) @[Mux.scala 31:69]
    node _T_2442 = mux(_T_2372, UInt<4>("h0c"), _T_2441) @[Mux.scala 31:69]
    node _T_2443 = mux(_T_2371, UInt<4>("h0b"), _T_2442) @[Mux.scala 31:69]
    node _T_2444 = mux(_T_2370, UInt<4>("h0a"), _T_2443) @[Mux.scala 31:69]
    node _T_2445 = mux(_T_2369, UInt<4>("h09"), _T_2444) @[Mux.scala 31:69]
    node _T_2446 = mux(_T_2368, UInt<4>("h08"), _T_2445) @[Mux.scala 31:69]
    node _T_2447 = mux(_T_2367, UInt<3>("h07"), _T_2446) @[Mux.scala 31:69]
    node _T_2448 = mux(_T_2366, UInt<3>("h06"), _T_2447) @[Mux.scala 31:69]
    node _T_2449 = mux(_T_2365, UInt<3>("h05"), _T_2448) @[Mux.scala 31:69]
    node _T_2450 = mux(_T_2364, UInt<3>("h04"), _T_2449) @[Mux.scala 31:69]
    node _T_2451 = mux(_T_2363, UInt<2>("h03"), _T_2450) @[Mux.scala 31:69]
    node _T_2452 = mux(_T_2362, UInt<2>("h02"), _T_2451) @[Mux.scala 31:69]
    node _T_2453 = mux(_T_2361, UInt<1>("h01"), _T_2452) @[Mux.scala 31:69]
    node _T_2454 = mux(_T_2360, UInt<1>("h00"), _T_2453) @[Mux.scala 31:69]
    node _T_2455 = shl(_T_2351, 1) @[Replacement.scala 57:31]
    node _T_2458 = cat(UInt<1>("h01"), UInt<5>("h010")) @[Cat.scala 30:58]
    node _T_2459 = bits(_T_2458, 4, 0) @[Replacement.scala 60:53]
    node _T_2461 = lt(_T_2459, UInt<6>("h020")) @[Replacement.scala 60:70]
    node _T_2462 = dshr(_T_2455, UInt<1>("h01")) @[Replacement.scala 61:48]
    node _T_2463 = bits(_T_2462, 0, 0) @[Replacement.scala 61:48]
    node _T_2464 = and(_T_2461, _T_2463) @[Replacement.scala 61:32]
    node _T_2465 = cat(UInt<1>("h01"), _T_2464) @[Cat.scala 30:58]
    node _T_2467 = cat(_T_2465, UInt<4>("h08")) @[Cat.scala 30:58]
    node _T_2468 = bits(_T_2467, 4, 0) @[Replacement.scala 60:53]
    node _T_2470 = lt(_T_2468, UInt<6>("h020")) @[Replacement.scala 60:70]
    node _T_2471 = dshr(_T_2455, _T_2465) @[Replacement.scala 61:48]
    node _T_2472 = bits(_T_2471, 0, 0) @[Replacement.scala 61:48]
    node _T_2473 = and(_T_2470, _T_2472) @[Replacement.scala 61:32]
    node _T_2474 = cat(_T_2465, _T_2473) @[Cat.scala 30:58]
    node _T_2476 = cat(_T_2474, UInt<3>("h04")) @[Cat.scala 30:58]
    node _T_2477 = bits(_T_2476, 4, 0) @[Replacement.scala 60:53]
    node _T_2479 = lt(_T_2477, UInt<6>("h020")) @[Replacement.scala 60:70]
    node _T_2480 = dshr(_T_2455, _T_2474) @[Replacement.scala 61:48]
    node _T_2481 = bits(_T_2480, 0, 0) @[Replacement.scala 61:48]
    node _T_2482 = and(_T_2479, _T_2481) @[Replacement.scala 61:32]
    node _T_2483 = cat(_T_2474, _T_2482) @[Cat.scala 30:58]
    node _T_2485 = cat(_T_2483, UInt<2>("h02")) @[Cat.scala 30:58]
    node _T_2486 = bits(_T_2485, 4, 0) @[Replacement.scala 60:53]
    node _T_2488 = lt(_T_2486, UInt<6>("h020")) @[Replacement.scala 60:70]
    node _T_2489 = dshr(_T_2455, _T_2483) @[Replacement.scala 61:48]
    node _T_2490 = bits(_T_2489, 0, 0) @[Replacement.scala 61:48]
    node _T_2491 = and(_T_2488, _T_2490) @[Replacement.scala 61:32]
    node _T_2492 = cat(_T_2483, _T_2491) @[Cat.scala 30:58]
    node _T_2494 = cat(_T_2492, UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_2495 = bits(_T_2494, 4, 0) @[Replacement.scala 60:53]
    node _T_2497 = lt(_T_2495, UInt<6>("h020")) @[Replacement.scala 60:70]
    node _T_2498 = dshr(_T_2455, _T_2492) @[Replacement.scala 61:48]
    node _T_2499 = bits(_T_2498, 0, 0) @[Replacement.scala 61:48]
    node _T_2500 = and(_T_2497, _T_2499) @[Replacement.scala 61:32]
    node _T_2501 = cat(_T_2492, _T_2500) @[Cat.scala 30:58]
    node _T_2502 = bits(_T_2501, 4, 0) @[Replacement.scala 63:8]
    node repl_waddr = mux(_T_2357, _T_2454, _T_2502) @[TLB.scala 171:23]
    node ptw_ae_array = shl(entries_0.ae, 0) @[TLB.scala 173:42]
    node _T_2504 = eq(priv_s, UInt<1>("h00")) @[TLB.scala 174:24]
    node _T_2505 = or(_T_2504, io.ptw.status.sum) @[TLB.scala 174:32]
    node _T_2506 = cat(entries_1.u, entries_0.u) @[Cat.scala 30:58]
    node _T_2507 = cat(entries_3.u, entries_2.u) @[Cat.scala 30:58]
    node _T_2508 = cat(_T_2507, _T_2506) @[Cat.scala 30:58]
    node _T_2509 = cat(entries_5.u, entries_4.u) @[Cat.scala 30:58]
    node _T_2510 = cat(entries_7.u, entries_6.u) @[Cat.scala 30:58]
    node _T_2511 = cat(_T_2510, _T_2509) @[Cat.scala 30:58]
    node _T_2512 = cat(_T_2511, _T_2508) @[Cat.scala 30:58]
    node _T_2513 = cat(entries_9.u, entries_8.u) @[Cat.scala 30:58]
    node _T_2514 = cat(entries_11.u, entries_10.u) @[Cat.scala 30:58]
    node _T_2515 = cat(_T_2514, _T_2513) @[Cat.scala 30:58]
    node _T_2516 = cat(entries_13.u, entries_12.u) @[Cat.scala 30:58]
    node _T_2517 = cat(entries_15.u, entries_14.u) @[Cat.scala 30:58]
    node _T_2518 = cat(_T_2517, _T_2516) @[Cat.scala 30:58]
    node _T_2519 = cat(_T_2518, _T_2515) @[Cat.scala 30:58]
    node _T_2520 = cat(_T_2519, _T_2512) @[Cat.scala 30:58]
    node _T_2521 = cat(entries_17.u, entries_16.u) @[Cat.scala 30:58]
    node _T_2522 = cat(entries_19.u, entries_18.u) @[Cat.scala 30:58]
    node _T_2523 = cat(_T_2522, _T_2521) @[Cat.scala 30:58]
    node _T_2524 = cat(entries_21.u, entries_20.u) @[Cat.scala 30:58]
    node _T_2525 = cat(entries_23.u, entries_22.u) @[Cat.scala 30:58]
    node _T_2526 = cat(_T_2525, _T_2524) @[Cat.scala 30:58]
    node _T_2527 = cat(_T_2526, _T_2523) @[Cat.scala 30:58]
    node _T_2528 = cat(entries_25.u, entries_24.u) @[Cat.scala 30:58]
    node _T_2529 = cat(entries_27.u, entries_26.u) @[Cat.scala 30:58]
    node _T_2530 = cat(_T_2529, _T_2528) @[Cat.scala 30:58]
    node _T_2531 = cat(entries_29.u, entries_28.u) @[Cat.scala 30:58]
    node _T_2532 = cat(entries_32.u, entries_31.u) @[Cat.scala 30:58]
    node _T_2533 = cat(_T_2532, entries_30.u) @[Cat.scala 30:58]
    node _T_2534 = cat(_T_2533, _T_2531) @[Cat.scala 30:58]
    node _T_2535 = cat(_T_2534, _T_2530) @[Cat.scala 30:58]
    node _T_2536 = cat(_T_2535, _T_2527) @[Cat.scala 30:58]
    node _T_2537 = cat(_T_2536, _T_2520) @[Cat.scala 30:58]
    node _T_2539 = mux(_T_2505, _T_2537, UInt<1>("h00")) @[TLB.scala 174:23]
    node _T_2540 = cat(entries_1.u, entries_0.u) @[Cat.scala 30:58]
    node _T_2541 = cat(entries_3.u, entries_2.u) @[Cat.scala 30:58]
    node _T_2542 = cat(_T_2541, _T_2540) @[Cat.scala 30:58]
    node _T_2543 = cat(entries_5.u, entries_4.u) @[Cat.scala 30:58]
    node _T_2544 = cat(entries_7.u, entries_6.u) @[Cat.scala 30:58]
    node _T_2545 = cat(_T_2544, _T_2543) @[Cat.scala 30:58]
    node _T_2546 = cat(_T_2545, _T_2542) @[Cat.scala 30:58]
    node _T_2547 = cat(entries_9.u, entries_8.u) @[Cat.scala 30:58]
    node _T_2548 = cat(entries_11.u, entries_10.u) @[Cat.scala 30:58]
    node _T_2549 = cat(_T_2548, _T_2547) @[Cat.scala 30:58]
    node _T_2550 = cat(entries_13.u, entries_12.u) @[Cat.scala 30:58]
    node _T_2551 = cat(entries_15.u, entries_14.u) @[Cat.scala 30:58]
    node _T_2552 = cat(_T_2551, _T_2550) @[Cat.scala 30:58]
    node _T_2553 = cat(_T_2552, _T_2549) @[Cat.scala 30:58]
    node _T_2554 = cat(_T_2553, _T_2546) @[Cat.scala 30:58]
    node _T_2555 = cat(entries_17.u, entries_16.u) @[Cat.scala 30:58]
    node _T_2556 = cat(entries_19.u, entries_18.u) @[Cat.scala 30:58]
    node _T_2557 = cat(_T_2556, _T_2555) @[Cat.scala 30:58]
    node _T_2558 = cat(entries_21.u, entries_20.u) @[Cat.scala 30:58]
    node _T_2559 = cat(entries_23.u, entries_22.u) @[Cat.scala 30:58]
    node _T_2560 = cat(_T_2559, _T_2558) @[Cat.scala 30:58]
    node _T_2561 = cat(_T_2560, _T_2557) @[Cat.scala 30:58]
    node _T_2562 = cat(entries_25.u, entries_24.u) @[Cat.scala 30:58]
    node _T_2563 = cat(entries_27.u, entries_26.u) @[Cat.scala 30:58]
    node _T_2564 = cat(_T_2563, _T_2562) @[Cat.scala 30:58]
    node _T_2565 = cat(entries_29.u, entries_28.u) @[Cat.scala 30:58]
    node _T_2566 = cat(entries_32.u, entries_31.u) @[Cat.scala 30:58]
    node _T_2567 = cat(_T_2566, entries_30.u) @[Cat.scala 30:58]
    node _T_2568 = cat(_T_2567, _T_2565) @[Cat.scala 30:58]
    node _T_2569 = cat(_T_2568, _T_2564) @[Cat.scala 30:58]
    node _T_2570 = cat(_T_2569, _T_2561) @[Cat.scala 30:58]
    node _T_2571 = cat(_T_2570, _T_2554) @[Cat.scala 30:58]
    node _T_2572 = not(_T_2571) @[TLB.scala 174:98]
    node _T_2574 = mux(priv_s, _T_2572, UInt<1>("h00")) @[TLB.scala 174:89]
    node priv_rw_ok = or(_T_2539, _T_2574) @[TLB.scala 174:84]
    node _T_2575 = cat(entries_1.u, entries_0.u) @[Cat.scala 30:58]
    node _T_2576 = cat(entries_3.u, entries_2.u) @[Cat.scala 30:58]
    node _T_2577 = cat(_T_2576, _T_2575) @[Cat.scala 30:58]
    node _T_2578 = cat(entries_5.u, entries_4.u) @[Cat.scala 30:58]
    node _T_2579 = cat(entries_7.u, entries_6.u) @[Cat.scala 30:58]
    node _T_2580 = cat(_T_2579, _T_2578) @[Cat.scala 30:58]
    node _T_2581 = cat(_T_2580, _T_2577) @[Cat.scala 30:58]
    node _T_2582 = cat(entries_9.u, entries_8.u) @[Cat.scala 30:58]
    node _T_2583 = cat(entries_11.u, entries_10.u) @[Cat.scala 30:58]
    node _T_2584 = cat(_T_2583, _T_2582) @[Cat.scala 30:58]
    node _T_2585 = cat(entries_13.u, entries_12.u) @[Cat.scala 30:58]
    node _T_2586 = cat(entries_15.u, entries_14.u) @[Cat.scala 30:58]
    node _T_2587 = cat(_T_2586, _T_2585) @[Cat.scala 30:58]
    node _T_2588 = cat(_T_2587, _T_2584) @[Cat.scala 30:58]
    node _T_2589 = cat(_T_2588, _T_2581) @[Cat.scala 30:58]
    node _T_2590 = cat(entries_17.u, entries_16.u) @[Cat.scala 30:58]
    node _T_2591 = cat(entries_19.u, entries_18.u) @[Cat.scala 30:58]
    node _T_2592 = cat(_T_2591, _T_2590) @[Cat.scala 30:58]
    node _T_2593 = cat(entries_21.u, entries_20.u) @[Cat.scala 30:58]
    node _T_2594 = cat(entries_23.u, entries_22.u) @[Cat.scala 30:58]
    node _T_2595 = cat(_T_2594, _T_2593) @[Cat.scala 30:58]
    node _T_2596 = cat(_T_2595, _T_2592) @[Cat.scala 30:58]
    node _T_2597 = cat(entries_25.u, entries_24.u) @[Cat.scala 30:58]
    node _T_2598 = cat(entries_27.u, entries_26.u) @[Cat.scala 30:58]
    node _T_2599 = cat(_T_2598, _T_2597) @[Cat.scala 30:58]
    node _T_2600 = cat(entries_29.u, entries_28.u) @[Cat.scala 30:58]
    node _T_2601 = cat(entries_32.u, entries_31.u) @[Cat.scala 30:58]
    node _T_2602 = cat(_T_2601, entries_30.u) @[Cat.scala 30:58]
    node _T_2603 = cat(_T_2602, _T_2600) @[Cat.scala 30:58]
    node _T_2604 = cat(_T_2603, _T_2599) @[Cat.scala 30:58]
    node _T_2605 = cat(_T_2604, _T_2596) @[Cat.scala 30:58]
    node _T_2606 = cat(_T_2605, _T_2589) @[Cat.scala 30:58]
    node _T_2607 = not(_T_2606) @[TLB.scala 175:31]
    node _T_2608 = cat(entries_1.u, entries_0.u) @[Cat.scala 30:58]
    node _T_2609 = cat(entries_3.u, entries_2.u) @[Cat.scala 30:58]
    node _T_2610 = cat(_T_2609, _T_2608) @[Cat.scala 30:58]
    node _T_2611 = cat(entries_5.u, entries_4.u) @[Cat.scala 30:58]
    node _T_2612 = cat(entries_7.u, entries_6.u) @[Cat.scala 30:58]
    node _T_2613 = cat(_T_2612, _T_2611) @[Cat.scala 30:58]
    node _T_2614 = cat(_T_2613, _T_2610) @[Cat.scala 30:58]
    node _T_2615 = cat(entries_9.u, entries_8.u) @[Cat.scala 30:58]
    node _T_2616 = cat(entries_11.u, entries_10.u) @[Cat.scala 30:58]
    node _T_2617 = cat(_T_2616, _T_2615) @[Cat.scala 30:58]
    node _T_2618 = cat(entries_13.u, entries_12.u) @[Cat.scala 30:58]
    node _T_2619 = cat(entries_15.u, entries_14.u) @[Cat.scala 30:58]
    node _T_2620 = cat(_T_2619, _T_2618) @[Cat.scala 30:58]
    node _T_2621 = cat(_T_2620, _T_2617) @[Cat.scala 30:58]
    node _T_2622 = cat(_T_2621, _T_2614) @[Cat.scala 30:58]
    node _T_2623 = cat(entries_17.u, entries_16.u) @[Cat.scala 30:58]
    node _T_2624 = cat(entries_19.u, entries_18.u) @[Cat.scala 30:58]
    node _T_2625 = cat(_T_2624, _T_2623) @[Cat.scala 30:58]
    node _T_2626 = cat(entries_21.u, entries_20.u) @[Cat.scala 30:58]
    node _T_2627 = cat(entries_23.u, entries_22.u) @[Cat.scala 30:58]
    node _T_2628 = cat(_T_2627, _T_2626) @[Cat.scala 30:58]
    node _T_2629 = cat(_T_2628, _T_2625) @[Cat.scala 30:58]
    node _T_2630 = cat(entries_25.u, entries_24.u) @[Cat.scala 30:58]
    node _T_2631 = cat(entries_27.u, entries_26.u) @[Cat.scala 30:58]
    node _T_2632 = cat(_T_2631, _T_2630) @[Cat.scala 30:58]
    node _T_2633 = cat(entries_29.u, entries_28.u) @[Cat.scala 30:58]
    node _T_2634 = cat(entries_32.u, entries_31.u) @[Cat.scala 30:58]
    node _T_2635 = cat(_T_2634, entries_30.u) @[Cat.scala 30:58]
    node _T_2636 = cat(_T_2635, _T_2633) @[Cat.scala 30:58]
    node _T_2637 = cat(_T_2636, _T_2632) @[Cat.scala 30:58]
    node _T_2638 = cat(_T_2637, _T_2629) @[Cat.scala 30:58]
    node _T_2639 = cat(_T_2638, _T_2622) @[Cat.scala 30:58]
    node priv_x_ok = mux(priv_s, _T_2607, _T_2639) @[TLB.scala 175:22]
    node _T_2641 = cat(entries_1.sr, entries_0.sr) @[Cat.scala 30:58]
    node _T_2642 = cat(entries_3.sr, entries_2.sr) @[Cat.scala 30:58]
    node _T_2643 = cat(_T_2642, _T_2641) @[Cat.scala 30:58]
    node _T_2644 = cat(entries_5.sr, entries_4.sr) @[Cat.scala 30:58]
    node _T_2645 = cat(entries_7.sr, entries_6.sr) @[Cat.scala 30:58]
    node _T_2646 = cat(_T_2645, _T_2644) @[Cat.scala 30:58]
    node _T_2647 = cat(_T_2646, _T_2643) @[Cat.scala 30:58]
    node _T_2648 = cat(entries_9.sr, entries_8.sr) @[Cat.scala 30:58]
    node _T_2649 = cat(entries_11.sr, entries_10.sr) @[Cat.scala 30:58]
    node _T_2650 = cat(_T_2649, _T_2648) @[Cat.scala 30:58]
    node _T_2651 = cat(entries_13.sr, entries_12.sr) @[Cat.scala 30:58]
    node _T_2652 = cat(entries_15.sr, entries_14.sr) @[Cat.scala 30:58]
    node _T_2653 = cat(_T_2652, _T_2651) @[Cat.scala 30:58]
    node _T_2654 = cat(_T_2653, _T_2650) @[Cat.scala 30:58]
    node _T_2655 = cat(_T_2654, _T_2647) @[Cat.scala 30:58]
    node _T_2656 = cat(entries_17.sr, entries_16.sr) @[Cat.scala 30:58]
    node _T_2657 = cat(entries_19.sr, entries_18.sr) @[Cat.scala 30:58]
    node _T_2658 = cat(_T_2657, _T_2656) @[Cat.scala 30:58]
    node _T_2659 = cat(entries_21.sr, entries_20.sr) @[Cat.scala 30:58]
    node _T_2660 = cat(entries_23.sr, entries_22.sr) @[Cat.scala 30:58]
    node _T_2661 = cat(_T_2660, _T_2659) @[Cat.scala 30:58]
    node _T_2662 = cat(_T_2661, _T_2658) @[Cat.scala 30:58]
    node _T_2663 = cat(entries_25.sr, entries_24.sr) @[Cat.scala 30:58]
    node _T_2664 = cat(entries_27.sr, entries_26.sr) @[Cat.scala 30:58]
    node _T_2665 = cat(_T_2664, _T_2663) @[Cat.scala 30:58]
    node _T_2666 = cat(entries_29.sr, entries_28.sr) @[Cat.scala 30:58]
    node _T_2667 = cat(entries_32.sr, entries_31.sr) @[Cat.scala 30:58]
    node _T_2668 = cat(_T_2667, entries_30.sr) @[Cat.scala 30:58]
    node _T_2669 = cat(_T_2668, _T_2666) @[Cat.scala 30:58]
    node _T_2670 = cat(_T_2669, _T_2665) @[Cat.scala 30:58]
    node _T_2671 = cat(_T_2670, _T_2662) @[Cat.scala 30:58]
    node _T_2672 = cat(_T_2671, _T_2655) @[Cat.scala 30:58]
    node _T_2673 = cat(entries_1.sx, entries_0.sx) @[Cat.scala 30:58]
    node _T_2674 = cat(entries_3.sx, entries_2.sx) @[Cat.scala 30:58]
    node _T_2675 = cat(_T_2674, _T_2673) @[Cat.scala 30:58]
    node _T_2676 = cat(entries_5.sx, entries_4.sx) @[Cat.scala 30:58]
    node _T_2677 = cat(entries_7.sx, entries_6.sx) @[Cat.scala 30:58]
    node _T_2678 = cat(_T_2677, _T_2676) @[Cat.scala 30:58]
    node _T_2679 = cat(_T_2678, _T_2675) @[Cat.scala 30:58]
    node _T_2680 = cat(entries_9.sx, entries_8.sx) @[Cat.scala 30:58]
    node _T_2681 = cat(entries_11.sx, entries_10.sx) @[Cat.scala 30:58]
    node _T_2682 = cat(_T_2681, _T_2680) @[Cat.scala 30:58]
    node _T_2683 = cat(entries_13.sx, entries_12.sx) @[Cat.scala 30:58]
    node _T_2684 = cat(entries_15.sx, entries_14.sx) @[Cat.scala 30:58]
    node _T_2685 = cat(_T_2684, _T_2683) @[Cat.scala 30:58]
    node _T_2686 = cat(_T_2685, _T_2682) @[Cat.scala 30:58]
    node _T_2687 = cat(_T_2686, _T_2679) @[Cat.scala 30:58]
    node _T_2688 = cat(entries_17.sx, entries_16.sx) @[Cat.scala 30:58]
    node _T_2689 = cat(entries_19.sx, entries_18.sx) @[Cat.scala 30:58]
    node _T_2690 = cat(_T_2689, _T_2688) @[Cat.scala 30:58]
    node _T_2691 = cat(entries_21.sx, entries_20.sx) @[Cat.scala 30:58]
    node _T_2692 = cat(entries_23.sx, entries_22.sx) @[Cat.scala 30:58]
    node _T_2693 = cat(_T_2692, _T_2691) @[Cat.scala 30:58]
    node _T_2694 = cat(_T_2693, _T_2690) @[Cat.scala 30:58]
    node _T_2695 = cat(entries_25.sx, entries_24.sx) @[Cat.scala 30:58]
    node _T_2696 = cat(entries_27.sx, entries_26.sx) @[Cat.scala 30:58]
    node _T_2697 = cat(_T_2696, _T_2695) @[Cat.scala 30:58]
    node _T_2698 = cat(entries_29.sx, entries_28.sx) @[Cat.scala 30:58]
    node _T_2699 = cat(entries_32.sx, entries_31.sx) @[Cat.scala 30:58]
    node _T_2700 = cat(_T_2699, entries_30.sx) @[Cat.scala 30:58]
    node _T_2701 = cat(_T_2700, _T_2698) @[Cat.scala 30:58]
    node _T_2702 = cat(_T_2701, _T_2697) @[Cat.scala 30:58]
    node _T_2703 = cat(_T_2702, _T_2694) @[Cat.scala 30:58]
    node _T_2704 = cat(_T_2703, _T_2687) @[Cat.scala 30:58]
    node _T_2706 = mux(io.ptw.status.mxr, _T_2704, UInt<1>("h00")) @[TLB.scala 176:73]
    node _T_2707 = or(_T_2672, _T_2706) @[TLB.scala 176:68]
    node _T_2708 = and(priv_rw_ok, _T_2707) @[TLB.scala 176:40]
    node r_array = cat(UInt<1>("h01"), _T_2708) @[Cat.scala 30:58]
    node _T_2710 = cat(entries_1.sw, entries_0.sw) @[Cat.scala 30:58]
    node _T_2711 = cat(entries_3.sw, entries_2.sw) @[Cat.scala 30:58]
    node _T_2712 = cat(_T_2711, _T_2710) @[Cat.scala 30:58]
    node _T_2713 = cat(entries_5.sw, entries_4.sw) @[Cat.scala 30:58]
    node _T_2714 = cat(entries_7.sw, entries_6.sw) @[Cat.scala 30:58]
    node _T_2715 = cat(_T_2714, _T_2713) @[Cat.scala 30:58]
    node _T_2716 = cat(_T_2715, _T_2712) @[Cat.scala 30:58]
    node _T_2717 = cat(entries_9.sw, entries_8.sw) @[Cat.scala 30:58]
    node _T_2718 = cat(entries_11.sw, entries_10.sw) @[Cat.scala 30:58]
    node _T_2719 = cat(_T_2718, _T_2717) @[Cat.scala 30:58]
    node _T_2720 = cat(entries_13.sw, entries_12.sw) @[Cat.scala 30:58]
    node _T_2721 = cat(entries_15.sw, entries_14.sw) @[Cat.scala 30:58]
    node _T_2722 = cat(_T_2721, _T_2720) @[Cat.scala 30:58]
    node _T_2723 = cat(_T_2722, _T_2719) @[Cat.scala 30:58]
    node _T_2724 = cat(_T_2723, _T_2716) @[Cat.scala 30:58]
    node _T_2725 = cat(entries_17.sw, entries_16.sw) @[Cat.scala 30:58]
    node _T_2726 = cat(entries_19.sw, entries_18.sw) @[Cat.scala 30:58]
    node _T_2727 = cat(_T_2726, _T_2725) @[Cat.scala 30:58]
    node _T_2728 = cat(entries_21.sw, entries_20.sw) @[Cat.scala 30:58]
    node _T_2729 = cat(entries_23.sw, entries_22.sw) @[Cat.scala 30:58]
    node _T_2730 = cat(_T_2729, _T_2728) @[Cat.scala 30:58]
    node _T_2731 = cat(_T_2730, _T_2727) @[Cat.scala 30:58]
    node _T_2732 = cat(entries_25.sw, entries_24.sw) @[Cat.scala 30:58]
    node _T_2733 = cat(entries_27.sw, entries_26.sw) @[Cat.scala 30:58]
    node _T_2734 = cat(_T_2733, _T_2732) @[Cat.scala 30:58]
    node _T_2735 = cat(entries_29.sw, entries_28.sw) @[Cat.scala 30:58]
    node _T_2736 = cat(entries_32.sw, entries_31.sw) @[Cat.scala 30:58]
    node _T_2737 = cat(_T_2736, entries_30.sw) @[Cat.scala 30:58]
    node _T_2738 = cat(_T_2737, _T_2735) @[Cat.scala 30:58]
    node _T_2739 = cat(_T_2738, _T_2734) @[Cat.scala 30:58]
    node _T_2740 = cat(_T_2739, _T_2731) @[Cat.scala 30:58]
    node _T_2741 = cat(_T_2740, _T_2724) @[Cat.scala 30:58]
    node _T_2742 = and(priv_rw_ok, _T_2741) @[TLB.scala 177:40]
    node w_array = cat(UInt<1>("h01"), _T_2742) @[Cat.scala 30:58]
    node _T_2744 = cat(entries_1.sx, entries_0.sx) @[Cat.scala 30:58]
    node _T_2745 = cat(entries_3.sx, entries_2.sx) @[Cat.scala 30:58]
    node _T_2746 = cat(_T_2745, _T_2744) @[Cat.scala 30:58]
    node _T_2747 = cat(entries_5.sx, entries_4.sx) @[Cat.scala 30:58]
    node _T_2748 = cat(entries_7.sx, entries_6.sx) @[Cat.scala 30:58]
    node _T_2749 = cat(_T_2748, _T_2747) @[Cat.scala 30:58]
    node _T_2750 = cat(_T_2749, _T_2746) @[Cat.scala 30:58]
    node _T_2751 = cat(entries_9.sx, entries_8.sx) @[Cat.scala 30:58]
    node _T_2752 = cat(entries_11.sx, entries_10.sx) @[Cat.scala 30:58]
    node _T_2753 = cat(_T_2752, _T_2751) @[Cat.scala 30:58]
    node _T_2754 = cat(entries_13.sx, entries_12.sx) @[Cat.scala 30:58]
    node _T_2755 = cat(entries_15.sx, entries_14.sx) @[Cat.scala 30:58]
    node _T_2756 = cat(_T_2755, _T_2754) @[Cat.scala 30:58]
    node _T_2757 = cat(_T_2756, _T_2753) @[Cat.scala 30:58]
    node _T_2758 = cat(_T_2757, _T_2750) @[Cat.scala 30:58]
    node _T_2759 = cat(entries_17.sx, entries_16.sx) @[Cat.scala 30:58]
    node _T_2760 = cat(entries_19.sx, entries_18.sx) @[Cat.scala 30:58]
    node _T_2761 = cat(_T_2760, _T_2759) @[Cat.scala 30:58]
    node _T_2762 = cat(entries_21.sx, entries_20.sx) @[Cat.scala 30:58]
    node _T_2763 = cat(entries_23.sx, entries_22.sx) @[Cat.scala 30:58]
    node _T_2764 = cat(_T_2763, _T_2762) @[Cat.scala 30:58]
    node _T_2765 = cat(_T_2764, _T_2761) @[Cat.scala 30:58]
    node _T_2766 = cat(entries_25.sx, entries_24.sx) @[Cat.scala 30:58]
    node _T_2767 = cat(entries_27.sx, entries_26.sx) @[Cat.scala 30:58]
    node _T_2768 = cat(_T_2767, _T_2766) @[Cat.scala 30:58]
    node _T_2769 = cat(entries_29.sx, entries_28.sx) @[Cat.scala 30:58]
    node _T_2770 = cat(entries_32.sx, entries_31.sx) @[Cat.scala 30:58]
    node _T_2771 = cat(_T_2770, entries_30.sx) @[Cat.scala 30:58]
    node _T_2772 = cat(_T_2771, _T_2769) @[Cat.scala 30:58]
    node _T_2773 = cat(_T_2772, _T_2768) @[Cat.scala 30:58]
    node _T_2774 = cat(_T_2773, _T_2765) @[Cat.scala 30:58]
    node _T_2775 = cat(_T_2774, _T_2758) @[Cat.scala 30:58]
    node _T_2776 = and(priv_x_ok, _T_2775) @[TLB.scala 178:39]
    node x_array = cat(UInt<1>("h01"), _T_2776) @[Cat.scala 30:58]
    node _T_2777 = bits(prot_r, 0, 0) @[Bitwise.scala 72:15]
    node _T_2780 = mux(_T_2777, UInt<2>("h03"), UInt<2>("h00")) @[Bitwise.scala 72:12]
    node _T_2781 = cat(entries_1.pr, entries_0.pr) @[Cat.scala 30:58]
    node _T_2782 = cat(entries_3.pr, entries_2.pr) @[Cat.scala 30:58]
    node _T_2783 = cat(_T_2782, _T_2781) @[Cat.scala 30:58]
    node _T_2784 = cat(entries_5.pr, entries_4.pr) @[Cat.scala 30:58]
    node _T_2785 = cat(entries_7.pr, entries_6.pr) @[Cat.scala 30:58]
    node _T_2786 = cat(_T_2785, _T_2784) @[Cat.scala 30:58]
    node _T_2787 = cat(_T_2786, _T_2783) @[Cat.scala 30:58]
    node _T_2788 = cat(entries_9.pr, entries_8.pr) @[Cat.scala 30:58]
    node _T_2789 = cat(entries_11.pr, entries_10.pr) @[Cat.scala 30:58]
    node _T_2790 = cat(_T_2789, _T_2788) @[Cat.scala 30:58]
    node _T_2791 = cat(entries_13.pr, entries_12.pr) @[Cat.scala 30:58]
    node _T_2792 = cat(entries_15.pr, entries_14.pr) @[Cat.scala 30:58]
    node _T_2793 = cat(_T_2792, _T_2791) @[Cat.scala 30:58]
    node _T_2794 = cat(_T_2793, _T_2790) @[Cat.scala 30:58]
    node _T_2795 = cat(_T_2794, _T_2787) @[Cat.scala 30:58]
    node _T_2796 = cat(entries_17.pr, entries_16.pr) @[Cat.scala 30:58]
    node _T_2797 = cat(entries_19.pr, entries_18.pr) @[Cat.scala 30:58]
    node _T_2798 = cat(_T_2797, _T_2796) @[Cat.scala 30:58]
    node _T_2799 = cat(entries_21.pr, entries_20.pr) @[Cat.scala 30:58]
    node _T_2800 = cat(entries_23.pr, entries_22.pr) @[Cat.scala 30:58]
    node _T_2801 = cat(_T_2800, _T_2799) @[Cat.scala 30:58]
    node _T_2802 = cat(_T_2801, _T_2798) @[Cat.scala 30:58]
    node _T_2803 = cat(entries_25.pr, entries_24.pr) @[Cat.scala 30:58]
    node _T_2804 = cat(entries_27.pr, entries_26.pr) @[Cat.scala 30:58]
    node _T_2805 = cat(_T_2804, _T_2803) @[Cat.scala 30:58]
    node _T_2806 = cat(entries_29.pr, entries_28.pr) @[Cat.scala 30:58]
    node _T_2807 = cat(entries_31.pr, entries_30.pr) @[Cat.scala 30:58]
    node _T_2808 = cat(_T_2807, _T_2806) @[Cat.scala 30:58]
    node _T_2809 = cat(_T_2808, _T_2805) @[Cat.scala 30:58]
    node _T_2810 = cat(_T_2809, _T_2802) @[Cat.scala 30:58]
    node _T_2811 = cat(_T_2810, _T_2795) @[Cat.scala 30:58]
    node pr_array = cat(_T_2780, _T_2811) @[Cat.scala 30:58]
    node _T_2812 = bits(prot_w, 0, 0) @[Bitwise.scala 72:15]
    node _T_2815 = mux(_T_2812, UInt<2>("h03"), UInt<2>("h00")) @[Bitwise.scala 72:12]
    node _T_2816 = cat(entries_1.pw, entries_0.pw) @[Cat.scala 30:58]
    node _T_2817 = cat(entries_3.pw, entries_2.pw) @[Cat.scala 30:58]
    node _T_2818 = cat(_T_2817, _T_2816) @[Cat.scala 30:58]
    node _T_2819 = cat(entries_5.pw, entries_4.pw) @[Cat.scala 30:58]
    node _T_2820 = cat(entries_7.pw, entries_6.pw) @[Cat.scala 30:58]
    node _T_2821 = cat(_T_2820, _T_2819) @[Cat.scala 30:58]
    node _T_2822 = cat(_T_2821, _T_2818) @[Cat.scala 30:58]
    node _T_2823 = cat(entries_9.pw, entries_8.pw) @[Cat.scala 30:58]
    node _T_2824 = cat(entries_11.pw, entries_10.pw) @[Cat.scala 30:58]
    node _T_2825 = cat(_T_2824, _T_2823) @[Cat.scala 30:58]
    node _T_2826 = cat(entries_13.pw, entries_12.pw) @[Cat.scala 30:58]
    node _T_2827 = cat(entries_15.pw, entries_14.pw) @[Cat.scala 30:58]
    node _T_2828 = cat(_T_2827, _T_2826) @[Cat.scala 30:58]
    node _T_2829 = cat(_T_2828, _T_2825) @[Cat.scala 30:58]
    node _T_2830 = cat(_T_2829, _T_2822) @[Cat.scala 30:58]
    node _T_2831 = cat(entries_17.pw, entries_16.pw) @[Cat.scala 30:58]
    node _T_2832 = cat(entries_19.pw, entries_18.pw) @[Cat.scala 30:58]
    node _T_2833 = cat(_T_2832, _T_2831) @[Cat.scala 30:58]
    node _T_2834 = cat(entries_21.pw, entries_20.pw) @[Cat.scala 30:58]
    node _T_2835 = cat(entries_23.pw, entries_22.pw) @[Cat.scala 30:58]
    node _T_2836 = cat(_T_2835, _T_2834) @[Cat.scala 30:58]
    node _T_2837 = cat(_T_2836, _T_2833) @[Cat.scala 30:58]
    node _T_2838 = cat(entries_25.pw, entries_24.pw) @[Cat.scala 30:58]
    node _T_2839 = cat(entries_27.pw, entries_26.pw) @[Cat.scala 30:58]
    node _T_2840 = cat(_T_2839, _T_2838) @[Cat.scala 30:58]
    node _T_2841 = cat(entries_29.pw, entries_28.pw) @[Cat.scala 30:58]
    node _T_2842 = cat(entries_31.pw, entries_30.pw) @[Cat.scala 30:58]
    node _T_2843 = cat(_T_2842, _T_2841) @[Cat.scala 30:58]
    node _T_2844 = cat(_T_2843, _T_2840) @[Cat.scala 30:58]
    node _T_2845 = cat(_T_2844, _T_2837) @[Cat.scala 30:58]
    node _T_2846 = cat(_T_2845, _T_2830) @[Cat.scala 30:58]
    node pw_array = cat(_T_2815, _T_2846) @[Cat.scala 30:58]
    node _T_2847 = bits(prot_x, 0, 0) @[Bitwise.scala 72:15]
    node _T_2850 = mux(_T_2847, UInt<2>("h03"), UInt<2>("h00")) @[Bitwise.scala 72:12]
    node _T_2851 = cat(entries_1.px, entries_0.px) @[Cat.scala 30:58]
    node _T_2852 = cat(entries_3.px, entries_2.px) @[Cat.scala 30:58]
    node _T_2853 = cat(_T_2852, _T_2851) @[Cat.scala 30:58]
    node _T_2854 = cat(entries_5.px, entries_4.px) @[Cat.scala 30:58]
    node _T_2855 = cat(entries_7.px, entries_6.px) @[Cat.scala 30:58]
    node _T_2856 = cat(_T_2855, _T_2854) @[Cat.scala 30:58]
    node _T_2857 = cat(_T_2856, _T_2853) @[Cat.scala 30:58]
    node _T_2858 = cat(entries_9.px, entries_8.px) @[Cat.scala 30:58]
    node _T_2859 = cat(entries_11.px, entries_10.px) @[Cat.scala 30:58]
    node _T_2860 = cat(_T_2859, _T_2858) @[Cat.scala 30:58]
    node _T_2861 = cat(entries_13.px, entries_12.px) @[Cat.scala 30:58]
    node _T_2862 = cat(entries_15.px, entries_14.px) @[Cat.scala 30:58]
    node _T_2863 = cat(_T_2862, _T_2861) @[Cat.scala 30:58]
    node _T_2864 = cat(_T_2863, _T_2860) @[Cat.scala 30:58]
    node _T_2865 = cat(_T_2864, _T_2857) @[Cat.scala 30:58]
    node _T_2866 = cat(entries_17.px, entries_16.px) @[Cat.scala 30:58]
    node _T_2867 = cat(entries_19.px, entries_18.px) @[Cat.scala 30:58]
    node _T_2868 = cat(_T_2867, _T_2866) @[Cat.scala 30:58]
    node _T_2869 = cat(entries_21.px, entries_20.px) @[Cat.scala 30:58]
    node _T_2870 = cat(entries_23.px, entries_22.px) @[Cat.scala 30:58]
    node _T_2871 = cat(_T_2870, _T_2869) @[Cat.scala 30:58]
    node _T_2872 = cat(_T_2871, _T_2868) @[Cat.scala 30:58]
    node _T_2873 = cat(entries_25.px, entries_24.px) @[Cat.scala 30:58]
    node _T_2874 = cat(entries_27.px, entries_26.px) @[Cat.scala 30:58]
    node _T_2875 = cat(_T_2874, _T_2873) @[Cat.scala 30:58]
    node _T_2876 = cat(entries_29.px, entries_28.px) @[Cat.scala 30:58]
    node _T_2877 = cat(entries_31.px, entries_30.px) @[Cat.scala 30:58]
    node _T_2878 = cat(_T_2877, _T_2876) @[Cat.scala 30:58]
    node _T_2879 = cat(_T_2878, _T_2875) @[Cat.scala 30:58]
    node _T_2880 = cat(_T_2879, _T_2872) @[Cat.scala 30:58]
    node _T_2881 = cat(_T_2880, _T_2865) @[Cat.scala 30:58]
    node px_array = cat(_T_2850, _T_2881) @[Cat.scala 30:58]
    node _T_2882 = bits(prot_aa, 0, 0) @[Bitwise.scala 72:15]
    node _T_2885 = mux(_T_2882, UInt<2>("h03"), UInt<2>("h00")) @[Bitwise.scala 72:12]
    node _T_2886 = cat(entries_1.paa, entries_0.paa) @[Cat.scala 30:58]
    node _T_2887 = cat(entries_3.paa, entries_2.paa) @[Cat.scala 30:58]
    node _T_2888 = cat(_T_2887, _T_2886) @[Cat.scala 30:58]
    node _T_2889 = cat(entries_5.paa, entries_4.paa) @[Cat.scala 30:58]
    node _T_2890 = cat(entries_7.paa, entries_6.paa) @[Cat.scala 30:58]
    node _T_2891 = cat(_T_2890, _T_2889) @[Cat.scala 30:58]
    node _T_2892 = cat(_T_2891, _T_2888) @[Cat.scala 30:58]
    node _T_2893 = cat(entries_9.paa, entries_8.paa) @[Cat.scala 30:58]
    node _T_2894 = cat(entries_11.paa, entries_10.paa) @[Cat.scala 30:58]
    node _T_2895 = cat(_T_2894, _T_2893) @[Cat.scala 30:58]
    node _T_2896 = cat(entries_13.paa, entries_12.paa) @[Cat.scala 30:58]
    node _T_2897 = cat(entries_15.paa, entries_14.paa) @[Cat.scala 30:58]
    node _T_2898 = cat(_T_2897, _T_2896) @[Cat.scala 30:58]
    node _T_2899 = cat(_T_2898, _T_2895) @[Cat.scala 30:58]
    node _T_2900 = cat(_T_2899, _T_2892) @[Cat.scala 30:58]
    node _T_2901 = cat(entries_17.paa, entries_16.paa) @[Cat.scala 30:58]
    node _T_2902 = cat(entries_19.paa, entries_18.paa) @[Cat.scala 30:58]
    node _T_2903 = cat(_T_2902, _T_2901) @[Cat.scala 30:58]
    node _T_2904 = cat(entries_21.paa, entries_20.paa) @[Cat.scala 30:58]
    node _T_2905 = cat(entries_23.paa, entries_22.paa) @[Cat.scala 30:58]
    node _T_2906 = cat(_T_2905, _T_2904) @[Cat.scala 30:58]
    node _T_2907 = cat(_T_2906, _T_2903) @[Cat.scala 30:58]
    node _T_2908 = cat(entries_25.paa, entries_24.paa) @[Cat.scala 30:58]
    node _T_2909 = cat(entries_27.paa, entries_26.paa) @[Cat.scala 30:58]
    node _T_2910 = cat(_T_2909, _T_2908) @[Cat.scala 30:58]
    node _T_2911 = cat(entries_29.paa, entries_28.paa) @[Cat.scala 30:58]
    node _T_2912 = cat(entries_31.paa, entries_30.paa) @[Cat.scala 30:58]
    node _T_2913 = cat(_T_2912, _T_2911) @[Cat.scala 30:58]
    node _T_2914 = cat(_T_2913, _T_2910) @[Cat.scala 30:58]
    node _T_2915 = cat(_T_2914, _T_2907) @[Cat.scala 30:58]
    node _T_2916 = cat(_T_2915, _T_2900) @[Cat.scala 30:58]
    node paa_array = cat(_T_2885, _T_2916) @[Cat.scala 30:58]
    node _T_2917 = bits(prot_al, 0, 0) @[Bitwise.scala 72:15]
    node _T_2920 = mux(_T_2917, UInt<2>("h03"), UInt<2>("h00")) @[Bitwise.scala 72:12]
    node _T_2921 = cat(entries_1.pal, entries_0.pal) @[Cat.scala 30:58]
    node _T_2922 = cat(entries_3.pal, entries_2.pal) @[Cat.scala 30:58]
    node _T_2923 = cat(_T_2922, _T_2921) @[Cat.scala 30:58]
    node _T_2924 = cat(entries_5.pal, entries_4.pal) @[Cat.scala 30:58]
    node _T_2925 = cat(entries_7.pal, entries_6.pal) @[Cat.scala 30:58]
    node _T_2926 = cat(_T_2925, _T_2924) @[Cat.scala 30:58]
    node _T_2927 = cat(_T_2926, _T_2923) @[Cat.scala 30:58]
    node _T_2928 = cat(entries_9.pal, entries_8.pal) @[Cat.scala 30:58]
    node _T_2929 = cat(entries_11.pal, entries_10.pal) @[Cat.scala 30:58]
    node _T_2930 = cat(_T_2929, _T_2928) @[Cat.scala 30:58]
    node _T_2931 = cat(entries_13.pal, entries_12.pal) @[Cat.scala 30:58]
    node _T_2932 = cat(entries_15.pal, entries_14.pal) @[Cat.scala 30:58]
    node _T_2933 = cat(_T_2932, _T_2931) @[Cat.scala 30:58]
    node _T_2934 = cat(_T_2933, _T_2930) @[Cat.scala 30:58]
    node _T_2935 = cat(_T_2934, _T_2927) @[Cat.scala 30:58]
    node _T_2936 = cat(entries_17.pal, entries_16.pal) @[Cat.scala 30:58]
    node _T_2937 = cat(entries_19.pal, entries_18.pal) @[Cat.scala 30:58]
    node _T_2938 = cat(_T_2937, _T_2936) @[Cat.scala 30:58]
    node _T_2939 = cat(entries_21.pal, entries_20.pal) @[Cat.scala 30:58]
    node _T_2940 = cat(entries_23.pal, entries_22.pal) @[Cat.scala 30:58]
    node _T_2941 = cat(_T_2940, _T_2939) @[Cat.scala 30:58]
    node _T_2942 = cat(_T_2941, _T_2938) @[Cat.scala 30:58]
    node _T_2943 = cat(entries_25.pal, entries_24.pal) @[Cat.scala 30:58]
    node _T_2944 = cat(entries_27.pal, entries_26.pal) @[Cat.scala 30:58]
    node _T_2945 = cat(_T_2944, _T_2943) @[Cat.scala 30:58]
    node _T_2946 = cat(entries_29.pal, entries_28.pal) @[Cat.scala 30:58]
    node _T_2947 = cat(entries_31.pal, entries_30.pal) @[Cat.scala 30:58]
    node _T_2948 = cat(_T_2947, _T_2946) @[Cat.scala 30:58]
    node _T_2949 = cat(_T_2948, _T_2945) @[Cat.scala 30:58]
    node _T_2950 = cat(_T_2949, _T_2942) @[Cat.scala 30:58]
    node _T_2951 = cat(_T_2950, _T_2935) @[Cat.scala 30:58]
    node pal_array = cat(_T_2920, _T_2951) @[Cat.scala 30:58]
    node _T_2952 = bits(prot_eff, 0, 0) @[Bitwise.scala 72:15]
    node _T_2955 = mux(_T_2952, UInt<2>("h03"), UInt<2>("h00")) @[Bitwise.scala 72:12]
    node _T_2956 = cat(entries_1.eff, entries_0.eff) @[Cat.scala 30:58]
    node _T_2957 = cat(entries_3.eff, entries_2.eff) @[Cat.scala 30:58]
    node _T_2958 = cat(_T_2957, _T_2956) @[Cat.scala 30:58]
    node _T_2959 = cat(entries_5.eff, entries_4.eff) @[Cat.scala 30:58]
    node _T_2960 = cat(entries_7.eff, entries_6.eff) @[Cat.scala 30:58]
    node _T_2961 = cat(_T_2960, _T_2959) @[Cat.scala 30:58]
    node _T_2962 = cat(_T_2961, _T_2958) @[Cat.scala 30:58]
    node _T_2963 = cat(entries_9.eff, entries_8.eff) @[Cat.scala 30:58]
    node _T_2964 = cat(entries_11.eff, entries_10.eff) @[Cat.scala 30:58]
    node _T_2965 = cat(_T_2964, _T_2963) @[Cat.scala 30:58]
    node _T_2966 = cat(entries_13.eff, entries_12.eff) @[Cat.scala 30:58]
    node _T_2967 = cat(entries_15.eff, entries_14.eff) @[Cat.scala 30:58]
    node _T_2968 = cat(_T_2967, _T_2966) @[Cat.scala 30:58]
    node _T_2969 = cat(_T_2968, _T_2965) @[Cat.scala 30:58]
    node _T_2970 = cat(_T_2969, _T_2962) @[Cat.scala 30:58]
    node _T_2971 = cat(entries_17.eff, entries_16.eff) @[Cat.scala 30:58]
    node _T_2972 = cat(entries_19.eff, entries_18.eff) @[Cat.scala 30:58]
    node _T_2973 = cat(_T_2972, _T_2971) @[Cat.scala 30:58]
    node _T_2974 = cat(entries_21.eff, entries_20.eff) @[Cat.scala 30:58]
    node _T_2975 = cat(entries_23.eff, entries_22.eff) @[Cat.scala 30:58]
    node _T_2976 = cat(_T_2975, _T_2974) @[Cat.scala 30:58]
    node _T_2977 = cat(_T_2976, _T_2973) @[Cat.scala 30:58]
    node _T_2978 = cat(entries_25.eff, entries_24.eff) @[Cat.scala 30:58]
    node _T_2979 = cat(entries_27.eff, entries_26.eff) @[Cat.scala 30:58]
    node _T_2980 = cat(_T_2979, _T_2978) @[Cat.scala 30:58]
    node _T_2981 = cat(entries_29.eff, entries_28.eff) @[Cat.scala 30:58]
    node _T_2982 = cat(entries_31.eff, entries_30.eff) @[Cat.scala 30:58]
    node _T_2983 = cat(_T_2982, _T_2981) @[Cat.scala 30:58]
    node _T_2984 = cat(_T_2983, _T_2980) @[Cat.scala 30:58]
    node _T_2985 = cat(_T_2984, _T_2977) @[Cat.scala 30:58]
    node _T_2986 = cat(_T_2985, _T_2970) @[Cat.scala 30:58]
    node eff_array = cat(_T_2955, _T_2986) @[Cat.scala 30:58]
    node _T_2987 = bits(cacheable, 0, 0) @[Bitwise.scala 72:15]
    node _T_2990 = mux(_T_2987, UInt<2>("h03"), UInt<2>("h00")) @[Bitwise.scala 72:12]
    node _T_2991 = cat(entries_1.c, entries_0.c) @[Cat.scala 30:58]
    node _T_2992 = cat(entries_3.c, entries_2.c) @[Cat.scala 30:58]
    node _T_2993 = cat(_T_2992, _T_2991) @[Cat.scala 30:58]
    node _T_2994 = cat(entries_5.c, entries_4.c) @[Cat.scala 30:58]
    node _T_2995 = cat(entries_7.c, entries_6.c) @[Cat.scala 30:58]
    node _T_2996 = cat(_T_2995, _T_2994) @[Cat.scala 30:58]
    node _T_2997 = cat(_T_2996, _T_2993) @[Cat.scala 30:58]
    node _T_2998 = cat(entries_9.c, entries_8.c) @[Cat.scala 30:58]
    node _T_2999 = cat(entries_11.c, entries_10.c) @[Cat.scala 30:58]
    node _T_3000 = cat(_T_2999, _T_2998) @[Cat.scala 30:58]
    node _T_3001 = cat(entries_13.c, entries_12.c) @[Cat.scala 30:58]
    node _T_3002 = cat(entries_15.c, entries_14.c) @[Cat.scala 30:58]
    node _T_3003 = cat(_T_3002, _T_3001) @[Cat.scala 30:58]
    node _T_3004 = cat(_T_3003, _T_3000) @[Cat.scala 30:58]
    node _T_3005 = cat(_T_3004, _T_2997) @[Cat.scala 30:58]
    node _T_3006 = cat(entries_17.c, entries_16.c) @[Cat.scala 30:58]
    node _T_3007 = cat(entries_19.c, entries_18.c) @[Cat.scala 30:58]
    node _T_3008 = cat(_T_3007, _T_3006) @[Cat.scala 30:58]
    node _T_3009 = cat(entries_21.c, entries_20.c) @[Cat.scala 30:58]
    node _T_3010 = cat(entries_23.c, entries_22.c) @[Cat.scala 30:58]
    node _T_3011 = cat(_T_3010, _T_3009) @[Cat.scala 30:58]
    node _T_3012 = cat(_T_3011, _T_3008) @[Cat.scala 30:58]
    node _T_3013 = cat(entries_25.c, entries_24.c) @[Cat.scala 30:58]
    node _T_3014 = cat(entries_27.c, entries_26.c) @[Cat.scala 30:58]
    node _T_3015 = cat(_T_3014, _T_3013) @[Cat.scala 30:58]
    node _T_3016 = cat(entries_29.c, entries_28.c) @[Cat.scala 30:58]
    node _T_3017 = cat(entries_31.c, entries_30.c) @[Cat.scala 30:58]
    node _T_3018 = cat(_T_3017, _T_3016) @[Cat.scala 30:58]
    node _T_3019 = cat(_T_3018, _T_3015) @[Cat.scala 30:58]
    node _T_3020 = cat(_T_3019, _T_3012) @[Cat.scala 30:58]
    node _T_3021 = cat(_T_3020, _T_3005) @[Cat.scala 30:58]
    node c_array = cat(_T_2990, _T_3021) @[Cat.scala 30:58]
    node _T_3022 = and(cacheable, homogeneous) @[TLB.scala 186:42]
    node _T_3024 = cat(entries_1.c, entries_0.c) @[Cat.scala 30:58]
    node _T_3025 = cat(entries_3.c, entries_2.c) @[Cat.scala 30:58]
    node _T_3026 = cat(_T_3025, _T_3024) @[Cat.scala 30:58]
    node _T_3027 = cat(entries_5.c, entries_4.c) @[Cat.scala 30:58]
    node _T_3028 = cat(entries_7.c, entries_6.c) @[Cat.scala 30:58]
    node _T_3029 = cat(_T_3028, _T_3027) @[Cat.scala 30:58]
    node _T_3030 = cat(_T_3029, _T_3026) @[Cat.scala 30:58]
    node _T_3031 = cat(entries_9.c, entries_8.c) @[Cat.scala 30:58]
    node _T_3032 = cat(entries_11.c, entries_10.c) @[Cat.scala 30:58]
    node _T_3033 = cat(_T_3032, _T_3031) @[Cat.scala 30:58]
    node _T_3034 = cat(entries_13.c, entries_12.c) @[Cat.scala 30:58]
    node _T_3035 = cat(entries_15.c, entries_14.c) @[Cat.scala 30:58]
    node _T_3036 = cat(_T_3035, _T_3034) @[Cat.scala 30:58]
    node _T_3037 = cat(_T_3036, _T_3033) @[Cat.scala 30:58]
    node _T_3038 = cat(_T_3037, _T_3030) @[Cat.scala 30:58]
    node _T_3039 = cat(entries_17.c, entries_16.c) @[Cat.scala 30:58]
    node _T_3040 = cat(entries_19.c, entries_18.c) @[Cat.scala 30:58]
    node _T_3041 = cat(_T_3040, _T_3039) @[Cat.scala 30:58]
    node _T_3042 = cat(entries_21.c, entries_20.c) @[Cat.scala 30:58]
    node _T_3043 = cat(entries_23.c, entries_22.c) @[Cat.scala 30:58]
    node _T_3044 = cat(_T_3043, _T_3042) @[Cat.scala 30:58]
    node _T_3045 = cat(_T_3044, _T_3041) @[Cat.scala 30:58]
    node _T_3046 = cat(entries_25.c, entries_24.c) @[Cat.scala 30:58]
    node _T_3047 = cat(entries_27.c, entries_26.c) @[Cat.scala 30:58]
    node _T_3048 = cat(_T_3047, _T_3046) @[Cat.scala 30:58]
    node _T_3049 = cat(entries_29.c, entries_28.c) @[Cat.scala 30:58]
    node _T_3050 = cat(entries_31.c, entries_30.c) @[Cat.scala 30:58]
    node _T_3051 = cat(_T_3050, _T_3049) @[Cat.scala 30:58]
    node _T_3052 = cat(_T_3051, _T_3048) @[Cat.scala 30:58]
    node _T_3053 = cat(_T_3052, _T_3045) @[Cat.scala 30:58]
    node _T_3054 = cat(_T_3053, _T_3038) @[Cat.scala 30:58]
    node _T_3055 = cat(_T_3022, UInt<1>("h00")) @[Cat.scala 30:58]
    node prefetchable_array = cat(_T_3055, _T_3054) @[Cat.scala 30:58]
    node _T_3057 = dshl(UInt<1>("h01"), io.req.bits.size) @[OneHot.scala 45:35]
    node _T_3059 = sub(_T_3057, UInt<1>("h01")) @[TLB.scala 188:69]
    node _T_3060 = asUInt(_T_3059) @[TLB.scala 188:69]
    node _T_3061 = tail(_T_3060, 1) @[TLB.scala 188:69]
    node _T_3062 = and(io.req.bits.vaddr, _T_3061) @[TLB.scala 188:39]
    node misaligned = neq(_T_3062, UInt<1>("h00")) @[TLB.scala 188:75]
    node _T_3064 = asSInt(io.req.bits.vaddr) @[TLB.scala 191:30]
    node _T_3066 = lt(_T_3064, asSInt(UInt<1>("h00"))) @[TLB.scala 191:37]
    node _T_3067 = asSInt(vpn) @[TLB.scala 191:53]
    node _T_3069 = lt(_T_3067, asSInt(UInt<1>("h00"))) @[TLB.scala 191:60]
    node _T_3070 = neq(_T_3066, _T_3069) @[TLB.scala 191:44]
    node bad_va = and(vm_enabled, _T_3070) @[TLB.scala 189:27]
    node lrscAllowed = mux(UInt<1>("h00"), UInt<1>("h00"), c_array) @[TLB.scala 193:24]
    node _T_3074 = mux(misaligned, eff_array, UInt<1>("h00")) @[TLB.scala 195:8]
    node _T_3078 = eq(io.req.bits.cmd, UInt<3>("h06")) @[package.scala 14:47]
    node _T_3079 = eq(io.req.bits.cmd, UInt<3>("h07")) @[package.scala 14:47]
    node _T_3080 = or(_T_3078, _T_3079) @[package.scala 14:62]
    node _T_3081 = and(UInt<1>("h01"), _T_3080) @[TLB.scala 196:28]
    node _T_3082 = not(lrscAllowed) @[TLB.scala 196:70]
    node _T_3084 = mux(_T_3081, _T_3082, UInt<1>("h00")) @[TLB.scala 196:8]
    node ae_array = or(_T_3074, _T_3084) @[TLB.scala 195:37]
    node _T_3086 = eq(io.req.bits.cmd, UInt<1>("h00")) @[Consts.scala 93:31]
    node _T_3088 = eq(io.req.bits.cmd, UInt<3>("h06")) @[Consts.scala 93:48]
    node _T_3089 = or(_T_3086, _T_3088) @[Consts.scala 93:41]
    node _T_3091 = eq(io.req.bits.cmd, UInt<3>("h07")) @[Consts.scala 93:65]
    node _T_3092 = or(_T_3089, _T_3091) @[Consts.scala 93:58]
    node _T_3097 = eq(io.req.bits.cmd, UInt<3>("h04")) @[package.scala 14:47]
    node _T_3098 = eq(io.req.bits.cmd, UInt<4>("h09")) @[package.scala 14:47]
    node _T_3099 = eq(io.req.bits.cmd, UInt<4>("h0a")) @[package.scala 14:47]
    node _T_3100 = eq(io.req.bits.cmd, UInt<4>("h0b")) @[package.scala 14:47]
    node _T_3101 = or(_T_3097, _T_3098) @[package.scala 14:62]
    node _T_3102 = or(_T_3101, _T_3099) @[package.scala 14:62]
    node _T_3103 = or(_T_3102, _T_3100) @[package.scala 14:62]
    node _T_3109 = eq(io.req.bits.cmd, UInt<4>("h08")) @[package.scala 14:47]
    node _T_3110 = eq(io.req.bits.cmd, UInt<4>("h0c")) @[package.scala 14:47]
    node _T_3111 = eq(io.req.bits.cmd, UInt<4>("h0d")) @[package.scala 14:47]
    node _T_3112 = eq(io.req.bits.cmd, UInt<4>("h0e")) @[package.scala 14:47]
    node _T_3113 = eq(io.req.bits.cmd, UInt<4>("h0f")) @[package.scala 14:47]
    node _T_3114 = or(_T_3109, _T_3110) @[package.scala 14:62]
    node _T_3115 = or(_T_3114, _T_3111) @[package.scala 14:62]
    node _T_3116 = or(_T_3115, _T_3112) @[package.scala 14:62]
    node _T_3117 = or(_T_3116, _T_3113) @[package.scala 14:62]
    node _T_3118 = or(_T_3103, _T_3117) @[Consts.scala 91:44]
    node _T_3119 = or(_T_3092, _T_3118) @[Consts.scala 93:75]
    node _T_3120 = not(pr_array) @[TLB.scala 197:61]
    node _T_3121 = or(ae_array, _T_3120) @[TLB.scala 197:59]
    node ae_ld_array = mux(_T_3119, _T_3121, UInt<1>("h00")) @[TLB.scala 197:24]
    node _T_3124 = eq(io.req.bits.cmd, UInt<1>("h01")) @[Consts.scala 94:32]
    node _T_3126 = eq(io.req.bits.cmd, UInt<5>("h011")) @[Consts.scala 94:49]
    node _T_3127 = or(_T_3124, _T_3126) @[Consts.scala 94:42]
    node _T_3129 = eq(io.req.bits.cmd, UInt<3>("h07")) @[Consts.scala 94:66]
    node _T_3130 = or(_T_3127, _T_3129) @[Consts.scala 94:59]
    node _T_3135 = eq(io.req.bits.cmd, UInt<3>("h04")) @[package.scala 14:47]
    node _T_3136 = eq(io.req.bits.cmd, UInt<4>("h09")) @[package.scala 14:47]
    node _T_3137 = eq(io.req.bits.cmd, UInt<4>("h0a")) @[package.scala 14:47]
    node _T_3138 = eq(io.req.bits.cmd, UInt<4>("h0b")) @[package.scala 14:47]
    node _T_3139 = or(_T_3135, _T_3136) @[package.scala 14:62]
    node _T_3140 = or(_T_3139, _T_3137) @[package.scala 14:62]
    node _T_3141 = or(_T_3140, _T_3138) @[package.scala 14:62]
    node _T_3147 = eq(io.req.bits.cmd, UInt<4>("h08")) @[package.scala 14:47]
    node _T_3148 = eq(io.req.bits.cmd, UInt<4>("h0c")) @[package.scala 14:47]
    node _T_3149 = eq(io.req.bits.cmd, UInt<4>("h0d")) @[package.scala 14:47]
    node _T_3150 = eq(io.req.bits.cmd, UInt<4>("h0e")) @[package.scala 14:47]
    node _T_3151 = eq(io.req.bits.cmd, UInt<4>("h0f")) @[package.scala 14:47]
    node _T_3152 = or(_T_3147, _T_3148) @[package.scala 14:62]
    node _T_3153 = or(_T_3152, _T_3149) @[package.scala 14:62]
    node _T_3154 = or(_T_3153, _T_3150) @[package.scala 14:62]
    node _T_3155 = or(_T_3154, _T_3151) @[package.scala 14:62]
    node _T_3156 = or(_T_3141, _T_3155) @[Consts.scala 91:44]
    node _T_3157 = or(_T_3130, _T_3156) @[Consts.scala 94:76]
    node _T_3158 = not(pw_array) @[TLB.scala 199:46]
    node _T_3159 = or(ae_array, _T_3158) @[TLB.scala 199:44]
    node _T_3161 = mux(_T_3157, _T_3159, UInt<1>("h00")) @[TLB.scala 199:8]
    node _T_3167 = eq(io.req.bits.cmd, UInt<3>("h04")) @[package.scala 14:47]
    node _T_3168 = eq(io.req.bits.cmd, UInt<4>("h09")) @[package.scala 14:47]
    node _T_3169 = eq(io.req.bits.cmd, UInt<4>("h0a")) @[package.scala 14:47]
    node _T_3170 = eq(io.req.bits.cmd, UInt<4>("h0b")) @[package.scala 14:47]
    node _T_3171 = or(_T_3167, _T_3168) @[package.scala 14:62]
    node _T_3172 = or(_T_3171, _T_3169) @[package.scala 14:62]
    node _T_3173 = or(_T_3172, _T_3170) @[package.scala 14:62]
    node _T_3174 = and(UInt<1>("h01"), _T_3173) @[TLB.scala 200:28]
    node _T_3175 = not(pal_array) @[TLB.scala 200:62]
    node _T_3177 = mux(_T_3174, _T_3175, UInt<1>("h00")) @[TLB.scala 200:8]
    node _T_3178 = or(_T_3161, _T_3177) @[TLB.scala 199:62]
    node _T_3185 = eq(io.req.bits.cmd, UInt<4>("h08")) @[package.scala 14:47]
    node _T_3186 = eq(io.req.bits.cmd, UInt<4>("h0c")) @[package.scala 14:47]
    node _T_3187 = eq(io.req.bits.cmd, UInt<4>("h0d")) @[package.scala 14:47]
    node _T_3188 = eq(io.req.bits.cmd, UInt<4>("h0e")) @[package.scala 14:47]
    node _T_3189 = eq(io.req.bits.cmd, UInt<4>("h0f")) @[package.scala 14:47]
    node _T_3190 = or(_T_3185, _T_3186) @[package.scala 14:62]
    node _T_3191 = or(_T_3190, _T_3187) @[package.scala 14:62]
    node _T_3192 = or(_T_3191, _T_3188) @[package.scala 14:62]
    node _T_3193 = or(_T_3192, _T_3189) @[package.scala 14:62]
    node _T_3194 = and(UInt<1>("h01"), _T_3193) @[TLB.scala 201:28]
    node _T_3195 = not(paa_array) @[TLB.scala 201:65]
    node _T_3197 = mux(_T_3194, _T_3195, UInt<1>("h00")) @[TLB.scala 201:8]
    node ae_st_array = or(_T_3178, _T_3197) @[TLB.scala 200:79]
    node _T_3199 = eq(io.req.bits.cmd, UInt<1>("h00")) @[Consts.scala 93:31]
    node _T_3201 = eq(io.req.bits.cmd, UInt<3>("h06")) @[Consts.scala 93:48]
    node _T_3202 = or(_T_3199, _T_3201) @[Consts.scala 93:41]
    node _T_3204 = eq(io.req.bits.cmd, UInt<3>("h07")) @[Consts.scala 93:65]
    node _T_3205 = or(_T_3202, _T_3204) @[Consts.scala 93:58]
    node _T_3210 = eq(io.req.bits.cmd, UInt<3>("h04")) @[package.scala 14:47]
    node _T_3211 = eq(io.req.bits.cmd, UInt<4>("h09")) @[package.scala 14:47]
    node _T_3212 = eq(io.req.bits.cmd, UInt<4>("h0a")) @[package.scala 14:47]
    node _T_3213 = eq(io.req.bits.cmd, UInt<4>("h0b")) @[package.scala 14:47]
    node _T_3214 = or(_T_3210, _T_3211) @[package.scala 14:62]
    node _T_3215 = or(_T_3214, _T_3212) @[package.scala 14:62]
    node _T_3216 = or(_T_3215, _T_3213) @[package.scala 14:62]
    node _T_3222 = eq(io.req.bits.cmd, UInt<4>("h08")) @[package.scala 14:47]
    node _T_3223 = eq(io.req.bits.cmd, UInt<4>("h0c")) @[package.scala 14:47]
    node _T_3224 = eq(io.req.bits.cmd, UInt<4>("h0d")) @[package.scala 14:47]
    node _T_3225 = eq(io.req.bits.cmd, UInt<4>("h0e")) @[package.scala 14:47]
    node _T_3226 = eq(io.req.bits.cmd, UInt<4>("h0f")) @[package.scala 14:47]
    node _T_3227 = or(_T_3222, _T_3223) @[package.scala 14:62]
    node _T_3228 = or(_T_3227, _T_3224) @[package.scala 14:62]
    node _T_3229 = or(_T_3228, _T_3225) @[package.scala 14:62]
    node _T_3230 = or(_T_3229, _T_3226) @[package.scala 14:62]
    node _T_3231 = or(_T_3216, _T_3230) @[Consts.scala 91:44]
    node _T_3232 = or(_T_3205, _T_3231) @[Consts.scala 93:75]
    node _T_3233 = and(misaligned, _T_3232) @[TLB.scala 202:36]
    node _T_3234 = not(eff_array) @[TLB.scala 202:64]
    node ma_ld_array = mux(_T_3233, _T_3234, UInt<1>("h00")) @[TLB.scala 202:24]
    node _T_3237 = eq(io.req.bits.cmd, UInt<1>("h01")) @[Consts.scala 94:32]
    node _T_3239 = eq(io.req.bits.cmd, UInt<5>("h011")) @[Consts.scala 94:49]
    node _T_3240 = or(_T_3237, _T_3239) @[Consts.scala 94:42]
    node _T_3242 = eq(io.req.bits.cmd, UInt<3>("h07")) @[Consts.scala 94:66]
    node _T_3243 = or(_T_3240, _T_3242) @[Consts.scala 94:59]
    node _T_3248 = eq(io.req.bits.cmd, UInt<3>("h04")) @[package.scala 14:47]
    node _T_3249 = eq(io.req.bits.cmd, UInt<4>("h09")) @[package.scala 14:47]
    node _T_3250 = eq(io.req.bits.cmd, UInt<4>("h0a")) @[package.scala 14:47]
    node _T_3251 = eq(io.req.bits.cmd, UInt<4>("h0b")) @[package.scala 14:47]
    node _T_3252 = or(_T_3248, _T_3249) @[package.scala 14:62]
    node _T_3253 = or(_T_3252, _T_3250) @[package.scala 14:62]
    node _T_3254 = or(_T_3253, _T_3251) @[package.scala 14:62]
    node _T_3260 = eq(io.req.bits.cmd, UInt<4>("h08")) @[package.scala 14:47]
    node _T_3261 = eq(io.req.bits.cmd, UInt<4>("h0c")) @[package.scala 14:47]
    node _T_3262 = eq(io.req.bits.cmd, UInt<4>("h0d")) @[package.scala 14:47]
    node _T_3263 = eq(io.req.bits.cmd, UInt<4>("h0e")) @[package.scala 14:47]
    node _T_3264 = eq(io.req.bits.cmd, UInt<4>("h0f")) @[package.scala 14:47]
    node _T_3265 = or(_T_3260, _T_3261) @[package.scala 14:62]
    node _T_3266 = or(_T_3265, _T_3262) @[package.scala 14:62]
    node _T_3267 = or(_T_3266, _T_3263) @[package.scala 14:62]
    node _T_3268 = or(_T_3267, _T_3264) @[package.scala 14:62]
    node _T_3269 = or(_T_3254, _T_3268) @[Consts.scala 91:44]
    node _T_3270 = or(_T_3243, _T_3269) @[Consts.scala 94:76]
    node _T_3271 = and(misaligned, _T_3270) @[TLB.scala 203:36]
    node _T_3272 = not(eff_array) @[TLB.scala 203:65]
    node ma_st_array = mux(_T_3271, _T_3272, UInt<1>("h00")) @[TLB.scala 203:24]
    node _T_3275 = eq(io.req.bits.cmd, UInt<1>("h00")) @[Consts.scala 93:31]
    node _T_3277 = eq(io.req.bits.cmd, UInt<3>("h06")) @[Consts.scala 93:48]
    node _T_3278 = or(_T_3275, _T_3277) @[Consts.scala 93:41]
    node _T_3280 = eq(io.req.bits.cmd, UInt<3>("h07")) @[Consts.scala 93:65]
    node _T_3281 = or(_T_3278, _T_3280) @[Consts.scala 93:58]
    node _T_3286 = eq(io.req.bits.cmd, UInt<3>("h04")) @[package.scala 14:47]
    node _T_3287 = eq(io.req.bits.cmd, UInt<4>("h09")) @[package.scala 14:47]
    node _T_3288 = eq(io.req.bits.cmd, UInt<4>("h0a")) @[package.scala 14:47]
    node _T_3289 = eq(io.req.bits.cmd, UInt<4>("h0b")) @[package.scala 14:47]
    node _T_3290 = or(_T_3286, _T_3287) @[package.scala 14:62]
    node _T_3291 = or(_T_3290, _T_3288) @[package.scala 14:62]
    node _T_3292 = or(_T_3291, _T_3289) @[package.scala 14:62]
    node _T_3298 = eq(io.req.bits.cmd, UInt<4>("h08")) @[package.scala 14:47]
    node _T_3299 = eq(io.req.bits.cmd, UInt<4>("h0c")) @[package.scala 14:47]
    node _T_3300 = eq(io.req.bits.cmd, UInt<4>("h0d")) @[package.scala 14:47]
    node _T_3301 = eq(io.req.bits.cmd, UInt<4>("h0e")) @[package.scala 14:47]
    node _T_3302 = eq(io.req.bits.cmd, UInt<4>("h0f")) @[package.scala 14:47]
    node _T_3303 = or(_T_3298, _T_3299) @[package.scala 14:62]
    node _T_3304 = or(_T_3303, _T_3300) @[package.scala 14:62]
    node _T_3305 = or(_T_3304, _T_3301) @[package.scala 14:62]
    node _T_3306 = or(_T_3305, _T_3302) @[package.scala 14:62]
    node _T_3307 = or(_T_3292, _T_3306) @[Consts.scala 91:44]
    node _T_3308 = or(_T_3281, _T_3307) @[Consts.scala 93:75]
    node _T_3309 = or(r_array, ptw_ae_array) @[TLB.scala 204:60]
    node _T_3310 = not(_T_3309) @[TLB.scala 204:50]
    node pf_ld_array = mux(_T_3308, _T_3310, UInt<1>("h00")) @[TLB.scala 204:24]
    node _T_3313 = eq(io.req.bits.cmd, UInt<1>("h01")) @[Consts.scala 94:32]
    node _T_3315 = eq(io.req.bits.cmd, UInt<5>("h011")) @[Consts.scala 94:49]
    node _T_3316 = or(_T_3313, _T_3315) @[Consts.scala 94:42]
    node _T_3318 = eq(io.req.bits.cmd, UInt<3>("h07")) @[Consts.scala 94:66]
    node _T_3319 = or(_T_3316, _T_3318) @[Consts.scala 94:59]
    node _T_3324 = eq(io.req.bits.cmd, UInt<3>("h04")) @[package.scala 14:47]
    node _T_3325 = eq(io.req.bits.cmd, UInt<4>("h09")) @[package.scala 14:47]
    node _T_3326 = eq(io.req.bits.cmd, UInt<4>("h0a")) @[package.scala 14:47]
    node _T_3327 = eq(io.req.bits.cmd, UInt<4>("h0b")) @[package.scala 14:47]
    node _T_3328 = or(_T_3324, _T_3325) @[package.scala 14:62]
    node _T_3329 = or(_T_3328, _T_3326) @[package.scala 14:62]
    node _T_3330 = or(_T_3329, _T_3327) @[package.scala 14:62]
    node _T_3336 = eq(io.req.bits.cmd, UInt<4>("h08")) @[package.scala 14:47]
    node _T_3337 = eq(io.req.bits.cmd, UInt<4>("h0c")) @[package.scala 14:47]
    node _T_3338 = eq(io.req.bits.cmd, UInt<4>("h0d")) @[package.scala 14:47]
    node _T_3339 = eq(io.req.bits.cmd, UInt<4>("h0e")) @[package.scala 14:47]
    node _T_3340 = eq(io.req.bits.cmd, UInt<4>("h0f")) @[package.scala 14:47]
    node _T_3341 = or(_T_3336, _T_3337) @[package.scala 14:62]
    node _T_3342 = or(_T_3341, _T_3338) @[package.scala 14:62]
    node _T_3343 = or(_T_3342, _T_3339) @[package.scala 14:62]
    node _T_3344 = or(_T_3343, _T_3340) @[package.scala 14:62]
    node _T_3345 = or(_T_3330, _T_3344) @[Consts.scala 91:44]
    node _T_3346 = or(_T_3319, _T_3345) @[Consts.scala 94:76]
    node _T_3347 = or(w_array, ptw_ae_array) @[TLB.scala 205:61]
    node _T_3348 = not(_T_3347) @[TLB.scala 205:51]
    node pf_st_array = mux(_T_3346, _T_3348, UInt<1>("h00")) @[TLB.scala 205:24]
    node _T_3350 = or(x_array, ptw_ae_array) @[TLB.scala 206:33]
    node pf_inst_array = not(_T_3350) @[TLB.scala 206:23]
    node _T_3351 = bits(hits, 32, 0) @[TLB.scala 208:21]
    node tlb_hit = neq(_T_3351, UInt<1>("h00")) @[TLB.scala 208:41]
    node _T_3354 = eq(bad_va, UInt<1>("h00")) @[TLB.scala 209:32]
    node _T_3355 = and(vm_enabled, _T_3354) @[TLB.scala 209:29]
    node _T_3357 = eq(tlb_hit, UInt<1>("h00")) @[TLB.scala 209:43]
    node _T_3358 = and(_T_3355, _T_3357) @[TLB.scala 209:40]
    node _T_3360 = eq(io.req.bits.sfence.valid, UInt<1>("h00")) @[TLB.scala 209:55]
    node tlb_miss = and(_T_3358, _T_3360) @[TLB.scala 209:52]
    node _T_3362 = eq(tlb_miss, UInt<1>("h00")) @[TLB.scala 210:25]
    node _T_3363 = and(io.req.valid, _T_3362) @[TLB.scala 210:22]
    node _T_3364 = bits(hits, 32, 32) @[TLB.scala 210:43]
    node _T_3366 = eq(_T_3364, UInt<1>("h00")) @[TLB.scala 210:38]
    node _T_3367 = and(_T_3363, _T_3366) @[TLB.scala 210:35]
    when _T_3367 : @[TLB.scala 210:59]
      node _T_3368 = bits(hits, 31, 0) @[TLB.scala 211:30]
      node _T_3369 = bits(_T_3368, 31, 16) @[OneHot.scala 26:18]
      node _T_3370 = bits(_T_3368, 15, 0) @[OneHot.scala 27:18]
      node _T_3372 = neq(_T_3369, UInt<1>("h00")) @[OneHot.scala 28:14]
      node _T_3373 = or(_T_3369, _T_3370) @[OneHot.scala 28:28]
      node _T_3374 = bits(_T_3373, 15, 8) @[OneHot.scala 26:18]
      node _T_3375 = bits(_T_3373, 7, 0) @[OneHot.scala 27:18]
      node _T_3377 = neq(_T_3374, UInt<1>("h00")) @[OneHot.scala 28:14]
      node _T_3378 = or(_T_3374, _T_3375) @[OneHot.scala 28:28]
      node _T_3379 = bits(_T_3378, 7, 4) @[OneHot.scala 26:18]
      node _T_3380 = bits(_T_3378, 3, 0) @[OneHot.scala 27:18]
      node _T_3382 = neq(_T_3379, UInt<1>("h00")) @[OneHot.scala 28:14]
      node _T_3383 = or(_T_3379, _T_3380) @[OneHot.scala 28:28]
      node _T_3384 = bits(_T_3383, 3, 2) @[OneHot.scala 26:18]
      node _T_3385 = bits(_T_3383, 1, 0) @[OneHot.scala 27:18]
      node _T_3387 = neq(_T_3384, UInt<1>("h00")) @[OneHot.scala 28:14]
      node _T_3388 = or(_T_3384, _T_3385) @[OneHot.scala 28:28]
      node _T_3389 = bits(_T_3388, 1, 1) @[CircuitMath.scala 30:8]
      node _T_3390 = cat(_T_3387, _T_3389) @[Cat.scala 30:58]
      node _T_3391 = cat(_T_3382, _T_3390) @[Cat.scala 30:58]
      node _T_3392 = cat(_T_3377, _T_3391) @[Cat.scala 30:58]
      node _T_3393 = cat(_T_3372, _T_3392) @[Cat.scala 30:58]
      node _T_3394 = shl(_T_2351, 1) @[Replacement.scala 46:28]
      node _T_3396 = bits(_T_3393, 4, 4) @[Replacement.scala 49:20]
      node _T_3398 = eq(_T_3396, UInt<1>("h00")) @[Replacement.scala 50:43]
      node _T_3400 = dshl(UInt<1>("h01"), UInt<1>("h01")) @[Replacement.scala 50:37]
      node _T_3401 = or(_T_3394, _T_3400) @[Replacement.scala 50:37]
      node _T_3402 = not(_T_3394) @[Replacement.scala 50:37]
      node _T_3403 = or(_T_3402, _T_3400) @[Replacement.scala 50:37]
      node _T_3404 = not(_T_3403) @[Replacement.scala 50:37]
      node _T_3405 = mux(_T_3398, _T_3401, _T_3404) @[Replacement.scala 50:37]
      node _T_3406 = cat(UInt<1>("h01"), _T_3396) @[Cat.scala 30:58]
      node _T_3407 = bits(_T_3393, 3, 3) @[Replacement.scala 49:20]
      node _T_3409 = eq(_T_3407, UInt<1>("h00")) @[Replacement.scala 50:43]
      node _T_3411 = dshl(UInt<1>("h01"), _T_3406) @[Replacement.scala 50:37]
      node _T_3412 = or(_T_3405, _T_3411) @[Replacement.scala 50:37]
      node _T_3413 = not(_T_3405) @[Replacement.scala 50:37]
      node _T_3414 = or(_T_3413, _T_3411) @[Replacement.scala 50:37]
      node _T_3415 = not(_T_3414) @[Replacement.scala 50:37]
      node _T_3416 = mux(_T_3409, _T_3412, _T_3415) @[Replacement.scala 50:37]
      node _T_3417 = cat(_T_3406, _T_3407) @[Cat.scala 30:58]
      node _T_3418 = bits(_T_3393, 2, 2) @[Replacement.scala 49:20]
      node _T_3420 = eq(_T_3418, UInt<1>("h00")) @[Replacement.scala 50:43]
      node _T_3422 = dshl(UInt<1>("h01"), _T_3417) @[Replacement.scala 50:37]
      node _T_3423 = or(_T_3416, _T_3422) @[Replacement.scala 50:37]
      node _T_3424 = not(_T_3416) @[Replacement.scala 50:37]
      node _T_3425 = or(_T_3424, _T_3422) @[Replacement.scala 50:37]
      node _T_3426 = not(_T_3425) @[Replacement.scala 50:37]
      node _T_3427 = mux(_T_3420, _T_3423, _T_3426) @[Replacement.scala 50:37]
      node _T_3428 = cat(_T_3417, _T_3418) @[Cat.scala 30:58]
      node _T_3429 = bits(_T_3393, 1, 1) @[Replacement.scala 49:20]
      node _T_3431 = eq(_T_3429, UInt<1>("h00")) @[Replacement.scala 50:43]
      node _T_3433 = dshl(UInt<1>("h01"), _T_3428) @[Replacement.scala 50:37]
      node _T_3434 = or(_T_3427, _T_3433) @[Replacement.scala 50:37]
      node _T_3435 = not(_T_3427) @[Replacement.scala 50:37]
      node _T_3436 = or(_T_3435, _T_3433) @[Replacement.scala 50:37]
      node _T_3437 = not(_T_3436) @[Replacement.scala 50:37]
      node _T_3438 = mux(_T_3431, _T_3434, _T_3437) @[Replacement.scala 50:37]
      node _T_3439 = cat(_T_3428, _T_3429) @[Cat.scala 30:58]
      node _T_3440 = bits(_T_3393, 0, 0) @[Replacement.scala 49:20]
      node _T_3442 = eq(_T_3440, UInt<1>("h00")) @[Replacement.scala 50:43]
      node _T_3444 = dshl(UInt<1>("h01"), _T_3439) @[Replacement.scala 50:37]
      node _T_3445 = or(_T_3438, _T_3444) @[Replacement.scala 50:37]
      node _T_3446 = not(_T_3438) @[Replacement.scala 50:37]
      node _T_3447 = or(_T_3446, _T_3444) @[Replacement.scala 50:37]
      node _T_3448 = not(_T_3447) @[Replacement.scala 50:37]
      node _T_3449 = mux(_T_3442, _T_3445, _T_3448) @[Replacement.scala 50:37]
      node _T_3450 = cat(_T_3439, _T_3440) @[Cat.scala 30:58]
      node _T_3451 = bits(_T_3449, 31, 1) @[Replacement.scala 53:15]
      _T_2351 <= _T_3451 @[Replacement.scala 43:15]
      skip @[TLB.scala 210:59]
    node _T_3452 = bits(hits, 32, 0) @[TLB.scala 219:42]
    node _T_3453 = bits(_T_3452, 15, 0) @[Misc.scala 231:37]
    node _T_3454 = bits(_T_3453, 7, 0) @[Misc.scala 231:37]
    node _T_3455 = bits(_T_3454, 3, 0) @[Misc.scala 231:37]
    node _T_3456 = bits(_T_3455, 1, 0) @[Misc.scala 231:37]
    node _T_3457 = bits(_T_3456, 0, 0) @[Misc.scala 231:37]
    node _T_3458 = bits(_T_3457, 0, 0) @[Misc.scala 228:18]
    node _T_3460 = bits(_T_3456, 1, 1) @[Misc.scala 232:39]
    node _T_3461 = bits(_T_3460, 0, 0) @[Misc.scala 228:18]
    node _T_3463 = or(_T_3458, _T_3461) @[Misc.scala 233:16]
    node _T_3464 = or(UInt<1>("h00"), UInt<1>("h00")) @[Misc.scala 233:37]
    node _T_3465 = and(_T_3458, _T_3461) @[Misc.scala 233:61]
    node _T_3466 = or(_T_3464, _T_3465) @[Misc.scala 233:49]
    node _T_3467 = bits(_T_3455, 3, 2) @[Misc.scala 232:39]
    node _T_3468 = bits(_T_3467, 0, 0) @[Misc.scala 231:37]
    node _T_3469 = bits(_T_3468, 0, 0) @[Misc.scala 228:18]
    node _T_3471 = bits(_T_3467, 1, 1) @[Misc.scala 232:39]
    node _T_3472 = bits(_T_3471, 0, 0) @[Misc.scala 228:18]
    node _T_3474 = or(_T_3469, _T_3472) @[Misc.scala 233:16]
    node _T_3475 = or(UInt<1>("h00"), UInt<1>("h00")) @[Misc.scala 233:37]
    node _T_3476 = and(_T_3469, _T_3472) @[Misc.scala 233:61]
    node _T_3477 = or(_T_3475, _T_3476) @[Misc.scala 233:49]
    node _T_3478 = or(_T_3463, _T_3474) @[Misc.scala 233:16]
    node _T_3479 = or(_T_3466, _T_3477) @[Misc.scala 233:37]
    node _T_3480 = and(_T_3463, _T_3474) @[Misc.scala 233:61]
    node _T_3481 = or(_T_3479, _T_3480) @[Misc.scala 233:49]
    node _T_3482 = bits(_T_3454, 7, 4) @[Misc.scala 232:39]
    node _T_3483 = bits(_T_3482, 1, 0) @[Misc.scala 231:37]
    node _T_3484 = bits(_T_3483, 0, 0) @[Misc.scala 231:37]
    node _T_3485 = bits(_T_3484, 0, 0) @[Misc.scala 228:18]
    node _T_3487 = bits(_T_3483, 1, 1) @[Misc.scala 232:39]
    node _T_3488 = bits(_T_3487, 0, 0) @[Misc.scala 228:18]
    node _T_3490 = or(_T_3485, _T_3488) @[Misc.scala 233:16]
    node _T_3491 = or(UInt<1>("h00"), UInt<1>("h00")) @[Misc.scala 233:37]
    node _T_3492 = and(_T_3485, _T_3488) @[Misc.scala 233:61]
    node _T_3493 = or(_T_3491, _T_3492) @[Misc.scala 233:49]
    node _T_3494 = bits(_T_3482, 3, 2) @[Misc.scala 232:39]
    node _T_3495 = bits(_T_3494, 0, 0) @[Misc.scala 231:37]
    node _T_3496 = bits(_T_3495, 0, 0) @[Misc.scala 228:18]
    node _T_3498 = bits(_T_3494, 1, 1) @[Misc.scala 232:39]
    node _T_3499 = bits(_T_3498, 0, 0) @[Misc.scala 228:18]
    node _T_3501 = or(_T_3496, _T_3499) @[Misc.scala 233:16]
    node _T_3502 = or(UInt<1>("h00"), UInt<1>("h00")) @[Misc.scala 233:37]
    node _T_3503 = and(_T_3496, _T_3499) @[Misc.scala 233:61]
    node _T_3504 = or(_T_3502, _T_3503) @[Misc.scala 233:49]
    node _T_3505 = or(_T_3490, _T_3501) @[Misc.scala 233:16]
    node _T_3506 = or(_T_3493, _T_3504) @[Misc.scala 233:37]
    node _T_3507 = and(_T_3490, _T_3501) @[Misc.scala 233:61]
    node _T_3508 = or(_T_3506, _T_3507) @[Misc.scala 233:49]
    node _T_3509 = or(_T_3478, _T_3505) @[Misc.scala 233:16]
    node _T_3510 = or(_T_3481, _T_3508) @[Misc.scala 233:37]
    node _T_3511 = and(_T_3478, _T_3505) @[Misc.scala 233:61]
    node _T_3512 = or(_T_3510, _T_3511) @[Misc.scala 233:49]
    node _T_3513 = bits(_T_3453, 15, 8) @[Misc.scala 232:39]
    node _T_3514 = bits(_T_3513, 3, 0) @[Misc.scala 231:37]
    node _T_3515 = bits(_T_3514, 1, 0) @[Misc.scala 231:37]
    node _T_3516 = bits(_T_3515, 0, 0) @[Misc.scala 231:37]
    node _T_3517 = bits(_T_3516, 0, 0) @[Misc.scala 228:18]
    node _T_3519 = bits(_T_3515, 1, 1) @[Misc.scala 232:39]
    node _T_3520 = bits(_T_3519, 0, 0) @[Misc.scala 228:18]
    node _T_3522 = or(_T_3517, _T_3520) @[Misc.scala 233:16]
    node _T_3523 = or(UInt<1>("h00"), UInt<1>("h00")) @[Misc.scala 233:37]
    node _T_3524 = and(_T_3517, _T_3520) @[Misc.scala 233:61]
    node _T_3525 = or(_T_3523, _T_3524) @[Misc.scala 233:49]
    node _T_3526 = bits(_T_3514, 3, 2) @[Misc.scala 232:39]
    node _T_3527 = bits(_T_3526, 0, 0) @[Misc.scala 231:37]
    node _T_3528 = bits(_T_3527, 0, 0) @[Misc.scala 228:18]
    node _T_3530 = bits(_T_3526, 1, 1) @[Misc.scala 232:39]
    node _T_3531 = bits(_T_3530, 0, 0) @[Misc.scala 228:18]
    node _T_3533 = or(_T_3528, _T_3531) @[Misc.scala 233:16]
    node _T_3534 = or(UInt<1>("h00"), UInt<1>("h00")) @[Misc.scala 233:37]
    node _T_3535 = and(_T_3528, _T_3531) @[Misc.scala 233:61]
    node _T_3536 = or(_T_3534, _T_3535) @[Misc.scala 233:49]
    node _T_3537 = or(_T_3522, _T_3533) @[Misc.scala 233:16]
    node _T_3538 = or(_T_3525, _T_3536) @[Misc.scala 233:37]
    node _T_3539 = and(_T_3522, _T_3533) @[Misc.scala 233:61]
    node _T_3540 = or(_T_3538, _T_3539) @[Misc.scala 233:49]
    node _T_3541 = bits(_T_3513, 7, 4) @[Misc.scala 232:39]
    node _T_3542 = bits(_T_3541, 1, 0) @[Misc.scala 231:37]
    node _T_3543 = bits(_T_3542, 0, 0) @[Misc.scala 231:37]
    node _T_3544 = bits(_T_3543, 0, 0) @[Misc.scala 228:18]
    node _T_3546 = bits(_T_3542, 1, 1) @[Misc.scala 232:39]
    node _T_3547 = bits(_T_3546, 0, 0) @[Misc.scala 228:18]
    node _T_3549 = or(_T_3544, _T_3547) @[Misc.scala 233:16]
    node _T_3550 = or(UInt<1>("h00"), UInt<1>("h00")) @[Misc.scala 233:37]
    node _T_3551 = and(_T_3544, _T_3547) @[Misc.scala 233:61]
    node _T_3552 = or(_T_3550, _T_3551) @[Misc.scala 233:49]
    node _T_3553 = bits(_T_3541, 3, 2) @[Misc.scala 232:39]
    node _T_3554 = bits(_T_3553, 0, 0) @[Misc.scala 231:37]
    node _T_3555 = bits(_T_3554, 0, 0) @[Misc.scala 228:18]
    node _T_3557 = bits(_T_3553, 1, 1) @[Misc.scala 232:39]
    node _T_3558 = bits(_T_3557, 0, 0) @[Misc.scala 228:18]
    node _T_3560 = or(_T_3555, _T_3558) @[Misc.scala 233:16]
    node _T_3561 = or(UInt<1>("h00"), UInt<1>("h00")) @[Misc.scala 233:37]
    node _T_3562 = and(_T_3555, _T_3558) @[Misc.scala 233:61]
    node _T_3563 = or(_T_3561, _T_3562) @[Misc.scala 233:49]
    node _T_3564 = or(_T_3549, _T_3560) @[Misc.scala 233:16]
    node _T_3565 = or(_T_3552, _T_3563) @[Misc.scala 233:37]
    node _T_3566 = and(_T_3549, _T_3560) @[Misc.scala 233:61]
    node _T_3567 = or(_T_3565, _T_3566) @[Misc.scala 233:49]
    node _T_3568 = or(_T_3537, _T_3564) @[Misc.scala 233:16]
    node _T_3569 = or(_T_3540, _T_3567) @[Misc.scala 233:37]
    node _T_3570 = and(_T_3537, _T_3564) @[Misc.scala 233:61]
    node _T_3571 = or(_T_3569, _T_3570) @[Misc.scala 233:49]
    node _T_3572 = or(_T_3509, _T_3568) @[Misc.scala 233:16]
    node _T_3573 = or(_T_3512, _T_3571) @[Misc.scala 233:37]
    node _T_3574 = and(_T_3509, _T_3568) @[Misc.scala 233:61]
    node _T_3575 = or(_T_3573, _T_3574) @[Misc.scala 233:49]
    node _T_3576 = bits(_T_3452, 32, 16) @[Misc.scala 232:39]
    node _T_3577 = bits(_T_3576, 7, 0) @[Misc.scala 231:37]
    node _T_3578 = bits(_T_3577, 3, 0) @[Misc.scala 231:37]
    node _T_3579 = bits(_T_3578, 1, 0) @[Misc.scala 231:37]
    node _T_3580 = bits(_T_3579, 0, 0) @[Misc.scala 231:37]
    node _T_3581 = bits(_T_3580, 0, 0) @[Misc.scala 228:18]
    node _T_3583 = bits(_T_3579, 1, 1) @[Misc.scala 232:39]
    node _T_3584 = bits(_T_3583, 0, 0) @[Misc.scala 228:18]
    node _T_3586 = or(_T_3581, _T_3584) @[Misc.scala 233:16]
    node _T_3587 = or(UInt<1>("h00"), UInt<1>("h00")) @[Misc.scala 233:37]
    node _T_3588 = and(_T_3581, _T_3584) @[Misc.scala 233:61]
    node _T_3589 = or(_T_3587, _T_3588) @[Misc.scala 233:49]
    node _T_3590 = bits(_T_3578, 3, 2) @[Misc.scala 232:39]
    node _T_3591 = bits(_T_3590, 0, 0) @[Misc.scala 231:37]
    node _T_3592 = bits(_T_3591, 0, 0) @[Misc.scala 228:18]
    node _T_3594 = bits(_T_3590, 1, 1) @[Misc.scala 232:39]
    node _T_3595 = bits(_T_3594, 0, 0) @[Misc.scala 228:18]
    node _T_3597 = or(_T_3592, _T_3595) @[Misc.scala 233:16]
    node _T_3598 = or(UInt<1>("h00"), UInt<1>("h00")) @[Misc.scala 233:37]
    node _T_3599 = and(_T_3592, _T_3595) @[Misc.scala 233:61]
    node _T_3600 = or(_T_3598, _T_3599) @[Misc.scala 233:49]
    node _T_3601 = or(_T_3586, _T_3597) @[Misc.scala 233:16]
    node _T_3602 = or(_T_3589, _T_3600) @[Misc.scala 233:37]
    node _T_3603 = and(_T_3586, _T_3597) @[Misc.scala 233:61]
    node _T_3604 = or(_T_3602, _T_3603) @[Misc.scala 233:49]
    node _T_3605 = bits(_T_3577, 7, 4) @[Misc.scala 232:39]
    node _T_3606 = bits(_T_3605, 1, 0) @[Misc.scala 231:37]
    node _T_3607 = bits(_T_3606, 0, 0) @[Misc.scala 231:37]
    node _T_3608 = bits(_T_3607, 0, 0) @[Misc.scala 228:18]
    node _T_3610 = bits(_T_3606, 1, 1) @[Misc.scala 232:39]
    node _T_3611 = bits(_T_3610, 0, 0) @[Misc.scala 228:18]
    node _T_3613 = or(_T_3608, _T_3611) @[Misc.scala 233:16]
    node _T_3614 = or(UInt<1>("h00"), UInt<1>("h00")) @[Misc.scala 233:37]
    node _T_3615 = and(_T_3608, _T_3611) @[Misc.scala 233:61]
    node _T_3616 = or(_T_3614, _T_3615) @[Misc.scala 233:49]
    node _T_3617 = bits(_T_3605, 3, 2) @[Misc.scala 232:39]
    node _T_3618 = bits(_T_3617, 0, 0) @[Misc.scala 231:37]
    node _T_3619 = bits(_T_3618, 0, 0) @[Misc.scala 228:18]
    node _T_3621 = bits(_T_3617, 1, 1) @[Misc.scala 232:39]
    node _T_3622 = bits(_T_3621, 0, 0) @[Misc.scala 228:18]
    node _T_3624 = or(_T_3619, _T_3622) @[Misc.scala 233:16]
    node _T_3625 = or(UInt<1>("h00"), UInt<1>("h00")) @[Misc.scala 233:37]
    node _T_3626 = and(_T_3619, _T_3622) @[Misc.scala 233:61]
    node _T_3627 = or(_T_3625, _T_3626) @[Misc.scala 233:49]
    node _T_3628 = or(_T_3613, _T_3624) @[Misc.scala 233:16]
    node _T_3629 = or(_T_3616, _T_3627) @[Misc.scala 233:37]
    node _T_3630 = and(_T_3613, _T_3624) @[Misc.scala 233:61]
    node _T_3631 = or(_T_3629, _T_3630) @[Misc.scala 233:49]
    node _T_3632 = or(_T_3601, _T_3628) @[Misc.scala 233:16]
    node _T_3633 = or(_T_3604, _T_3631) @[Misc.scala 233:37]
    node _T_3634 = and(_T_3601, _T_3628) @[Misc.scala 233:61]
    node _T_3635 = or(_T_3633, _T_3634) @[Misc.scala 233:49]
    node _T_3636 = bits(_T_3576, 16, 8) @[Misc.scala 232:39]
    node _T_3637 = bits(_T_3636, 3, 0) @[Misc.scala 231:37]
    node _T_3638 = bits(_T_3637, 1, 0) @[Misc.scala 231:37]
    node _T_3639 = bits(_T_3638, 0, 0) @[Misc.scala 231:37]
    node _T_3640 = bits(_T_3639, 0, 0) @[Misc.scala 228:18]
    node _T_3642 = bits(_T_3638, 1, 1) @[Misc.scala 232:39]
    node _T_3643 = bits(_T_3642, 0, 0) @[Misc.scala 228:18]
    node _T_3645 = or(_T_3640, _T_3643) @[Misc.scala 233:16]
    node _T_3646 = or(UInt<1>("h00"), UInt<1>("h00")) @[Misc.scala 233:37]
    node _T_3647 = and(_T_3640, _T_3643) @[Misc.scala 233:61]
    node _T_3648 = or(_T_3646, _T_3647) @[Misc.scala 233:49]
    node _T_3649 = bits(_T_3637, 3, 2) @[Misc.scala 232:39]
    node _T_3650 = bits(_T_3649, 0, 0) @[Misc.scala 231:37]
    node _T_3651 = bits(_T_3650, 0, 0) @[Misc.scala 228:18]
    node _T_3653 = bits(_T_3649, 1, 1) @[Misc.scala 232:39]
    node _T_3654 = bits(_T_3653, 0, 0) @[Misc.scala 228:18]
    node _T_3656 = or(_T_3651, _T_3654) @[Misc.scala 233:16]
    node _T_3657 = or(UInt<1>("h00"), UInt<1>("h00")) @[Misc.scala 233:37]
    node _T_3658 = and(_T_3651, _T_3654) @[Misc.scala 233:61]
    node _T_3659 = or(_T_3657, _T_3658) @[Misc.scala 233:49]
    node _T_3660 = or(_T_3645, _T_3656) @[Misc.scala 233:16]
    node _T_3661 = or(_T_3648, _T_3659) @[Misc.scala 233:37]
    node _T_3662 = and(_T_3645, _T_3656) @[Misc.scala 233:61]
    node _T_3663 = or(_T_3661, _T_3662) @[Misc.scala 233:49]
    node _T_3664 = bits(_T_3636, 8, 4) @[Misc.scala 232:39]
    node _T_3665 = bits(_T_3664, 1, 0) @[Misc.scala 231:37]
    node _T_3666 = bits(_T_3665, 0, 0) @[Misc.scala 231:37]
    node _T_3667 = bits(_T_3666, 0, 0) @[Misc.scala 228:18]
    node _T_3669 = bits(_T_3665, 1, 1) @[Misc.scala 232:39]
    node _T_3670 = bits(_T_3669, 0, 0) @[Misc.scala 228:18]
    node _T_3672 = or(_T_3667, _T_3670) @[Misc.scala 233:16]
    node _T_3673 = or(UInt<1>("h00"), UInt<1>("h00")) @[Misc.scala 233:37]
    node _T_3674 = and(_T_3667, _T_3670) @[Misc.scala 233:61]
    node _T_3675 = or(_T_3673, _T_3674) @[Misc.scala 233:49]
    node _T_3676 = bits(_T_3664, 4, 2) @[Misc.scala 232:39]
    node _T_3677 = bits(_T_3676, 0, 0) @[Misc.scala 231:37]
    node _T_3678 = bits(_T_3677, 0, 0) @[Misc.scala 228:18]
    node _T_3680 = bits(_T_3676, 2, 1) @[Misc.scala 232:39]
    node _T_3681 = bits(_T_3680, 0, 0) @[Misc.scala 231:37]
    node _T_3682 = bits(_T_3681, 0, 0) @[Misc.scala 228:18]
    node _T_3684 = bits(_T_3680, 1, 1) @[Misc.scala 232:39]
    node _T_3685 = bits(_T_3684, 0, 0) @[Misc.scala 228:18]
    node _T_3687 = or(_T_3682, _T_3685) @[Misc.scala 233:16]
    node _T_3688 = or(UInt<1>("h00"), UInt<1>("h00")) @[Misc.scala 233:37]
    node _T_3689 = and(_T_3682, _T_3685) @[Misc.scala 233:61]
    node _T_3690 = or(_T_3688, _T_3689) @[Misc.scala 233:49]
    node _T_3691 = or(_T_3678, _T_3687) @[Misc.scala 233:16]
    node _T_3692 = or(UInt<1>("h00"), _T_3690) @[Misc.scala 233:37]
    node _T_3693 = and(_T_3678, _T_3687) @[Misc.scala 233:61]
    node _T_3694 = or(_T_3692, _T_3693) @[Misc.scala 233:49]
    node _T_3695 = or(_T_3672, _T_3691) @[Misc.scala 233:16]
    node _T_3696 = or(_T_3675, _T_3694) @[Misc.scala 233:37]
    node _T_3697 = and(_T_3672, _T_3691) @[Misc.scala 233:61]
    node _T_3698 = or(_T_3696, _T_3697) @[Misc.scala 233:49]
    node _T_3699 = or(_T_3660, _T_3695) @[Misc.scala 233:16]
    node _T_3700 = or(_T_3663, _T_3698) @[Misc.scala 233:37]
    node _T_3701 = and(_T_3660, _T_3695) @[Misc.scala 233:61]
    node _T_3702 = or(_T_3700, _T_3701) @[Misc.scala 233:49]
    node _T_3703 = or(_T_3632, _T_3699) @[Misc.scala 233:16]
    node _T_3704 = or(_T_3635, _T_3702) @[Misc.scala 233:37]
    node _T_3705 = and(_T_3632, _T_3699) @[Misc.scala 233:61]
    node _T_3706 = or(_T_3704, _T_3705) @[Misc.scala 233:49]
    node _T_3707 = or(_T_3572, _T_3703) @[Misc.scala 233:16]
    node _T_3708 = or(_T_3575, _T_3706) @[Misc.scala 233:37]
    node _T_3709 = and(_T_3572, _T_3703) @[Misc.scala 233:61]
    node multipleHits = or(_T_3708, _T_3709) @[Misc.scala 233:49]
    node _T_3710 = eq(state, UInt<2>("h00")) @[TLB.scala 221:25]
    io.req.ready <= _T_3710 @[TLB.scala 221:16]
    node _T_3712 = eq(io.req.bits.cmd, UInt<1>("h00")) @[Consts.scala 93:31]
    node _T_3714 = eq(io.req.bits.cmd, UInt<3>("h06")) @[Consts.scala 93:48]
    node _T_3715 = or(_T_3712, _T_3714) @[Consts.scala 93:41]
    node _T_3717 = eq(io.req.bits.cmd, UInt<3>("h07")) @[Consts.scala 93:65]
    node _T_3718 = or(_T_3715, _T_3717) @[Consts.scala 93:58]
    node _T_3723 = eq(io.req.bits.cmd, UInt<3>("h04")) @[package.scala 14:47]
    node _T_3724 = eq(io.req.bits.cmd, UInt<4>("h09")) @[package.scala 14:47]
    node _T_3725 = eq(io.req.bits.cmd, UInt<4>("h0a")) @[package.scala 14:47]
    node _T_3726 = eq(io.req.bits.cmd, UInt<4>("h0b")) @[package.scala 14:47]
    node _T_3727 = or(_T_3723, _T_3724) @[package.scala 14:62]
    node _T_3728 = or(_T_3727, _T_3725) @[package.scala 14:62]
    node _T_3729 = or(_T_3728, _T_3726) @[package.scala 14:62]
    node _T_3735 = eq(io.req.bits.cmd, UInt<4>("h08")) @[package.scala 14:47]
    node _T_3736 = eq(io.req.bits.cmd, UInt<4>("h0c")) @[package.scala 14:47]
    node _T_3737 = eq(io.req.bits.cmd, UInt<4>("h0d")) @[package.scala 14:47]
    node _T_3738 = eq(io.req.bits.cmd, UInt<4>("h0e")) @[package.scala 14:47]
    node _T_3739 = eq(io.req.bits.cmd, UInt<4>("h0f")) @[package.scala 14:47]
    node _T_3740 = or(_T_3735, _T_3736) @[package.scala 14:62]
    node _T_3741 = or(_T_3740, _T_3737) @[package.scala 14:62]
    node _T_3742 = or(_T_3741, _T_3738) @[package.scala 14:62]
    node _T_3743 = or(_T_3742, _T_3739) @[package.scala 14:62]
    node _T_3744 = or(_T_3729, _T_3743) @[Consts.scala 91:44]
    node _T_3745 = or(_T_3718, _T_3744) @[Consts.scala 93:75]
    node _T_3746 = and(bad_va, _T_3745) @[TLB.scala 222:28]
    node _T_3747 = and(pf_ld_array, hits) @[TLB.scala 222:72]
    node _T_3749 = neq(_T_3747, UInt<1>("h00")) @[TLB.scala 222:80]
    node _T_3750 = or(_T_3746, _T_3749) @[TLB.scala 222:56]
    io.resp.pf.ld <= _T_3750 @[TLB.scala 222:17]
    node _T_3752 = eq(io.req.bits.cmd, UInt<1>("h01")) @[Consts.scala 94:32]
    node _T_3754 = eq(io.req.bits.cmd, UInt<5>("h011")) @[Consts.scala 94:49]
    node _T_3755 = or(_T_3752, _T_3754) @[Consts.scala 94:42]
    node _T_3757 = eq(io.req.bits.cmd, UInt<3>("h07")) @[Consts.scala 94:66]
    node _T_3758 = or(_T_3755, _T_3757) @[Consts.scala 94:59]
    node _T_3763 = eq(io.req.bits.cmd, UInt<3>("h04")) @[package.scala 14:47]
    node _T_3764 = eq(io.req.bits.cmd, UInt<4>("h09")) @[package.scala 14:47]
    node _T_3765 = eq(io.req.bits.cmd, UInt<4>("h0a")) @[package.scala 14:47]
    node _T_3766 = eq(io.req.bits.cmd, UInt<4>("h0b")) @[package.scala 14:47]
    node _T_3767 = or(_T_3763, _T_3764) @[package.scala 14:62]
    node _T_3768 = or(_T_3767, _T_3765) @[package.scala 14:62]
    node _T_3769 = or(_T_3768, _T_3766) @[package.scala 14:62]
    node _T_3775 = eq(io.req.bits.cmd, UInt<4>("h08")) @[package.scala 14:47]
    node _T_3776 = eq(io.req.bits.cmd, UInt<4>("h0c")) @[package.scala 14:47]
    node _T_3777 = eq(io.req.bits.cmd, UInt<4>("h0d")) @[package.scala 14:47]
    node _T_3778 = eq(io.req.bits.cmd, UInt<4>("h0e")) @[package.scala 14:47]
    node _T_3779 = eq(io.req.bits.cmd, UInt<4>("h0f")) @[package.scala 14:47]
    node _T_3780 = or(_T_3775, _T_3776) @[package.scala 14:62]
    node _T_3781 = or(_T_3780, _T_3777) @[package.scala 14:62]
    node _T_3782 = or(_T_3781, _T_3778) @[package.scala 14:62]
    node _T_3783 = or(_T_3782, _T_3779) @[package.scala 14:62]
    node _T_3784 = or(_T_3769, _T_3783) @[Consts.scala 91:44]
    node _T_3785 = or(_T_3758, _T_3784) @[Consts.scala 94:76]
    node _T_3786 = and(bad_va, _T_3785) @[TLB.scala 223:28]
    node _T_3787 = and(pf_st_array, hits) @[TLB.scala 223:73]
    node _T_3789 = neq(_T_3787, UInt<1>("h00")) @[TLB.scala 223:81]
    node _T_3790 = or(_T_3786, _T_3789) @[TLB.scala 223:57]
    io.resp.pf.st <= _T_3790 @[TLB.scala 223:17]
    node _T_3791 = and(pf_inst_array, hits) @[TLB.scala 224:47]
    node _T_3793 = neq(_T_3791, UInt<1>("h00")) @[TLB.scala 224:55]
    node _T_3794 = or(bad_va, _T_3793) @[TLB.scala 224:29]
    io.resp.pf.inst <= _T_3794 @[TLB.scala 224:19]
    node _T_3795 = and(ae_ld_array, hits) @[TLB.scala 225:33]
    node _T_3797 = neq(_T_3795, UInt<1>("h00")) @[TLB.scala 225:41]
    io.resp.ae.ld <= _T_3797 @[TLB.scala 225:17]
    node _T_3798 = and(ae_st_array, hits) @[TLB.scala 226:33]
    node _T_3800 = neq(_T_3798, UInt<1>("h00")) @[TLB.scala 226:41]
    io.resp.ae.st <= _T_3800 @[TLB.scala 226:17]
    node _T_3801 = not(px_array) @[TLB.scala 227:23]
    node _T_3802 = and(_T_3801, hits) @[TLB.scala 227:33]
    node _T_3804 = neq(_T_3802, UInt<1>("h00")) @[TLB.scala 227:41]
    io.resp.ae.inst <= _T_3804 @[TLB.scala 227:19]
    node _T_3805 = and(ma_ld_array, hits) @[TLB.scala 228:33]
    node _T_3807 = neq(_T_3805, UInt<1>("h00")) @[TLB.scala 228:41]
    io.resp.ma.ld <= _T_3807 @[TLB.scala 228:17]
    node _T_3808 = and(ma_st_array, hits) @[TLB.scala 229:33]
    node _T_3810 = neq(_T_3808, UInt<1>("h00")) @[TLB.scala 229:41]
    io.resp.ma.st <= _T_3810 @[TLB.scala 229:17]
    io.resp.ma.inst <= UInt<1>("h00") @[TLB.scala 230:19]
    node _T_3812 = and(c_array, hits) @[TLB.scala 231:33]
    node _T_3814 = neq(_T_3812, UInt<1>("h00")) @[TLB.scala 231:41]
    io.resp.cacheable <= _T_3814 @[TLB.scala 231:21]
    node _T_3815 = and(prefetchable_array, hits) @[TLB.scala 232:47]
    node _T_3817 = neq(_T_3815, UInt<1>("h00")) @[TLB.scala 232:55]
    node _T_3819 = and(_T_3817, UInt<1>("h00")) @[TLB.scala 232:59]
    io.resp.prefetchable <= _T_3819 @[TLB.scala 232:24]
    node _T_3820 = or(do_refill, tlb_miss) @[TLB.scala 233:29]
    node _T_3821 = or(_T_3820, multipleHits) @[TLB.scala 233:41]
    io.resp.miss <= _T_3821 @[TLB.scala 233:16]
    node _T_3822 = bits(io.req.bits.vaddr, 11, 0) @[TLB.scala 234:46]
    node _T_3823 = cat(ppn, _T_3822) @[Cat.scala 30:58]
    io.resp.paddr <= _T_3823 @[TLB.scala 234:17]
    node _T_3824 = eq(state, UInt<2>("h01")) @[TLB.scala 236:29]
    io.ptw.req.valid <= _T_3824 @[TLB.scala 236:20]
    io.ptw.req.bits <- io.ptw.status @[TLB.scala 237:19]
    io.ptw.req.bits.addr <= r_refill_tag @[TLB.scala 238:24]
    node _T_3825 = and(io.req.valid, io.req.bits.sfence.valid) @[TLB.scala 241:31]
    node _T_3826 = and(io.req.ready, io.req.valid) @[Decoupled.scala 30:37]
    node _T_3827 = and(_T_3826, tlb_miss) @[TLB.scala 242:25]
    when _T_3827 : @[TLB.scala 242:38]
      state <= UInt<2>("h01") @[TLB.scala 243:13]
      r_refill_tag <= lookup_tag @[TLB.scala 244:20]
      r_refill_waddr <= repl_waddr @[TLB.scala 245:22]
      r_req <- io.req.bits @[TLB.scala 246:13]
      skip @[TLB.scala 242:38]
    node _T_3828 = eq(state, UInt<2>("h01")) @[TLB.scala 248:17]
    when _T_3828 : @[TLB.scala 248:32]
      when _T_3825 : @[TLB.scala 249:21]
        state <= UInt<2>("h00") @[TLB.scala 249:29]
        skip @[TLB.scala 249:21]
      when io.ptw.req.ready : @[TLB.scala 250:31]
        node _T_3829 = mux(_T_3825, UInt<2>("h03"), UInt<2>("h02")) @[TLB.scala 250:45]
        state <= _T_3829 @[TLB.scala 250:39]
        skip @[TLB.scala 250:31]
      skip @[TLB.scala 248:32]
    node _T_3830 = eq(state, UInt<2>("h02")) @[TLB.scala 252:17]
    node _T_3831 = and(_T_3830, _T_3825) @[TLB.scala 252:28]
    when _T_3831 : @[TLB.scala 252:39]
      state <= UInt<2>("h03") @[TLB.scala 253:13]
      skip @[TLB.scala 252:39]
    when io.ptw.resp.valid : @[TLB.scala 255:30]
      state <= UInt<2>("h00") @[TLB.scala 256:13]
      skip @[TLB.scala 255:30]
    when _T_3825 : @[TLB.scala 259:19]
      node _T_3832 = shr(io.req.bits.sfence.bits.addr, 12) @[TLB.scala 260:44]
      node _T_3833 = eq(_T_3832, vpn) @[TLB.scala 260:58]
      node _T_3834 = bits(reset, 0, 0) @[TLB.scala 260:13]
      node _T_3835 = or(_T_3833, _T_3834) @[TLB.scala 260:13]
      node _T_3837 = eq(_T_3835, UInt<1>("h00")) @[TLB.scala 260:13]
      when _T_3837 : @[TLB.scala 260:13]
        printf(clock, UInt<1>(1), "Assertion failed\n    at TLB.scala:260 assert((io.req.bits.sfence.bits.addr >> pgIdxBits) === vpn)\n") @[TLB.scala 260:13]
        stop(clock, UInt<1>(1), 1) @[TLB.scala 260:13]
        skip @[TLB.scala 260:13]
      node _T_3838 = bits(hits, 32, 0) @[TLB.scala 261:62]
      node _T_3839 = not(_T_3838) @[TLB.scala 261:57]
      node _T_3840 = and(valid, _T_3839) @[TLB.scala 261:55]
      node _T_3841 = cat(entries_1.g, entries_0.g) @[Cat.scala 30:58]
      node _T_3842 = cat(entries_3.g, entries_2.g) @[Cat.scala 30:58]
      node _T_3843 = cat(_T_3842, _T_3841) @[Cat.scala 30:58]
      node _T_3844 = cat(entries_5.g, entries_4.g) @[Cat.scala 30:58]
      node _T_3845 = cat(entries_7.g, entries_6.g) @[Cat.scala 30:58]
      node _T_3846 = cat(_T_3845, _T_3844) @[Cat.scala 30:58]
      node _T_3847 = cat(_T_3846, _T_3843) @[Cat.scala 30:58]
      node _T_3848 = cat(entries_9.g, entries_8.g) @[Cat.scala 30:58]
      node _T_3849 = cat(entries_11.g, entries_10.g) @[Cat.scala 30:58]
      node _T_3850 = cat(_T_3849, _T_3848) @[Cat.scala 30:58]
      node _T_3851 = cat(entries_13.g, entries_12.g) @[Cat.scala 30:58]
      node _T_3852 = cat(entries_15.g, entries_14.g) @[Cat.scala 30:58]
      node _T_3853 = cat(_T_3852, _T_3851) @[Cat.scala 30:58]
      node _T_3854 = cat(_T_3853, _T_3850) @[Cat.scala 30:58]
      node _T_3855 = cat(_T_3854, _T_3847) @[Cat.scala 30:58]
      node _T_3856 = cat(entries_17.g, entries_16.g) @[Cat.scala 30:58]
      node _T_3857 = cat(entries_19.g, entries_18.g) @[Cat.scala 30:58]
      node _T_3858 = cat(_T_3857, _T_3856) @[Cat.scala 30:58]
      node _T_3859 = cat(entries_21.g, entries_20.g) @[Cat.scala 30:58]
      node _T_3860 = cat(entries_23.g, entries_22.g) @[Cat.scala 30:58]
      node _T_3861 = cat(_T_3860, _T_3859) @[Cat.scala 30:58]
      node _T_3862 = cat(_T_3861, _T_3858) @[Cat.scala 30:58]
      node _T_3863 = cat(entries_25.g, entries_24.g) @[Cat.scala 30:58]
      node _T_3864 = cat(entries_27.g, entries_26.g) @[Cat.scala 30:58]
      node _T_3865 = cat(_T_3864, _T_3863) @[Cat.scala 30:58]
      node _T_3866 = cat(entries_29.g, entries_28.g) @[Cat.scala 30:58]
      node _T_3867 = cat(entries_32.g, entries_31.g) @[Cat.scala 30:58]
      node _T_3868 = cat(_T_3867, entries_30.g) @[Cat.scala 30:58]
      node _T_3869 = cat(_T_3868, _T_3866) @[Cat.scala 30:58]
      node _T_3870 = cat(_T_3869, _T_3865) @[Cat.scala 30:58]
      node _T_3871 = cat(_T_3870, _T_3862) @[Cat.scala 30:58]
      node _T_3872 = cat(_T_3871, _T_3855) @[Cat.scala 30:58]
      node _T_3873 = and(valid, _T_3872) @[TLB.scala 262:55]
      node _T_3875 = mux(io.req.bits.sfence.bits.rs2, _T_3873, UInt<1>("h00")) @[TLB.scala 262:19]
      node _T_3876 = mux(io.req.bits.sfence.bits.rs1, _T_3840, _T_3875) @[TLB.scala 261:19]
      valid <= _T_3876 @[TLB.scala 261:13]
      skip @[TLB.scala 259:19]
    when multipleHits : @[TLB.scala 264:25]
      valid <= UInt<1>("h00") @[TLB.scala 265:13]
      skip @[TLB.scala 264:25]
    node _T_3878 = and(io.ptw.req.ready, io.ptw.req.valid) @[Decoupled.scala 30:37]
    node _T_3879 = bits(reset, 0, 0) @[TLB.scala 268:11]
    node _T_3881 = eq(_T_3879, UInt<1>("h00")) @[TLB.scala 268:11]
    when _T_3881 : @[TLB.scala 268:11]
      printf(clock, UInt<1>(1), "COVER:%d:DTLB_MISS:MemorySystem;;TLB miss\n", _T_3878) @[TLB.scala 268:11]
      skip @[TLB.scala 268:11]
    node _T_3883 = eq(io.ptw.req.ready, UInt<1>("h00")) @[TLB.scala 269:32]
    node _T_3884 = and(io.ptw.req.valid, _T_3883) @[TLB.scala 269:29]
    node _T_3885 = bits(reset, 0, 0) @[TLB.scala 269:11]
    node _T_3887 = eq(_T_3885, UInt<1>("h00")) @[TLB.scala 269:11]
    when _T_3887 : @[TLB.scala 269:11]
      printf(clock, UInt<1>(1), "COVER:%d:DTLB_PTW_STALL:MemorySystem;;TLB miss, but PTW busy\n", _T_3884) @[TLB.scala 269:11]
      skip @[TLB.scala 269:11]
    node _T_3888 = eq(state, UInt<2>("h03")) @[TLB.scala 270:18]
    node _T_3889 = bits(reset, 0, 0) @[TLB.scala 270:11]
    node _T_3891 = eq(_T_3889, UInt<1>("h00")) @[TLB.scala 270:11]
    when _T_3891 : @[TLB.scala 270:11]
      printf(clock, UInt<1>(1), "COVER:%d:DTLB_SFENCE_DURING_REFILL:MemorySystem;;flush TLB during TLB refill\n", _T_3888) @[TLB.scala 270:11]
      skip @[TLB.scala 270:11]
    node _T_3893 = eq(io.req.bits.sfence.bits.rs1, UInt<1>("h00")) @[TLB.scala 271:22]
    node _T_3894 = and(_T_3825, _T_3893) @[TLB.scala 271:19]
    node _T_3896 = eq(io.req.bits.sfence.bits.rs2, UInt<1>("h00")) @[TLB.scala 271:54]
    node _T_3897 = and(_T_3894, _T_3896) @[TLB.scala 271:51]
    node _T_3898 = bits(reset, 0, 0) @[TLB.scala 271:11]
    node _T_3900 = eq(_T_3898, UInt<1>("h00")) @[TLB.scala 271:11]
    when _T_3900 : @[TLB.scala 271:11]
      printf(clock, UInt<1>(1), "COVER:%d:DTLB_SFENCE_ALL:MemorySystem;;flush TLB\n", _T_3897) @[TLB.scala 271:11]
      skip @[TLB.scala 271:11]
    node _T_3902 = eq(io.req.bits.sfence.bits.rs1, UInt<1>("h00")) @[TLB.scala 272:22]
    node _T_3903 = and(_T_3825, _T_3902) @[TLB.scala 272:19]
    node _T_3904 = and(_T_3903, io.req.bits.sfence.bits.rs2) @[TLB.scala 272:51]
    node _T_3905 = bits(reset, 0, 0) @[TLB.scala 272:11]
    node _T_3907 = eq(_T_3905, UInt<1>("h00")) @[TLB.scala 272:11]
    when _T_3907 : @[TLB.scala 272:11]
      printf(clock, UInt<1>(1), "COVER:%d:DTLB_SFENCE_ASID:MemorySystem;;flush TLB ASID\n", _T_3904) @[TLB.scala 272:11]
      skip @[TLB.scala 272:11]
    node _T_3908 = and(_T_3825, io.req.bits.sfence.bits.rs1) @[TLB.scala 273:19]
    node _T_3910 = eq(io.req.bits.sfence.bits.rs2, UInt<1>("h00")) @[TLB.scala 273:53]
    node _T_3911 = and(_T_3908, _T_3910) @[TLB.scala 273:50]
    node _T_3912 = bits(reset, 0, 0) @[TLB.scala 273:11]
    node _T_3914 = eq(_T_3912, UInt<1>("h00")) @[TLB.scala 273:11]
    when _T_3914 : @[TLB.scala 273:11]
      printf(clock, UInt<1>(1), "COVER:%d:DTLB_SFENCE_LINE:MemorySystem;;flush TLB line\n", _T_3911) @[TLB.scala 273:11]
      skip @[TLB.scala 273:11]
    node _T_3915 = and(_T_3825, io.req.bits.sfence.bits.rs1) @[TLB.scala 274:19]
    node _T_3916 = and(_T_3915, io.req.bits.sfence.bits.rs2) @[TLB.scala 274:50]
    node _T_3917 = bits(reset, 0, 0) @[TLB.scala 274:11]
    node _T_3919 = eq(_T_3917, UInt<1>("h00")) @[TLB.scala 274:11]
    when _T_3919 : @[TLB.scala 274:11]
      printf(clock, UInt<1>(1), "COVER:%d:DTLB_SFENCE_LINE_ASID:MemorySystem;;flush TLB line/ASID\n", _T_3916) @[TLB.scala 274:11]
      skip @[TLB.scala 274:11]
    node _T_3920 = bits(reset, 0, 0) @[TLB.scala 275:11]
    node _T_3922 = eq(_T_3920, UInt<1>("h00")) @[TLB.scala 275:11]
    when _T_3922 : @[TLB.scala 275:11]
      printf(clock, UInt<1>(1), "COVER:%d:DTLB_MULTIPLE_HITS:MemorySystem;;Two matching translations in TLB\n", multipleHits) @[TLB.scala 275:11]
      skip @[TLB.scala 275:11]
    
  module L1MetadataArray : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip read : {flip ready : UInt<1>, valid : UInt<1>, bits : {idx : UInt<6>, way_en : UInt<4>, tag : UInt<20>}}, flip write : {flip ready : UInt<1>, valid : UInt<1>, bits : {idx : UInt<6>, way_en : UInt<4>, tag : UInt<20>, data : {coh : {state : UInt<2>}, tag : UInt<20>}}}, resp : {coh : {state : UInt<2>}, tag : UInt<20>}[4]}
    
    clock is invalid
    reset is invalid
    io is invalid
    wire _T_5 : {state : UInt<2>} @[Metadata.scala 160:20]
    _T_5 is invalid @[Metadata.scala 160:20]
    _T_5.state <= UInt<2>("h00") @[Metadata.scala 161:16]
    wire rstVal : {coh : {state : UInt<2>}, tag : UInt<20>} @[HellaCache.scala 228:20]
    rstVal is invalid @[HellaCache.scala 228:20]
    rstVal.tag <= UInt<1>("h00") @[HellaCache.scala 229:14]
    rstVal.coh <- _T_5 @[HellaCache.scala 230:14]
    reg rst_cnt : UInt<7>, clock with : (reset => (reset, UInt<7>("h00"))) @[HellaCache.scala 252:20]
    node rst = lt(rst_cnt, UInt<7>("h040")) @[HellaCache.scala 253:21]
    node waddr = mux(rst, rst_cnt, io.write.bits.idx) @[HellaCache.scala 254:18]
    node _T_35 = mux(rst, rstVal, io.write.bits.data) @[HellaCache.scala 255:18]
    node wdata = cat(_T_35.coh.state, _T_35.tag) @[HellaCache.scala 255:52]
    node _T_37 = or(rst, UInt<1>("h00")) @[HellaCache.scala 256:23]
    node _T_39 = asSInt(io.write.bits.way_en) @[HellaCache.scala 256:75]
    node _T_40 = mux(_T_37, asSInt(UInt<1>("h01")), _T_39) @[HellaCache.scala 256:18]
    node wmask_0 = bits(_T_40, 0, 0) @[HellaCache.scala 256:83]
    node wmask_1 = bits(_T_40, 1, 1) @[HellaCache.scala 256:83]
    node wmask_2 = bits(_T_40, 2, 2) @[HellaCache.scala 256:83]
    node wmask_3 = bits(_T_40, 3, 3) @[HellaCache.scala 256:83]
    node _T_42 = or(rst, UInt<1>("h00")) @[HellaCache.scala 257:23]
    node _T_44 = asSInt(io.read.bits.way_en) @[HellaCache.scala 257:74]
    node _T_45 = mux(_T_42, asSInt(UInt<1>("h01")), _T_44) @[HellaCache.scala 257:18]
    node rmask_0 = bits(_T_45, 0, 0) @[HellaCache.scala 257:82]
    node rmask_1 = bits(_T_45, 1, 1) @[HellaCache.scala 257:82]
    node rmask_2 = bits(_T_45, 2, 2) @[HellaCache.scala 257:82]
    node rmask_3 = bits(_T_45, 3, 3) @[HellaCache.scala 257:82]
    when rst : @[HellaCache.scala 258:14]
      node _T_47 = add(rst_cnt, UInt<1>("h01")) @[HellaCache.scala 258:34]
      node _T_48 = tail(_T_47, 1) @[HellaCache.scala 258:34]
      rst_cnt <= _T_48 @[HellaCache.scala 258:24]
      skip @[HellaCache.scala 258:14]
    smem tag_array : UInt<22>[4][64] @[HellaCache.scala 261:25]
    node wen = or(rst, io.write.valid) @[HellaCache.scala 262:17]
    when wen : @[HellaCache.scala 263:14]
      wire _T_61 : UInt<22>[4] @[compatibility.scala 117:12]
      _T_61 is invalid @[compatibility.scala 117:12]
      _T_61[0] <= wdata @[compatibility.scala 117:12]
      _T_61[1] <= wdata @[compatibility.scala 117:12]
      _T_61[2] <= wdata @[compatibility.scala 117:12]
      _T_61[3] <= wdata @[compatibility.scala 117:12]
      node _T_68 = bits(waddr, 5, 0)
      write mport _T_69 = tag_array[_T_68], clock
      when wmask_0 :
        _T_69[0] <= _T_61[0]
        skip
      when wmask_1 :
        _T_69[1] <= _T_61[1]
        skip
      when wmask_2 :
        _T_69[2] <= _T_61[2]
        skip
      when wmask_3 :
        _T_69[3] <= _T_61[3]
        skip
      skip @[HellaCache.scala 263:14]
    node _T_81 = and(io.read.ready, io.read.valid) @[Decoupled.scala 30:37]
    wire _T_83 : UInt @[HellaCache.scala 266:28]
    _T_83 is invalid @[HellaCache.scala 266:28]
    when _T_81 : @[HellaCache.scala 266:28]
      _T_83 <= io.read.bits.idx @[HellaCache.scala 266:28]
      node _T_85 = or(_T_83, UInt<6>("h00")) @[HellaCache.scala 266:28]
      node _T_86 = bits(_T_85, 5, 0) @[HellaCache.scala 266:28]
      read mport _T_87 = tag_array[_T_86], clock @[HellaCache.scala 266:28]
      skip @[HellaCache.scala 266:28]
    wire _T_100 : {coh : {state : UInt<2>}, tag : UInt<20>} @[HellaCache.scala 266:82]
    _T_100 is invalid @[HellaCache.scala 266:82]
    wire _T_102 : UInt<22>
    _T_102 is invalid
    _T_102 <= _T_87[0]
    node _T_103 = bits(_T_102, 19, 0) @[HellaCache.scala 266:82]
    _T_100.tag <= _T_103 @[HellaCache.scala 266:82]
    node _T_104 = bits(_T_102, 21, 20) @[HellaCache.scala 266:82]
    _T_100.coh.state <= _T_104 @[HellaCache.scala 266:82]
    wire _T_106 : {coh : {state : UInt<2>}, tag : UInt<20>} @[HellaCache.scala 266:82]
    _T_106 is invalid @[HellaCache.scala 266:82]
    wire _T_108 : UInt<22>
    _T_108 is invalid
    _T_108 <= _T_87[1]
    node _T_109 = bits(_T_108, 19, 0) @[HellaCache.scala 266:82]
    _T_106.tag <= _T_109 @[HellaCache.scala 266:82]
    node _T_110 = bits(_T_108, 21, 20) @[HellaCache.scala 266:82]
    _T_106.coh.state <= _T_110 @[HellaCache.scala 266:82]
    wire _T_112 : {coh : {state : UInt<2>}, tag : UInt<20>} @[HellaCache.scala 266:82]
    _T_112 is invalid @[HellaCache.scala 266:82]
    wire _T_114 : UInt<22>
    _T_114 is invalid
    _T_114 <= _T_87[2]
    node _T_115 = bits(_T_114, 19, 0) @[HellaCache.scala 266:82]
    _T_112.tag <= _T_115 @[HellaCache.scala 266:82]
    node _T_116 = bits(_T_114, 21, 20) @[HellaCache.scala 266:82]
    _T_112.coh.state <= _T_116 @[HellaCache.scala 266:82]
    wire _T_118 : {coh : {state : UInt<2>}, tag : UInt<20>} @[HellaCache.scala 266:82]
    _T_118 is invalid @[HellaCache.scala 266:82]
    wire _T_120 : UInt<22>
    _T_120 is invalid
    _T_120 <= _T_87[3]
    node _T_121 = bits(_T_120, 19, 0) @[HellaCache.scala 266:82]
    _T_118.tag <= _T_121 @[HellaCache.scala 266:82]
    node _T_122 = bits(_T_120, 21, 20) @[HellaCache.scala 266:82]
    _T_118.coh.state <= _T_122 @[HellaCache.scala 266:82]
    io.resp[0] <- _T_100 @[HellaCache.scala 266:11]
    io.resp[1] <- _T_106 @[HellaCache.scala 266:11]
    io.resp[2] <- _T_112 @[HellaCache.scala 266:11]
    io.resp[3] <- _T_118 @[HellaCache.scala 266:11]
    node _T_124 = eq(wen, UInt<1>("h00")) @[HellaCache.scala 268:20]
    io.read.ready <= _T_124 @[HellaCache.scala 268:17]
    node _T_126 = eq(rst, UInt<1>("h00")) @[HellaCache.scala 269:21]
    io.write.ready <= _T_126 @[HellaCache.scala 269:18]
    
  module Arbiter_7 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {idx : UInt<6>, way_en : UInt<4>, tag : UInt<20>}}[5], out : {flip ready : UInt<1>, valid : UInt<1>, bits : {idx : UInt<6>, way_en : UInt<4>, tag : UInt<20>}}, chosen : UInt<3>}
    
    io.chosen <= UInt<3>("h04") @[Arbiter.scala 116:13]
    io.out.bits.tag <= io.in[4].bits.tag @[Arbiter.scala 117:15]
    io.out.bits.way_en <= io.in[4].bits.way_en @[Arbiter.scala 117:15]
    io.out.bits.idx <= io.in[4].bits.idx @[Arbiter.scala 117:15]
    when io.in[3].valid : @[Arbiter.scala 119:27]
      io.chosen <= UInt<2>("h03") @[Arbiter.scala 120:17]
      io.out.bits.tag <= io.in[3].bits.tag @[Arbiter.scala 121:19]
      io.out.bits.way_en <= io.in[3].bits.way_en @[Arbiter.scala 121:19]
      io.out.bits.idx <= io.in[3].bits.idx @[Arbiter.scala 121:19]
      skip @[Arbiter.scala 119:27]
    when io.in[2].valid : @[Arbiter.scala 119:27]
      io.chosen <= UInt<2>("h02") @[Arbiter.scala 120:17]
      io.out.bits.tag <= io.in[2].bits.tag @[Arbiter.scala 121:19]
      io.out.bits.way_en <= io.in[2].bits.way_en @[Arbiter.scala 121:19]
      io.out.bits.idx <= io.in[2].bits.idx @[Arbiter.scala 121:19]
      skip @[Arbiter.scala 119:27]
    when io.in[1].valid : @[Arbiter.scala 119:27]
      io.chosen <= UInt<1>("h01") @[Arbiter.scala 120:17]
      io.out.bits.tag <= io.in[1].bits.tag @[Arbiter.scala 121:19]
      io.out.bits.way_en <= io.in[1].bits.way_en @[Arbiter.scala 121:19]
      io.out.bits.idx <= io.in[1].bits.idx @[Arbiter.scala 121:19]
      skip @[Arbiter.scala 119:27]
    when io.in[0].valid : @[Arbiter.scala 119:27]
      io.chosen <= UInt<1>("h00") @[Arbiter.scala 120:17]
      io.out.bits.tag <= io.in[0].bits.tag @[Arbiter.scala 121:19]
      io.out.bits.way_en <= io.in[0].bits.way_en @[Arbiter.scala 121:19]
      io.out.bits.idx <= io.in[0].bits.idx @[Arbiter.scala 121:19]
      skip @[Arbiter.scala 119:27]
    node _T_79 = or(io.in[0].valid, io.in[1].valid) @[Arbiter.scala 29:68]
    node _T_80 = or(_T_79, io.in[2].valid) @[Arbiter.scala 29:68]
    node _T_81 = or(_T_80, io.in[3].valid) @[Arbiter.scala 29:68]
    node _T_83 = eq(io.in[0].valid, UInt<1>("h00")) @[Arbiter.scala 29:78]
    node _T_85 = eq(_T_79, UInt<1>("h00")) @[Arbiter.scala 29:78]
    node _T_87 = eq(_T_80, UInt<1>("h00")) @[Arbiter.scala 29:78]
    node _T_89 = eq(_T_81, UInt<1>("h00")) @[Arbiter.scala 29:78]
    node _T_90 = and(UInt<1>("h01"), io.out.ready) @[Arbiter.scala 127:19]
    io.in[0].ready <= _T_90 @[Arbiter.scala 127:14]
    node _T_91 = and(_T_83, io.out.ready) @[Arbiter.scala 127:19]
    io.in[1].ready <= _T_91 @[Arbiter.scala 127:14]
    node _T_92 = and(_T_85, io.out.ready) @[Arbiter.scala 127:19]
    io.in[2].ready <= _T_92 @[Arbiter.scala 127:14]
    node _T_93 = and(_T_87, io.out.ready) @[Arbiter.scala 127:19]
    io.in[3].ready <= _T_93 @[Arbiter.scala 127:14]
    node _T_94 = and(_T_89, io.out.ready) @[Arbiter.scala 127:19]
    io.in[4].ready <= _T_94 @[Arbiter.scala 127:14]
    node _T_96 = eq(_T_89, UInt<1>("h00")) @[Arbiter.scala 128:19]
    node _T_97 = or(_T_96, io.in[4].valid) @[Arbiter.scala 128:31]
    io.out.valid <= _T_97 @[Arbiter.scala 128:16]
    
  module Arbiter_8 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {idx : UInt<6>, way_en : UInt<4>, tag : UInt<20>, data : {coh : {state : UInt<2>}, tag : UInt<20>}}}[2], out : {flip ready : UInt<1>, valid : UInt<1>, bits : {idx : UInt<6>, way_en : UInt<4>, tag : UInt<20>, data : {coh : {state : UInt<2>}, tag : UInt<20>}}}, chosen : UInt<1>}
    
    io.chosen <= UInt<1>("h01") @[Arbiter.scala 116:13]
    io.out.bits.data.tag <= io.in[1].bits.data.tag @[Arbiter.scala 117:15]
    io.out.bits.data.coh.state <= io.in[1].bits.data.coh.state @[Arbiter.scala 117:15]
    io.out.bits.tag <= io.in[1].bits.tag @[Arbiter.scala 117:15]
    io.out.bits.way_en <= io.in[1].bits.way_en @[Arbiter.scala 117:15]
    io.out.bits.idx <= io.in[1].bits.idx @[Arbiter.scala 117:15]
    when io.in[0].valid : @[Arbiter.scala 119:27]
      io.chosen <= UInt<1>("h00") @[Arbiter.scala 120:17]
      io.out.bits.data.tag <= io.in[0].bits.data.tag @[Arbiter.scala 121:19]
      io.out.bits.data.coh.state <= io.in[0].bits.data.coh.state @[Arbiter.scala 121:19]
      io.out.bits.tag <= io.in[0].bits.tag @[Arbiter.scala 121:19]
      io.out.bits.way_en <= io.in[0].bits.way_en @[Arbiter.scala 121:19]
      io.out.bits.idx <= io.in[0].bits.idx @[Arbiter.scala 121:19]
      skip @[Arbiter.scala 119:27]
    node _T_47 = eq(io.in[0].valid, UInt<1>("h00")) @[Arbiter.scala 29:78]
    node _T_48 = and(UInt<1>("h01"), io.out.ready) @[Arbiter.scala 127:19]
    io.in[0].ready <= _T_48 @[Arbiter.scala 127:14]
    node _T_49 = and(_T_47, io.out.ready) @[Arbiter.scala 127:19]
    io.in[1].ready <= _T_49 @[Arbiter.scala 127:14]
    node _T_51 = eq(_T_47, UInt<1>("h00")) @[Arbiter.scala 128:19]
    node _T_52 = or(_T_51, io.in[1].valid) @[Arbiter.scala 128:31]
    io.out.valid <= _T_52 @[Arbiter.scala 128:16]
    
  module DataArray : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip read : {flip ready : UInt<1>, valid : UInt<1>, bits : {way_en : UInt<4>, addr : UInt<12>}}, flip write : {flip ready : UInt<1>, valid : UInt<1>, bits : {way_en : UInt<4>, addr : UInt<12>, wmask : UInt<1>, data : UInt<64>}}, resp : UInt<64>[4]}
    
    clock is invalid
    reset is invalid
    io is invalid
    node waddr = shr(io.write.bits.addr, 3) @[NBDcache.scala 621:34]
    node raddr = shr(io.read.bits.addr, 3) @[NBDcache.scala 622:33]
    node _T_21 = bits(io.write.bits.way_en, 0, 0) @[NBDcache.scala 626:41]
    node _T_22 = bits(io.read.bits.way_en, 0, 0) @[NBDcache.scala 627:40]
    wire _T_26 : UInt<64>[1] @[NBDcache.scala 628:22]
    _T_26 is invalid @[NBDcache.scala 628:22]
    reg _T_31 : UInt<12>, clock @[Reg.scala 11:16]
    when io.read.valid : @[Reg.scala 12:19]
      _T_31 <= io.read.bits.addr @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    smem _T_39 : UInt<64>[1][512] @[NBDcache.scala 631:27]
    node _T_41 = neq(_T_21, UInt<1>("h00")) @[NBDcache.scala 632:23]
    node _T_42 = and(_T_41, io.write.valid) @[NBDcache.scala 632:27]
    node _T_43 = bits(io.write.bits.wmask, 0, 0) @[NBDcache.scala 632:67]
    node _T_44 = and(_T_42, _T_43) @[NBDcache.scala 632:45]
    when _T_44 : @[NBDcache.scala 632:72]
      node _T_45 = bits(io.write.bits.data, 63, 0) @[NBDcache.scala 633:59]
      wire _T_48 : UInt<64>[1] @[compatibility.scala 117:12]
      _T_48 is invalid @[compatibility.scala 117:12]
      _T_48[0] <= _T_45 @[compatibility.scala 117:12]
      node _T_52 = bits(_T_21, 0, 0) @[NBDcache.scala 634:44]
      write mport _T_53 = _T_39[waddr], clock
      when _T_52 :
        _T_53[0] <= _T_48[0]
        skip
      skip @[NBDcache.scala 632:72]
    node _T_60 = neq(_T_22, UInt<1>("h00")) @[NBDcache.scala 636:46]
    node _T_61 = and(_T_60, io.read.valid) @[NBDcache.scala 636:50]
    wire _T_63 : UInt @[NBDcache.scala 636:30]
    _T_63 is invalid @[NBDcache.scala 636:30]
    when _T_61 : @[NBDcache.scala 636:30]
      _T_63 <= raddr @[NBDcache.scala 636:30]
      node _T_65 = or(_T_63, UInt<9>("h00")) @[NBDcache.scala 636:30]
      node _T_66 = bits(_T_65, 8, 0) @[NBDcache.scala 636:30]
      read mport _T_67 = _T_39[_T_66], clock @[NBDcache.scala 636:30]
      skip @[NBDcache.scala 636:30]
    _T_26[0] <= _T_67[0] @[NBDcache.scala 636:17]
    node _T_73 = bits(_T_26[0], 63, 0) @[NBDcache.scala 639:31]
    wire _T_76 : UInt<64>[1] @[NBDcache.scala 639:20]
    _T_76 is invalid @[NBDcache.scala 639:20]
    _T_76[0] <= _T_73 @[NBDcache.scala 639:20]
    io.resp[0] <= _T_76[0] @[NBDcache.scala 643:23]
    node _T_80 = bits(io.write.bits.way_en, 1, 1) @[NBDcache.scala 626:41]
    node _T_81 = bits(io.read.bits.way_en, 1, 1) @[NBDcache.scala 627:40]
    wire _T_85 : UInt<64>[1] @[NBDcache.scala 628:22]
    _T_85 is invalid @[NBDcache.scala 628:22]
    reg _T_90 : UInt<12>, clock @[Reg.scala 11:16]
    when io.read.valid : @[Reg.scala 12:19]
      _T_90 <= io.read.bits.addr @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    smem _T_98 : UInt<64>[1][512] @[NBDcache.scala 631:27]
    node _T_100 = neq(_T_80, UInt<1>("h00")) @[NBDcache.scala 632:23]
    node _T_101 = and(_T_100, io.write.valid) @[NBDcache.scala 632:27]
    node _T_102 = bits(io.write.bits.wmask, 0, 0) @[NBDcache.scala 632:67]
    node _T_103 = and(_T_101, _T_102) @[NBDcache.scala 632:45]
    when _T_103 : @[NBDcache.scala 632:72]
      node _T_104 = bits(io.write.bits.data, 63, 0) @[NBDcache.scala 633:59]
      wire _T_107 : UInt<64>[1] @[compatibility.scala 117:12]
      _T_107 is invalid @[compatibility.scala 117:12]
      _T_107[0] <= _T_104 @[compatibility.scala 117:12]
      node _T_111 = bits(_T_80, 0, 0) @[NBDcache.scala 634:44]
      write mport _T_112 = _T_98[waddr], clock
      when _T_111 :
        _T_112[0] <= _T_107[0]
        skip
      skip @[NBDcache.scala 632:72]
    node _T_119 = neq(_T_81, UInt<1>("h00")) @[NBDcache.scala 636:46]
    node _T_120 = and(_T_119, io.read.valid) @[NBDcache.scala 636:50]
    wire _T_122 : UInt @[NBDcache.scala 636:30]
    _T_122 is invalid @[NBDcache.scala 636:30]
    when _T_120 : @[NBDcache.scala 636:30]
      _T_122 <= raddr @[NBDcache.scala 636:30]
      node _T_124 = or(_T_122, UInt<9>("h00")) @[NBDcache.scala 636:30]
      node _T_125 = bits(_T_124, 8, 0) @[NBDcache.scala 636:30]
      read mport _T_126 = _T_98[_T_125], clock @[NBDcache.scala 636:30]
      skip @[NBDcache.scala 636:30]
    _T_85[0] <= _T_126[0] @[NBDcache.scala 636:17]
    node _T_132 = bits(_T_85[0], 63, 0) @[NBDcache.scala 639:31]
    wire _T_135 : UInt<64>[1] @[NBDcache.scala 639:20]
    _T_135 is invalid @[NBDcache.scala 639:20]
    _T_135[0] <= _T_132 @[NBDcache.scala 639:20]
    io.resp[1] <= _T_135[0] @[NBDcache.scala 643:23]
    node _T_139 = bits(io.write.bits.way_en, 2, 2) @[NBDcache.scala 626:41]
    node _T_140 = bits(io.read.bits.way_en, 2, 2) @[NBDcache.scala 627:40]
    wire _T_144 : UInt<64>[1] @[NBDcache.scala 628:22]
    _T_144 is invalid @[NBDcache.scala 628:22]
    reg _T_149 : UInt<12>, clock @[Reg.scala 11:16]
    when io.read.valid : @[Reg.scala 12:19]
      _T_149 <= io.read.bits.addr @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    smem _T_157 : UInt<64>[1][512] @[NBDcache.scala 631:27]
    node _T_159 = neq(_T_139, UInt<1>("h00")) @[NBDcache.scala 632:23]
    node _T_160 = and(_T_159, io.write.valid) @[NBDcache.scala 632:27]
    node _T_161 = bits(io.write.bits.wmask, 0, 0) @[NBDcache.scala 632:67]
    node _T_162 = and(_T_160, _T_161) @[NBDcache.scala 632:45]
    when _T_162 : @[NBDcache.scala 632:72]
      node _T_163 = bits(io.write.bits.data, 63, 0) @[NBDcache.scala 633:59]
      wire _T_166 : UInt<64>[1] @[compatibility.scala 117:12]
      _T_166 is invalid @[compatibility.scala 117:12]
      _T_166[0] <= _T_163 @[compatibility.scala 117:12]
      node _T_170 = bits(_T_139, 0, 0) @[NBDcache.scala 634:44]
      write mport _T_171 = _T_157[waddr], clock
      when _T_170 :
        _T_171[0] <= _T_166[0]
        skip
      skip @[NBDcache.scala 632:72]
    node _T_178 = neq(_T_140, UInt<1>("h00")) @[NBDcache.scala 636:46]
    node _T_179 = and(_T_178, io.read.valid) @[NBDcache.scala 636:50]
    wire _T_181 : UInt @[NBDcache.scala 636:30]
    _T_181 is invalid @[NBDcache.scala 636:30]
    when _T_179 : @[NBDcache.scala 636:30]
      _T_181 <= raddr @[NBDcache.scala 636:30]
      node _T_183 = or(_T_181, UInt<9>("h00")) @[NBDcache.scala 636:30]
      node _T_184 = bits(_T_183, 8, 0) @[NBDcache.scala 636:30]
      read mport _T_185 = _T_157[_T_184], clock @[NBDcache.scala 636:30]
      skip @[NBDcache.scala 636:30]
    _T_144[0] <= _T_185[0] @[NBDcache.scala 636:17]
    node _T_191 = bits(_T_144[0], 63, 0) @[NBDcache.scala 639:31]
    wire _T_194 : UInt<64>[1] @[NBDcache.scala 639:20]
    _T_194 is invalid @[NBDcache.scala 639:20]
    _T_194[0] <= _T_191 @[NBDcache.scala 639:20]
    io.resp[2] <= _T_194[0] @[NBDcache.scala 643:23]
    node _T_198 = bits(io.write.bits.way_en, 3, 3) @[NBDcache.scala 626:41]
    node _T_199 = bits(io.read.bits.way_en, 3, 3) @[NBDcache.scala 627:40]
    wire _T_203 : UInt<64>[1] @[NBDcache.scala 628:22]
    _T_203 is invalid @[NBDcache.scala 628:22]
    reg _T_208 : UInt<12>, clock @[Reg.scala 11:16]
    when io.read.valid : @[Reg.scala 12:19]
      _T_208 <= io.read.bits.addr @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    smem _T_216 : UInt<64>[1][512] @[NBDcache.scala 631:27]
    node _T_218 = neq(_T_198, UInt<1>("h00")) @[NBDcache.scala 632:23]
    node _T_219 = and(_T_218, io.write.valid) @[NBDcache.scala 632:27]
    node _T_220 = bits(io.write.bits.wmask, 0, 0) @[NBDcache.scala 632:67]
    node _T_221 = and(_T_219, _T_220) @[NBDcache.scala 632:45]
    when _T_221 : @[NBDcache.scala 632:72]
      node _T_222 = bits(io.write.bits.data, 63, 0) @[NBDcache.scala 633:59]
      wire _T_225 : UInt<64>[1] @[compatibility.scala 117:12]
      _T_225 is invalid @[compatibility.scala 117:12]
      _T_225[0] <= _T_222 @[compatibility.scala 117:12]
      node _T_229 = bits(_T_198, 0, 0) @[NBDcache.scala 634:44]
      write mport _T_230 = _T_216[waddr], clock
      when _T_229 :
        _T_230[0] <= _T_225[0]
        skip
      skip @[NBDcache.scala 632:72]
    node _T_237 = neq(_T_199, UInt<1>("h00")) @[NBDcache.scala 636:46]
    node _T_238 = and(_T_237, io.read.valid) @[NBDcache.scala 636:50]
    wire _T_240 : UInt @[NBDcache.scala 636:30]
    _T_240 is invalid @[NBDcache.scala 636:30]
    when _T_238 : @[NBDcache.scala 636:30]
      _T_240 <= raddr @[NBDcache.scala 636:30]
      node _T_242 = or(_T_240, UInt<9>("h00")) @[NBDcache.scala 636:30]
      node _T_243 = bits(_T_242, 8, 0) @[NBDcache.scala 636:30]
      read mport _T_244 = _T_216[_T_243], clock @[NBDcache.scala 636:30]
      skip @[NBDcache.scala 636:30]
    _T_203[0] <= _T_244[0] @[NBDcache.scala 636:17]
    node _T_250 = bits(_T_203[0], 63, 0) @[NBDcache.scala 639:31]
    wire _T_253 : UInt<64>[1] @[NBDcache.scala 639:20]
    _T_253 is invalid @[NBDcache.scala 639:20]
    _T_253[0] <= _T_250 @[NBDcache.scala 639:20]
    io.resp[3] <= _T_253[0] @[NBDcache.scala 643:23]
    io.read.ready <= UInt<1>("h01") @[NBDcache.scala 657:17]
    io.write.ready <= UInt<1>("h01") @[NBDcache.scala 658:18]
    
  module Arbiter_9 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {way_en : UInt<4>, addr : UInt<12>}}[4], out : {flip ready : UInt<1>, valid : UInt<1>, bits : {way_en : UInt<4>, addr : UInt<12>}}, chosen : UInt<2>}
    
    io.chosen <= UInt<2>("h03") @[Arbiter.scala 116:13]
    io.out.bits.addr <= io.in[3].bits.addr @[Arbiter.scala 117:15]
    io.out.bits.way_en <= io.in[3].bits.way_en @[Arbiter.scala 117:15]
    when io.in[2].valid : @[Arbiter.scala 119:27]
      io.chosen <= UInt<2>("h02") @[Arbiter.scala 120:17]
      io.out.bits.addr <= io.in[2].bits.addr @[Arbiter.scala 121:19]
      io.out.bits.way_en <= io.in[2].bits.way_en @[Arbiter.scala 121:19]
      skip @[Arbiter.scala 119:27]
    when io.in[1].valid : @[Arbiter.scala 119:27]
      io.chosen <= UInt<1>("h01") @[Arbiter.scala 120:17]
      io.out.bits.addr <= io.in[1].bits.addr @[Arbiter.scala 121:19]
      io.out.bits.way_en <= io.in[1].bits.way_en @[Arbiter.scala 121:19]
      skip @[Arbiter.scala 119:27]
    when io.in[0].valid : @[Arbiter.scala 119:27]
      io.chosen <= UInt<1>("h00") @[Arbiter.scala 120:17]
      io.out.bits.addr <= io.in[0].bits.addr @[Arbiter.scala 121:19]
      io.out.bits.way_en <= io.in[0].bits.way_en @[Arbiter.scala 121:19]
      skip @[Arbiter.scala 119:27]
    node _T_68 = or(io.in[0].valid, io.in[1].valid) @[Arbiter.scala 29:68]
    node _T_69 = or(_T_68, io.in[2].valid) @[Arbiter.scala 29:68]
    node _T_71 = eq(io.in[0].valid, UInt<1>("h00")) @[Arbiter.scala 29:78]
    node _T_73 = eq(_T_68, UInt<1>("h00")) @[Arbiter.scala 29:78]
    node _T_75 = eq(_T_69, UInt<1>("h00")) @[Arbiter.scala 29:78]
    node _T_76 = and(UInt<1>("h01"), io.out.ready) @[Arbiter.scala 127:19]
    io.in[0].ready <= _T_76 @[Arbiter.scala 127:14]
    node _T_77 = and(_T_71, io.out.ready) @[Arbiter.scala 127:19]
    io.in[1].ready <= _T_77 @[Arbiter.scala 127:14]
    node _T_78 = and(_T_73, io.out.ready) @[Arbiter.scala 127:19]
    io.in[2].ready <= _T_78 @[Arbiter.scala 127:14]
    node _T_79 = and(_T_75, io.out.ready) @[Arbiter.scala 127:19]
    io.in[3].ready <= _T_79 @[Arbiter.scala 127:14]
    node _T_81 = eq(_T_75, UInt<1>("h00")) @[Arbiter.scala 128:19]
    node _T_82 = or(_T_81, io.in[3].valid) @[Arbiter.scala 128:31]
    io.out.valid <= _T_82 @[Arbiter.scala 128:16]
    
  module Arbiter_10 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {way_en : UInt<4>, addr : UInt<12>, wmask : UInt<1>, data : UInt<64>}}[2], out : {flip ready : UInt<1>, valid : UInt<1>, bits : {way_en : UInt<4>, addr : UInt<12>, wmask : UInt<1>, data : UInt<64>}}, chosen : UInt<1>}
    
    io.chosen <= UInt<1>("h01") @[Arbiter.scala 116:13]
    io.out.bits.data <= io.in[1].bits.data @[Arbiter.scala 117:15]
    io.out.bits.wmask <= io.in[1].bits.wmask @[Arbiter.scala 117:15]
    io.out.bits.addr <= io.in[1].bits.addr @[Arbiter.scala 117:15]
    io.out.bits.way_en <= io.in[1].bits.way_en @[Arbiter.scala 117:15]
    when io.in[0].valid : @[Arbiter.scala 119:27]
      io.chosen <= UInt<1>("h00") @[Arbiter.scala 120:17]
      io.out.bits.data <= io.in[0].bits.data @[Arbiter.scala 121:19]
      io.out.bits.wmask <= io.in[0].bits.wmask @[Arbiter.scala 121:19]
      io.out.bits.addr <= io.in[0].bits.addr @[Arbiter.scala 121:19]
      io.out.bits.way_en <= io.in[0].bits.way_en @[Arbiter.scala 121:19]
      skip @[Arbiter.scala 119:27]
    node _T_47 = eq(io.in[0].valid, UInt<1>("h00")) @[Arbiter.scala 29:78]
    node _T_48 = and(UInt<1>("h01"), io.out.ready) @[Arbiter.scala 127:19]
    io.in[0].ready <= _T_48 @[Arbiter.scala 127:14]
    node _T_49 = and(_T_47, io.out.ready) @[Arbiter.scala 127:19]
    io.in[1].ready <= _T_49 @[Arbiter.scala 127:14]
    node _T_51 = eq(_T_47, UInt<1>("h00")) @[Arbiter.scala 128:19]
    node _T_52 = or(_T_51, io.in[1].valid) @[Arbiter.scala 128:31]
    io.out.valid <= _T_52 @[Arbiter.scala 128:16]
    
  module AMOALU : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip mask : UInt<8>, flip cmd : UInt<5>, flip lhs : UInt<64>, flip rhs : UInt<64>, out : UInt<64>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node _T_8 = eq(io.cmd, UInt<4>("h0d")) @[AMOALU.scala 61:20]
    node _T_10 = eq(io.cmd, UInt<4>("h0f")) @[AMOALU.scala 61:43]
    node max = or(_T_8, _T_10) @[AMOALU.scala 61:33]
    node _T_12 = eq(io.cmd, UInt<4>("h0c")) @[AMOALU.scala 62:20]
    node _T_14 = eq(io.cmd, UInt<4>("h0e")) @[AMOALU.scala 62:43]
    node min = or(_T_12, _T_14) @[AMOALU.scala 62:33]
    node add = eq(io.cmd, UInt<4>("h08")) @[AMOALU.scala 63:20]
    node _T_17 = eq(io.cmd, UInt<4>("h0a")) @[AMOALU.scala 64:26]
    node _T_19 = eq(io.cmd, UInt<4>("h0b")) @[AMOALU.scala 64:48]
    node logic_and = or(_T_17, _T_19) @[AMOALU.scala 64:38]
    node _T_21 = eq(io.cmd, UInt<4>("h09")) @[AMOALU.scala 65:26]
    node _T_23 = eq(io.cmd, UInt<4>("h0a")) @[AMOALU.scala 65:49]
    node logic_xor = or(_T_21, _T_23) @[AMOALU.scala 65:39]
    node _T_25 = not(UInt<64>("h00")) @[AMOALU.scala 70:18]
    node _T_26 = bits(io.mask, 3, 3) @[AMOALU.scala 70:41]
    node _T_28 = eq(_T_26, UInt<1>("h00")) @[AMOALU.scala 70:33]
    node _T_29 = shl(_T_28, 31) @[AMOALU.scala 70:45]
    node _T_30 = xor(_T_25, _T_29) @[AMOALU.scala 70:30]
    node _T_31 = and(io.lhs, _T_30) @[AMOALU.scala 71:15]
    node _T_32 = and(io.rhs, _T_30) @[AMOALU.scala 71:33]
    node _T_33 = add(_T_31, _T_32) @[AMOALU.scala 71:23]
    node adder_out = tail(_T_33, 1) @[AMOALU.scala 71:23]
    node _T_36 = xor(UInt<4>("h0c"), UInt<4>("h0e")) @[AMOALU.scala 76:27]
    node _T_37 = and(io.cmd, _T_36) @[AMOALU.scala 77:15]
    node _T_39 = and(UInt<4>("h0c"), _T_36) @[AMOALU.scala 77:37]
    node _T_40 = eq(_T_37, _T_39) @[AMOALU.scala 77:23]
    node _T_41 = bits(io.mask, 4, 4) @[AMOALU.scala 83:33]
    node _T_43 = eq(_T_41, UInt<1>("h00")) @[AMOALU.scala 83:25]
    node _T_44 = bits(io.lhs, 31, 31) @[AMOALU.scala 83:44]
    node _T_45 = bits(io.lhs, 63, 63) @[AMOALU.scala 83:56]
    node _T_46 = mux(_T_43, _T_44, _T_45) @[AMOALU.scala 83:24]
    node _T_47 = bits(io.mask, 4, 4) @[AMOALU.scala 84:33]
    node _T_49 = eq(_T_47, UInt<1>("h00")) @[AMOALU.scala 84:25]
    node _T_50 = bits(io.rhs, 31, 31) @[AMOALU.scala 84:44]
    node _T_51 = bits(io.rhs, 63, 63) @[AMOALU.scala 84:56]
    node _T_52 = mux(_T_49, _T_50, _T_51) @[AMOALU.scala 84:24]
    node _T_53 = bits(io.lhs, 31, 0) @[AMOALU.scala 85:25]
    node _T_54 = bits(io.rhs, 31, 0) @[AMOALU.scala 85:40]
    node _T_55 = lt(_T_53, _T_54) @[AMOALU.scala 85:32]
    node _T_56 = bits(io.lhs, 63, 32) @[AMOALU.scala 86:25]
    node _T_57 = bits(io.rhs, 63, 32) @[AMOALU.scala 86:41]
    node _T_58 = lt(_T_56, _T_57) @[AMOALU.scala 86:33]
    node _T_59 = bits(io.lhs, 63, 32) @[AMOALU.scala 87:25]
    node _T_60 = bits(io.rhs, 63, 32) @[AMOALU.scala 87:43]
    node _T_61 = eq(_T_59, _T_60) @[AMOALU.scala 87:33]
    node _T_62 = bits(io.mask, 4, 4) @[AMOALU.scala 89:20]
    node _T_63 = bits(io.mask, 3, 3) @[AMOALU.scala 89:34]
    node _T_64 = and(_T_62, _T_63) @[AMOALU.scala 89:24]
    node _T_65 = and(_T_61, _T_55) @[AMOALU.scala 89:54]
    node _T_66 = or(_T_58, _T_65) @[AMOALU.scala 89:45]
    node _T_67 = bits(io.mask, 4, 4) @[AMOALU.scala 90:20]
    node _T_68 = mux(_T_67, _T_58, _T_55) @[AMOALU.scala 90:12]
    node _T_69 = mux(_T_64, _T_66, _T_68) @[AMOALU.scala 89:12]
    node _T_70 = eq(_T_46, _T_52) @[AMOALU.scala 91:19]
    node _T_71 = mux(_T_40, _T_46, _T_52) @[AMOALU.scala 91:39]
    node less = mux(_T_70, _T_69, _T_71) @[AMOALU.scala 91:10]
    node _T_72 = mux(less, min, max) @[AMOALU.scala 95:23]
    node minmax = mux(_T_72, io.lhs, io.rhs) @[AMOALU.scala 95:19]
    node _T_73 = and(io.lhs, io.rhs) @[AMOALU.scala 97:27]
    node _T_75 = mux(logic_and, _T_73, UInt<1>("h00")) @[AMOALU.scala 97:8]
    node _T_76 = xor(io.lhs, io.rhs) @[AMOALU.scala 98:27]
    node _T_78 = mux(logic_xor, _T_76, UInt<1>("h00")) @[AMOALU.scala 98:8]
    node logic = or(_T_75, _T_78) @[AMOALU.scala 97:42]
    node _T_79 = or(logic_and, logic_xor) @[AMOALU.scala 101:19]
    node _T_80 = mux(_T_79, logic, minmax) @[AMOALU.scala 101:8]
    node out = mux(add, adder_out, _T_80) @[AMOALU.scala 100:8]
    node _T_81 = bits(io.mask, 0, 0) @[Bitwise.scala 27:51]
    node _T_82 = bits(io.mask, 1, 1) @[Bitwise.scala 27:51]
    node _T_83 = bits(io.mask, 2, 2) @[Bitwise.scala 27:51]
    node _T_84 = bits(io.mask, 3, 3) @[Bitwise.scala 27:51]
    node _T_85 = bits(io.mask, 4, 4) @[Bitwise.scala 27:51]
    node _T_86 = bits(io.mask, 5, 5) @[Bitwise.scala 27:51]
    node _T_87 = bits(io.mask, 6, 6) @[Bitwise.scala 27:51]
    node _T_88 = bits(io.mask, 7, 7) @[Bitwise.scala 27:51]
    node _T_89 = bits(_T_81, 0, 0) @[Bitwise.scala 72:15]
    node _T_92 = mux(_T_89, UInt<8>("h0ff"), UInt<8>("h00")) @[Bitwise.scala 72:12]
    node _T_93 = bits(_T_82, 0, 0) @[Bitwise.scala 72:15]
    node _T_96 = mux(_T_93, UInt<8>("h0ff"), UInt<8>("h00")) @[Bitwise.scala 72:12]
    node _T_97 = bits(_T_83, 0, 0) @[Bitwise.scala 72:15]
    node _T_100 = mux(_T_97, UInt<8>("h0ff"), UInt<8>("h00")) @[Bitwise.scala 72:12]
    node _T_101 = bits(_T_84, 0, 0) @[Bitwise.scala 72:15]
    node _T_104 = mux(_T_101, UInt<8>("h0ff"), UInt<8>("h00")) @[Bitwise.scala 72:12]
    node _T_105 = bits(_T_85, 0, 0) @[Bitwise.scala 72:15]
    node _T_108 = mux(_T_105, UInt<8>("h0ff"), UInt<8>("h00")) @[Bitwise.scala 72:12]
    node _T_109 = bits(_T_86, 0, 0) @[Bitwise.scala 72:15]
    node _T_112 = mux(_T_109, UInt<8>("h0ff"), UInt<8>("h00")) @[Bitwise.scala 72:12]
    node _T_113 = bits(_T_87, 0, 0) @[Bitwise.scala 72:15]
    node _T_116 = mux(_T_113, UInt<8>("h0ff"), UInt<8>("h00")) @[Bitwise.scala 72:12]
    node _T_117 = bits(_T_88, 0, 0) @[Bitwise.scala 72:15]
    node _T_120 = mux(_T_117, UInt<8>("h0ff"), UInt<8>("h00")) @[Bitwise.scala 72:12]
    node _T_121 = cat(_T_96, _T_92) @[Cat.scala 30:58]
    node _T_122 = cat(_T_104, _T_100) @[Cat.scala 30:58]
    node _T_123 = cat(_T_122, _T_121) @[Cat.scala 30:58]
    node _T_124 = cat(_T_112, _T_108) @[Cat.scala 30:58]
    node _T_125 = cat(_T_120, _T_116) @[Cat.scala 30:58]
    node _T_126 = cat(_T_125, _T_124) @[Cat.scala 30:58]
    node wmask = cat(_T_126, _T_123) @[Cat.scala 30:58]
    node _T_127 = and(wmask, out) @[AMOALU.scala 105:19]
    node _T_128 = not(wmask) @[AMOALU.scala 105:27]
    node _T_129 = and(_T_128, io.lhs) @[AMOALU.scala 105:34]
    node _T_130 = or(_T_127, _T_129) @[AMOALU.scala 105:25]
    io.out <= _T_130 @[AMOALU.scala 105:10]
    
  module Arbiter_11 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {tag : UInt<20>, idx : UInt<6>, source : UInt<2>, param : UInt<3>, way_en : UInt<4>, voluntary : UInt<1>}}[2], out : {flip ready : UInt<1>, valid : UInt<1>, bits : {tag : UInt<20>, idx : UInt<6>, source : UInt<2>, param : UInt<3>, way_en : UInt<4>, voluntary : UInt<1>}}, chosen : UInt<1>}
    
    io.chosen <= UInt<1>("h01") @[Arbiter.scala 116:13]
    io.out.bits.voluntary <= io.in[1].bits.voluntary @[Arbiter.scala 117:15]
    io.out.bits.way_en <= io.in[1].bits.way_en @[Arbiter.scala 117:15]
    io.out.bits.param <= io.in[1].bits.param @[Arbiter.scala 117:15]
    io.out.bits.source <= io.in[1].bits.source @[Arbiter.scala 117:15]
    io.out.bits.idx <= io.in[1].bits.idx @[Arbiter.scala 117:15]
    io.out.bits.tag <= io.in[1].bits.tag @[Arbiter.scala 117:15]
    when io.in[0].valid : @[Arbiter.scala 119:27]
      io.chosen <= UInt<1>("h00") @[Arbiter.scala 120:17]
      io.out.bits.voluntary <= io.in[0].bits.voluntary @[Arbiter.scala 121:19]
      io.out.bits.way_en <= io.in[0].bits.way_en @[Arbiter.scala 121:19]
      io.out.bits.param <= io.in[0].bits.param @[Arbiter.scala 121:19]
      io.out.bits.source <= io.in[0].bits.source @[Arbiter.scala 121:19]
      io.out.bits.idx <= io.in[0].bits.idx @[Arbiter.scala 121:19]
      io.out.bits.tag <= io.in[0].bits.tag @[Arbiter.scala 121:19]
      skip @[Arbiter.scala 119:27]
    node _T_47 = eq(io.in[0].valid, UInt<1>("h00")) @[Arbiter.scala 29:78]
    node _T_48 = and(UInt<1>("h01"), io.out.ready) @[Arbiter.scala 127:19]
    io.in[0].ready <= _T_48 @[Arbiter.scala 127:14]
    node _T_49 = and(_T_47, io.out.ready) @[Arbiter.scala 127:19]
    io.in[1].ready <= _T_49 @[Arbiter.scala 127:14]
    node _T_51 = eq(_T_47, UInt<1>("h00")) @[Arbiter.scala 128:19]
    node _T_52 = or(_T_51, io.in[1].valid) @[Arbiter.scala 128:31]
    io.out.valid <= _T_52 @[Arbiter.scala 128:16]
    
  module NonBlockingDCache : 
    input clock : Clock
    input reset : UInt<1>
    output auto : {out : {a : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<2>, address : UInt<32>, mask : UInt<8>, data : UInt<64>}}, flip b : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<2>, address : UInt<32>, mask : UInt<8>, data : UInt<64>}}, c : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<2>, address : UInt<32>, data : UInt<64>, error : UInt<1>}}, flip d : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<2>, sink : UInt<3>, data : UInt<64>, error : UInt<1>}}, e : {flip ready : UInt<1>, valid : UInt<1>, bits : {sink : UInt<3>}}}}
    output io : {flip hartid : UInt<1>, flip cpu : {req : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<40>, tag : UInt<7>, cmd : UInt<5>, typ : UInt<3>, phys : UInt<1>, data : UInt<64>}}, s1_kill : UInt<1>, s1_data : {data : UInt<64>, mask : UInt<8>}, flip s2_nack : UInt<1>, flip resp : {valid : UInt<1>, bits : {addr : UInt<40>, tag : UInt<7>, cmd : UInt<5>, typ : UInt<3>, data : UInt<64>, replay : UInt<1>, has_data : UInt<1>, data_word_bypass : UInt<64>, data_raw : UInt<64>, store_data : UInt<64>}}, flip replay_next : UInt<1>, flip s2_xcpt : {ma : {ld : UInt<1>, st : UInt<1>}, pf : {ld : UInt<1>, st : UInt<1>}, ae : {ld : UInt<1>, st : UInt<1>}}, invalidate_lr : UInt<1>, flip ordered : UInt<1>, flip perf : {acquire : UInt<1>, release : UInt<1>, tlbMiss : UInt<1>}}, ptw : {req : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<27>}}, flip resp : {valid : UInt<1>, bits : {ae : UInt<1>, pte : {ppn : UInt<54>, reserved_for_software : UInt<2>, d : UInt<1>, a : UInt<1>, g : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>, v : UInt<1>}, level : UInt<2>, homogeneous : UInt<1>}}, flip ptbr : {mode : UInt<4>, asid : UInt<16>, ppn : UInt<44>}, flip status : {debug : UInt<1>, isa : UInt<32>, dprv : UInt<2>, prv : UInt<2>, sd : UInt<1>, zero2 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, sd_rv32 : UInt<1>, zero1 : UInt<8>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, hpp : UInt<2>, spp : UInt<1>, mpie : UInt<1>, hpie : UInt<1>, spie : UInt<1>, upie : UInt<1>, mie : UInt<1>, hie : UInt<1>, sie : UInt<1>, uie : UInt<1>}, flip pmp : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>}[8]}, errors : {bus : {valid : UInt<1>, bits : UInt<32>}}}
    
    clock is invalid
    reset is invalid
    auto is invalid
    io is invalid
    wire tl_out : {a : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<2>, address : UInt<32>, mask : UInt<8>, data : UInt<64>}}, flip b : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<2>, address : UInt<32>, mask : UInt<8>, data : UInt<64>}}, c : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<2>, address : UInt<32>, data : UInt<64>, error : UInt<1>}}, flip d : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<2>, sink : UInt<3>, data : UInt<64>, error : UInt<1>}}, e : {flip ready : UInt<1>, valid : UInt<1>, bits : {sink : UInt<3>}}} @[Nodes.scala 334:76]
    tl_out is invalid @[Nodes.scala 334:76]
    auto.out <- tl_out @[LazyModule.scala 189:49]
    inst wb of WritebackUnit @[NBDcache.scala 674:18]
    wb.io is invalid
    wb.clock <= clock
    wb.reset <= reset
    inst prober of ProbeUnit @[NBDcache.scala 675:22]
    prober.io is invalid
    prober.clock <= clock
    prober.reset <= reset
    inst mshrs of MSHRFile @[NBDcache.scala 676:21]
    mshrs.io is invalid
    mshrs.clock <= clock
    mshrs.reset <= reset
    io.cpu.req.ready <= UInt<1>("h01") @[NBDcache.scala 678:20]
    node _T_154 = and(io.cpu.req.ready, io.cpu.req.valid) @[Decoupled.scala 30:37]
    reg s1_valid : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[NBDcache.scala 679:21]
    s1_valid <= _T_154 @[NBDcache.scala 679:21]
    reg s1_req : {addr : UInt<40>, tag : UInt<7>, cmd : UInt<5>, typ : UInt<3>, phys : UInt<1>, data : UInt<64>}, clock @[NBDcache.scala 680:19]
    node _T_158 = eq(io.cpu.s1_kill, UInt<1>("h00")) @[NBDcache.scala 681:37]
    node s1_valid_masked = and(s1_valid, _T_158) @[NBDcache.scala 681:34]
    reg s1_replay : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[NBDcache.scala 682:22]
    reg s1_clk_en : UInt<1>, clock @[NBDcache.scala 683:22]
    node s1_sfence = eq(s1_req.cmd, UInt<5>("h014")) @[NBDcache.scala 684:30]
    node _T_164 = eq(s1_sfence, UInt<1>("h00")) @[NBDcache.scala 686:46]
    node _T_165 = and(s1_valid_masked, _T_164) @[NBDcache.scala 686:43]
    reg _T_168 : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[NBDcache.scala 686:21]
    _T_168 <= _T_165 @[NBDcache.scala 686:21]
    node _T_169 = cat(io.cpu.s2_xcpt.pf.st, io.cpu.s2_xcpt.ae.ld) @[NBDcache.scala 686:95]
    node _T_170 = cat(_T_169, io.cpu.s2_xcpt.ae.st) @[NBDcache.scala 686:95]
    node _T_171 = cat(io.cpu.s2_xcpt.ma.ld, io.cpu.s2_xcpt.ma.st) @[NBDcache.scala 686:95]
    node _T_172 = cat(_T_171, io.cpu.s2_xcpt.pf.ld) @[NBDcache.scala 686:95]
    node _T_173 = cat(_T_172, _T_170) @[NBDcache.scala 686:95]
    node _T_175 = neq(_T_173, UInt<1>("h00")) @[NBDcache.scala 686:102]
    node _T_177 = eq(_T_175, UInt<1>("h00")) @[NBDcache.scala 686:79]
    node s2_valid = and(_T_168, _T_177) @[NBDcache.scala 686:76]
    reg s2_req : {addr : UInt<40>, tag : UInt<7>, cmd : UInt<5>, typ : UInt<3>, phys : UInt<1>, data : UInt<64>}, clock @[NBDcache.scala 687:19]
    reg _T_180 : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[NBDcache.scala 688:22]
    _T_180 <= s1_replay @[NBDcache.scala 688:22]
    node _T_182 = neq(s2_req.cmd, UInt<3>("h05")) @[NBDcache.scala 688:71]
    node s2_replay = and(_T_180, _T_182) @[NBDcache.scala 688:57]
    wire s2_recycle : UInt<1> @[NBDcache.scala 689:24]
    s2_recycle is invalid @[NBDcache.scala 689:24]
    wire s2_valid_masked : UInt<1> @[NBDcache.scala 690:29]
    s2_valid_masked is invalid @[NBDcache.scala 690:29]
    reg s3_valid : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[NBDcache.scala 692:21]
    reg s3_req : {addr : UInt<40>, tag : UInt<7>, cmd : UInt<5>, typ : UInt<3>, phys : UInt<1>, data : UInt<64>}, clock @[NBDcache.scala 693:19]
    reg s3_way : UInt, clock @[NBDcache.scala 694:19]
    reg s1_recycled : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Reg.scala 19:20]
    when s1_clk_en : @[Reg.scala 20:19]
      s1_recycled <= s2_recycle @[Reg.scala 20:23]
      skip @[Reg.scala 20:19]
    node _T_191 = eq(s1_req.cmd, UInt<1>("h00")) @[Consts.scala 93:31]
    node _T_193 = eq(s1_req.cmd, UInt<3>("h06")) @[Consts.scala 93:48]
    node _T_194 = or(_T_191, _T_193) @[Consts.scala 93:41]
    node _T_196 = eq(s1_req.cmd, UInt<3>("h07")) @[Consts.scala 93:65]
    node _T_197 = or(_T_194, _T_196) @[Consts.scala 93:58]
    node _T_202 = eq(s1_req.cmd, UInt<3>("h04")) @[package.scala 14:47]
    node _T_203 = eq(s1_req.cmd, UInt<4>("h09")) @[package.scala 14:47]
    node _T_204 = eq(s1_req.cmd, UInt<4>("h0a")) @[package.scala 14:47]
    node _T_205 = eq(s1_req.cmd, UInt<4>("h0b")) @[package.scala 14:47]
    node _T_206 = or(_T_202, _T_203) @[package.scala 14:62]
    node _T_207 = or(_T_206, _T_204) @[package.scala 14:62]
    node _T_208 = or(_T_207, _T_205) @[package.scala 14:62]
    node _T_214 = eq(s1_req.cmd, UInt<4>("h08")) @[package.scala 14:47]
    node _T_215 = eq(s1_req.cmd, UInt<4>("h0c")) @[package.scala 14:47]
    node _T_216 = eq(s1_req.cmd, UInt<4>("h0d")) @[package.scala 14:47]
    node _T_217 = eq(s1_req.cmd, UInt<4>("h0e")) @[package.scala 14:47]
    node _T_218 = eq(s1_req.cmd, UInt<4>("h0f")) @[package.scala 14:47]
    node _T_219 = or(_T_214, _T_215) @[package.scala 14:62]
    node _T_220 = or(_T_219, _T_216) @[package.scala 14:62]
    node _T_221 = or(_T_220, _T_217) @[package.scala 14:62]
    node _T_222 = or(_T_221, _T_218) @[package.scala 14:62]
    node _T_223 = or(_T_208, _T_222) @[Consts.scala 91:44]
    node s1_read = or(_T_197, _T_223) @[Consts.scala 93:75]
    node _T_225 = eq(s1_req.cmd, UInt<1>("h01")) @[Consts.scala 94:32]
    node _T_227 = eq(s1_req.cmd, UInt<5>("h011")) @[Consts.scala 94:49]
    node _T_228 = or(_T_225, _T_227) @[Consts.scala 94:42]
    node _T_230 = eq(s1_req.cmd, UInt<3>("h07")) @[Consts.scala 94:66]
    node _T_231 = or(_T_228, _T_230) @[Consts.scala 94:59]
    node _T_236 = eq(s1_req.cmd, UInt<3>("h04")) @[package.scala 14:47]
    node _T_237 = eq(s1_req.cmd, UInt<4>("h09")) @[package.scala 14:47]
    node _T_238 = eq(s1_req.cmd, UInt<4>("h0a")) @[package.scala 14:47]
    node _T_239 = eq(s1_req.cmd, UInt<4>("h0b")) @[package.scala 14:47]
    node _T_240 = or(_T_236, _T_237) @[package.scala 14:62]
    node _T_241 = or(_T_240, _T_238) @[package.scala 14:62]
    node _T_242 = or(_T_241, _T_239) @[package.scala 14:62]
    node _T_248 = eq(s1_req.cmd, UInt<4>("h08")) @[package.scala 14:47]
    node _T_249 = eq(s1_req.cmd, UInt<4>("h0c")) @[package.scala 14:47]
    node _T_250 = eq(s1_req.cmd, UInt<4>("h0d")) @[package.scala 14:47]
    node _T_251 = eq(s1_req.cmd, UInt<4>("h0e")) @[package.scala 14:47]
    node _T_252 = eq(s1_req.cmd, UInt<4>("h0f")) @[package.scala 14:47]
    node _T_253 = or(_T_248, _T_249) @[package.scala 14:62]
    node _T_254 = or(_T_253, _T_250) @[package.scala 14:62]
    node _T_255 = or(_T_254, _T_251) @[package.scala 14:62]
    node _T_256 = or(_T_255, _T_252) @[package.scala 14:62]
    node _T_257 = or(_T_242, _T_256) @[Consts.scala 91:44]
    node s1_write = or(_T_231, _T_257) @[Consts.scala 94:76]
    node _T_258 = or(s1_read, s1_write) @[NBDcache.scala 699:30]
    node _T_260 = eq(s1_req.cmd, UInt<2>("h02")) @[Consts.scala 92:35]
    node _T_262 = eq(s1_req.cmd, UInt<2>("h03")) @[Consts.scala 92:52]
    node _T_263 = or(_T_260, _T_262) @[Consts.scala 92:45]
    node s1_readwrite = or(_T_258, _T_263) @[NBDcache.scala 699:42]
    node _T_265 = eq(s1_valid, UInt<1>("h00")) @[NBDcache.scala 701:10]
    node _T_267 = eq(s1_req.cmd, UInt<5>("h011")) @[package.scala 14:47]
    node _T_269 = eq(_T_267, UInt<1>("h00")) @[NBDcache.scala 701:23]
    node _T_270 = or(_T_265, _T_269) @[NBDcache.scala 701:20]
    node _T_271 = bits(reset, 0, 0) @[NBDcache.scala 701:9]
    node _T_272 = or(_T_270, _T_271) @[NBDcache.scala 701:9]
    node _T_274 = eq(_T_272, UInt<1>("h00")) @[NBDcache.scala 701:9]
    when _T_274 : @[NBDcache.scala 701:9]
      printf(clock, UInt<1>(1), "Assertion failed\n    at NBDcache.scala:701 assert(!s1_valid || !s1_req.cmd.isOneOf(M_PWR))\n") @[NBDcache.scala 701:9]
      stop(clock, UInt<1>(1), 1) @[NBDcache.scala 701:9]
      skip @[NBDcache.scala 701:9]
    inst dtlb of TLB @[NBDcache.scala 703:20]
    dtlb.io is invalid
    dtlb.clock <= clock
    dtlb.reset <= reset
    io.ptw <- dtlb.io.ptw @[NBDcache.scala 704:10]
    node _T_276 = eq(io.cpu.s1_kill, UInt<1>("h00")) @[NBDcache.scala 705:36]
    node _T_277 = and(s1_valid, _T_276) @[NBDcache.scala 705:33]
    node _T_278 = or(s1_readwrite, s1_sfence) @[NBDcache.scala 705:69]
    node _T_279 = and(_T_277, _T_278) @[NBDcache.scala 705:52]
    dtlb.io.req.valid <= _T_279 @[NBDcache.scala 705:21]
    dtlb.io.req.bits.sfence.valid <= s1_sfence @[NBDcache.scala 706:33]
    node _T_280 = bits(s1_req.typ, 0, 0) @[NBDcache.scala 707:49]
    dtlb.io.req.bits.sfence.bits.rs1 <= _T_280 @[NBDcache.scala 707:36]
    node _T_281 = bits(s1_req.typ, 1, 1) @[NBDcache.scala 708:49]
    dtlb.io.req.bits.sfence.bits.rs2 <= _T_281 @[NBDcache.scala 708:36]
    dtlb.io.req.bits.sfence.bits.addr <= s1_req.addr @[NBDcache.scala 709:37]
    dtlb.io.req.bits.sfence.bits.asid <= io.cpu.s1_data.data @[NBDcache.scala 710:37]
    dtlb.io.req.bits.passthrough <= s1_req.phys @[NBDcache.scala 711:32]
    dtlb.io.req.bits.vaddr <= s1_req.addr @[NBDcache.scala 712:26]
    dtlb.io.req.bits.size <= s1_req.typ @[NBDcache.scala 713:25]
    dtlb.io.req.bits.cmd <= s1_req.cmd @[NBDcache.scala 714:24]
    node _T_283 = eq(dtlb.io.req.ready, UInt<1>("h00")) @[NBDcache.scala 715:9]
    node _T_285 = eq(io.cpu.req.bits.phys, UInt<1>("h00")) @[NBDcache.scala 715:31]
    node _T_286 = and(_T_283, _T_285) @[NBDcache.scala 715:28]
    when _T_286 : @[NBDcache.scala 715:54]
      io.cpu.req.ready <= UInt<1>("h00") @[NBDcache.scala 715:73]
      skip @[NBDcache.scala 715:54]
    when io.cpu.req.valid : @[NBDcache.scala 717:27]
      s1_req <- io.cpu.req.bits @[NBDcache.scala 718:12]
      skip @[NBDcache.scala 717:27]
    when wb.io.meta_read.valid : @[NBDcache.scala 720:32]
      node _T_288 = cat(wb.io.meta_read.bits.tag, wb.io.meta_read.bits.idx) @[Cat.scala 30:58]
      node _T_289 = shl(_T_288, 6) @[NBDcache.scala 721:76]
      s1_req.addr <= _T_289 @[NBDcache.scala 721:17]
      s1_req.phys <= UInt<1>("h01") @[NBDcache.scala 722:17]
      skip @[NBDcache.scala 720:32]
    when prober.io.meta_read.valid : @[NBDcache.scala 724:36]
      node _T_291 = cat(prober.io.meta_read.bits.tag, prober.io.meta_read.bits.idx) @[Cat.scala 30:58]
      node _T_292 = shl(_T_291, 6) @[NBDcache.scala 725:84]
      s1_req.addr <= _T_292 @[NBDcache.scala 725:17]
      s1_req.phys <= UInt<1>("h01") @[NBDcache.scala 726:17]
      skip @[NBDcache.scala 724:36]
    when mshrs.io.replay.valid : @[NBDcache.scala 728:32]
      s1_req <- mshrs.io.replay.bits @[NBDcache.scala 729:12]
      skip @[NBDcache.scala 728:32]
    when s2_recycle : @[NBDcache.scala 731:21]
      s1_req <- s2_req @[NBDcache.scala 732:12]
      skip @[NBDcache.scala 731:21]
    when s1_clk_en : @[NBDcache.scala 736:20]
      s2_req.typ <= s1_req.typ @[NBDcache.scala 737:16]
      s2_req.phys <= s1_req.phys @[NBDcache.scala 738:17]
      s2_req.addr <= dtlb.io.resp.paddr @[NBDcache.scala 739:17]
      when s1_write : @[NBDcache.scala 740:21]
        node _T_294 = mux(s1_replay, mshrs.io.replay.bits.data, io.cpu.s1_data.data) @[NBDcache.scala 741:25]
        s2_req.data <= _T_294 @[NBDcache.scala 741:19]
        skip @[NBDcache.scala 740:21]
      when s1_recycled : @[NBDcache.scala 743:24]
        s2_req.data <= s1_req.data @[NBDcache.scala 743:38]
        skip @[NBDcache.scala 743:24]
      s2_req.tag <= s1_req.tag @[NBDcache.scala 744:16]
      s2_req.cmd <= s1_req.cmd @[NBDcache.scala 745:16]
      skip @[NBDcache.scala 736:20]
    inst meta of L1MetadataArray @[NBDcache.scala 750:20]
    meta.io is invalid
    meta.clock <= clock
    meta.reset <= reset
    inst metaReadArb of Arbiter_7 @[NBDcache.scala 751:27]
    metaReadArb.io is invalid
    metaReadArb.clock <= clock
    metaReadArb.reset <= reset
    inst metaWriteArb of Arbiter_8 @[NBDcache.scala 752:28]
    metaWriteArb.io is invalid
    metaWriteArb.clock <= clock
    metaWriteArb.reset <= reset
    meta.io.read <- metaReadArb.io.out @[NBDcache.scala 753:16]
    meta.io.write <- metaWriteArb.io.out @[NBDcache.scala 754:17]
    inst data of DataArray @[NBDcache.scala 757:20]
    data.io is invalid
    data.clock <= clock
    data.reset <= reset
    inst readArb of Arbiter_9 @[NBDcache.scala 758:23]
    readArb.io is invalid
    readArb.clock <= clock
    readArb.reset <= reset
    inst writeArb of Arbiter_10 @[NBDcache.scala 759:24]
    writeArb.io is invalid
    writeArb.clock <= clock
    writeArb.reset <= reset
    data.io.write.valid <= writeArb.io.out.valid @[NBDcache.scala 760:23]
    writeArb.io.out.ready <= data.io.write.ready @[NBDcache.scala 761:25]
    data.io.write.bits <- writeArb.io.out.bits @[NBDcache.scala 762:22]
    node wdata_encoded_0 = bits(writeArb.io.out.bits.data, 63, 0) @[NBDcache.scala 763:88]
    data.io.write.bits.data <= wdata_encoded_0 @[NBDcache.scala 764:27]
    metaReadArb.io.in[4].valid <= io.cpu.req.valid @[NBDcache.scala 767:30]
    node _T_299 = shr(io.cpu.req.bits.addr, 6) @[NBDcache.scala 768:57]
    metaReadArb.io.in[4].bits.idx <= _T_299 @[NBDcache.scala 768:33]
    node _T_301 = eq(metaReadArb.io.in[4].ready, UInt<1>("h00")) @[NBDcache.scala 769:9]
    when _T_301 : @[NBDcache.scala 769:38]
      io.cpu.req.ready <= UInt<1>("h00") @[NBDcache.scala 769:57]
      skip @[NBDcache.scala 769:38]
    readArb.io.in[3].valid <= io.cpu.req.valid @[NBDcache.scala 772:26]
    readArb.io.in[3].bits.addr <= io.cpu.req.bits.addr @[NBDcache.scala 773:30]
    node _T_304 = not(UInt<4>("h00")) @[NBDcache.scala 774:35]
    readArb.io.in[3].bits.way_en <= _T_304 @[NBDcache.scala 774:32]
    node _T_306 = eq(readArb.io.in[3].ready, UInt<1>("h00")) @[NBDcache.scala 775:9]
    when _T_306 : @[NBDcache.scala 775:34]
      io.cpu.req.ready <= UInt<1>("h00") @[NBDcache.scala 775:53]
      skip @[NBDcache.scala 775:34]
    metaReadArb.io.in[0].valid <= s2_recycle @[NBDcache.scala 778:30]
    node _T_308 = shr(s2_req.addr, 6) @[NBDcache.scala 779:48]
    metaReadArb.io.in[0].bits.idx <= _T_308 @[NBDcache.scala 779:33]
    readArb.io.in[0].valid <= s2_recycle @[NBDcache.scala 780:26]
    readArb.io.in[0].bits.addr <= s2_req.addr @[NBDcache.scala 781:30]
    node _T_310 = not(UInt<4>("h00")) @[NBDcache.scala 782:35]
    readArb.io.in[0].bits.way_en <= _T_310 @[NBDcache.scala 782:32]
    node _T_311 = shr(dtlb.io.resp.paddr, 12) @[NBDcache.scala 786:75]
    node _T_312 = eq(meta.io.resp[0].tag, _T_311) @[NBDcache.scala 786:62]
    node _T_313 = shr(dtlb.io.resp.paddr, 12) @[NBDcache.scala 786:75]
    node _T_314 = eq(meta.io.resp[1].tag, _T_313) @[NBDcache.scala 786:62]
    node _T_315 = shr(dtlb.io.resp.paddr, 12) @[NBDcache.scala 786:75]
    node _T_316 = eq(meta.io.resp[2].tag, _T_315) @[NBDcache.scala 786:62]
    node _T_317 = shr(dtlb.io.resp.paddr, 12) @[NBDcache.scala 786:75]
    node _T_318 = eq(meta.io.resp[3].tag, _T_317) @[NBDcache.scala 786:62]
    wire _T_321 : UInt<1>[4] @[NBDcache.scala 785:43]
    _T_321 is invalid @[NBDcache.scala 785:43]
    _T_321[0] <= _T_312 @[NBDcache.scala 785:43]
    _T_321[1] <= _T_314 @[NBDcache.scala 785:43]
    _T_321[2] <= _T_316 @[NBDcache.scala 785:43]
    _T_321[3] <= _T_318 @[NBDcache.scala 785:43]
    node _T_328 = cat(_T_321[1], _T_321[0]) @[NBDcache.scala 786:90]
    node _T_329 = cat(_T_321[3], _T_321[2]) @[NBDcache.scala 786:90]
    node s1_tag_eq_way = cat(_T_329, _T_328) @[NBDcache.scala 786:90]
    node _T_330 = bits(s1_tag_eq_way, 0, 0) @[NBDcache.scala 787:58]
    node _T_332 = gt(meta.io.resp[0].coh.state, UInt<2>("h00")) @[Metadata.scala 50:45]
    node _T_333 = and(_T_330, _T_332) @[NBDcache.scala 787:62]
    node _T_334 = bits(s1_tag_eq_way, 1, 1) @[NBDcache.scala 787:58]
    node _T_336 = gt(meta.io.resp[1].coh.state, UInt<2>("h00")) @[Metadata.scala 50:45]
    node _T_337 = and(_T_334, _T_336) @[NBDcache.scala 787:62]
    node _T_338 = bits(s1_tag_eq_way, 2, 2) @[NBDcache.scala 787:58]
    node _T_340 = gt(meta.io.resp[2].coh.state, UInt<2>("h00")) @[Metadata.scala 50:45]
    node _T_341 = and(_T_338, _T_340) @[NBDcache.scala 787:62]
    node _T_342 = bits(s1_tag_eq_way, 3, 3) @[NBDcache.scala 787:58]
    node _T_344 = gt(meta.io.resp[3].coh.state, UInt<2>("h00")) @[Metadata.scala 50:45]
    node _T_345 = and(_T_342, _T_344) @[NBDcache.scala 787:62]
    wire _T_348 : UInt<1>[4] @[NBDcache.scala 785:43]
    _T_348 is invalid @[NBDcache.scala 785:43]
    _T_348[0] <= _T_333 @[NBDcache.scala 785:43]
    _T_348[1] <= _T_337 @[NBDcache.scala 785:43]
    _T_348[2] <= _T_341 @[NBDcache.scala 785:43]
    _T_348[3] <= _T_345 @[NBDcache.scala 785:43]
    node _T_355 = cat(_T_348[1], _T_348[0]) @[NBDcache.scala 787:96]
    node _T_356 = cat(_T_348[3], _T_348[2]) @[NBDcache.scala 787:96]
    node s1_tag_match_way = cat(_T_356, _T_355) @[NBDcache.scala 787:96]
    s1_clk_en <= metaReadArb.io.out.valid @[NBDcache.scala 788:13]
    node _T_358 = eq(s1_valid, UInt<1>("h00")) @[NBDcache.scala 789:35]
    node _T_359 = and(s1_clk_en, _T_358) @[NBDcache.scala 789:32]
    node _T_361 = eq(s1_replay, UInt<1>("h00")) @[NBDcache.scala 789:48]
    node s1_writeback = and(_T_359, _T_361) @[NBDcache.scala 789:45]
    reg s2_tag_match_way : UInt<4>, clock @[Reg.scala 11:16]
    when s1_clk_en : @[Reg.scala 12:19]
      s2_tag_match_way <= s1_tag_match_way @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node s2_tag_match = neq(s2_tag_match_way, UInt<1>("h00")) @[NBDcache.scala 791:39]
    reg _T_365 : {state : UInt<2>}, clock @[Reg.scala 11:16]
    when s1_clk_en : @[Reg.scala 12:19]
      _T_365.state <= meta.io.resp[0].coh.state @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_367 : {state : UInt<2>}, clock @[Reg.scala 11:16]
    when s1_clk_en : @[Reg.scala 12:19]
      _T_367.state <= meta.io.resp[1].coh.state @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_369 : {state : UInt<2>}, clock @[Reg.scala 11:16]
    when s1_clk_en : @[Reg.scala 12:19]
      _T_369.state <= meta.io.resp[2].coh.state @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    reg _T_371 : {state : UInt<2>}, clock @[Reg.scala 11:16]
    when s1_clk_en : @[Reg.scala 12:19]
      _T_371.state <= meta.io.resp[3].coh.state @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    wire _T_374 : {state : UInt<2>}[4] @[NBDcache.scala 785:43]
    _T_374 is invalid @[NBDcache.scala 785:43]
    _T_374[0] <- _T_365 @[NBDcache.scala 785:43]
    _T_374[1] <- _T_367 @[NBDcache.scala 785:43]
    _T_374[2] <- _T_369 @[NBDcache.scala 785:43]
    _T_374[3] <- _T_371 @[NBDcache.scala 785:43]
    node _T_381 = bits(s2_tag_match_way, 0, 0) @[Mux.scala 21:36]
    node _T_382 = bits(s2_tag_match_way, 1, 1) @[Mux.scala 21:36]
    node _T_383 = bits(s2_tag_match_way, 2, 2) @[Mux.scala 21:36]
    node _T_384 = bits(s2_tag_match_way, 3, 3) @[Mux.scala 21:36]
    node _T_387 = mux(_T_381, _T_374[0].state, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_389 = mux(_T_382, _T_374[1].state, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_391 = mux(_T_383, _T_374[2].state, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_393 = mux(_T_384, _T_374[3].state, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_394 = or(_T_387, _T_389) @[Mux.scala 19:72]
    node _T_395 = or(_T_394, _T_391) @[Mux.scala 19:72]
    node _T_396 = or(_T_395, _T_393) @[Mux.scala 19:72]
    wire s2_hit_state : {state : UInt<2>} @[Mux.scala 19:72]
    wire _T_399 : UInt<2>
    _T_399 <= _T_396
    node _T_400 = bits(_T_399, 1, 0) @[Mux.scala 19:72]
    s2_hit_state.state <= _T_400 @[Mux.scala 19:72]
    node _T_402 = eq(s2_req.cmd, UInt<1>("h01")) @[Consts.scala 94:32]
    node _T_404 = eq(s2_req.cmd, UInt<5>("h011")) @[Consts.scala 94:49]
    node _T_405 = or(_T_402, _T_404) @[Consts.scala 94:42]
    node _T_407 = eq(s2_req.cmd, UInt<3>("h07")) @[Consts.scala 94:66]
    node _T_408 = or(_T_405, _T_407) @[Consts.scala 94:59]
    node _T_413 = eq(s2_req.cmd, UInt<3>("h04")) @[package.scala 14:47]
    node _T_414 = eq(s2_req.cmd, UInt<4>("h09")) @[package.scala 14:47]
    node _T_415 = eq(s2_req.cmd, UInt<4>("h0a")) @[package.scala 14:47]
    node _T_416 = eq(s2_req.cmd, UInt<4>("h0b")) @[package.scala 14:47]
    node _T_417 = or(_T_413, _T_414) @[package.scala 14:62]
    node _T_418 = or(_T_417, _T_415) @[package.scala 14:62]
    node _T_419 = or(_T_418, _T_416) @[package.scala 14:62]
    node _T_425 = eq(s2_req.cmd, UInt<4>("h08")) @[package.scala 14:47]
    node _T_426 = eq(s2_req.cmd, UInt<4>("h0c")) @[package.scala 14:47]
    node _T_427 = eq(s2_req.cmd, UInt<4>("h0d")) @[package.scala 14:47]
    node _T_428 = eq(s2_req.cmd, UInt<4>("h0e")) @[package.scala 14:47]
    node _T_429 = eq(s2_req.cmd, UInt<4>("h0f")) @[package.scala 14:47]
    node _T_430 = or(_T_425, _T_426) @[package.scala 14:62]
    node _T_431 = or(_T_430, _T_427) @[package.scala 14:62]
    node _T_432 = or(_T_431, _T_428) @[package.scala 14:62]
    node _T_433 = or(_T_432, _T_429) @[package.scala 14:62]
    node _T_434 = or(_T_419, _T_433) @[Consts.scala 91:44]
    node _T_435 = or(_T_408, _T_434) @[Consts.scala 94:76]
    node _T_437 = eq(s2_req.cmd, UInt<1>("h01")) @[Consts.scala 94:32]
    node _T_439 = eq(s2_req.cmd, UInt<5>("h011")) @[Consts.scala 94:49]
    node _T_440 = or(_T_437, _T_439) @[Consts.scala 94:42]
    node _T_442 = eq(s2_req.cmd, UInt<3>("h07")) @[Consts.scala 94:66]
    node _T_443 = or(_T_440, _T_442) @[Consts.scala 94:59]
    node _T_448 = eq(s2_req.cmd, UInt<3>("h04")) @[package.scala 14:47]
    node _T_449 = eq(s2_req.cmd, UInt<4>("h09")) @[package.scala 14:47]
    node _T_450 = eq(s2_req.cmd, UInt<4>("h0a")) @[package.scala 14:47]
    node _T_451 = eq(s2_req.cmd, UInt<4>("h0b")) @[package.scala 14:47]
    node _T_452 = or(_T_448, _T_449) @[package.scala 14:62]
    node _T_453 = or(_T_452, _T_450) @[package.scala 14:62]
    node _T_454 = or(_T_453, _T_451) @[package.scala 14:62]
    node _T_460 = eq(s2_req.cmd, UInt<4>("h08")) @[package.scala 14:47]
    node _T_461 = eq(s2_req.cmd, UInt<4>("h0c")) @[package.scala 14:47]
    node _T_462 = eq(s2_req.cmd, UInt<4>("h0d")) @[package.scala 14:47]
    node _T_463 = eq(s2_req.cmd, UInt<4>("h0e")) @[package.scala 14:47]
    node _T_464 = eq(s2_req.cmd, UInt<4>("h0f")) @[package.scala 14:47]
    node _T_465 = or(_T_460, _T_461) @[package.scala 14:62]
    node _T_466 = or(_T_465, _T_462) @[package.scala 14:62]
    node _T_467 = or(_T_466, _T_463) @[package.scala 14:62]
    node _T_468 = or(_T_467, _T_464) @[package.scala 14:62]
    node _T_469 = or(_T_454, _T_468) @[Consts.scala 91:44]
    node _T_470 = or(_T_443, _T_469) @[Consts.scala 94:76]
    node _T_472 = eq(s2_req.cmd, UInt<2>("h03")) @[Consts.scala 95:54]
    node _T_473 = or(_T_470, _T_472) @[Consts.scala 95:47]
    node _T_475 = eq(s2_req.cmd, UInt<3>("h06")) @[Consts.scala 95:71]
    node _T_476 = or(_T_473, _T_475) @[Consts.scala 95:64]
    node _T_477 = cat(_T_435, _T_476) @[Cat.scala 30:58]
    node _T_478 = cat(_T_477, s2_hit_state.state) @[Cat.scala 30:58]
    node _T_483 = cat(UInt<1>("h00"), UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_485 = cat(_T_483, UInt<2>("h03")) @[Cat.scala 30:58]
    node _T_490 = cat(UInt<1>("h00"), UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_492 = cat(_T_490, UInt<2>("h02")) @[Cat.scala 30:58]
    node _T_497 = cat(UInt<1>("h00"), UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_499 = cat(_T_497, UInt<2>("h01")) @[Cat.scala 30:58]
    node _T_504 = cat(UInt<1>("h00"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_506 = cat(_T_504, UInt<2>("h03")) @[Cat.scala 30:58]
    node _T_511 = cat(UInt<1>("h00"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_513 = cat(_T_511, UInt<2>("h02")) @[Cat.scala 30:58]
    node _T_518 = cat(UInt<1>("h01"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_520 = cat(_T_518, UInt<2>("h03")) @[Cat.scala 30:58]
    node _T_525 = cat(UInt<1>("h01"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_527 = cat(_T_525, UInt<2>("h02")) @[Cat.scala 30:58]
    node _T_532 = cat(UInt<1>("h00"), UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_534 = cat(_T_532, UInt<2>("h00")) @[Cat.scala 30:58]
    node _T_539 = cat(UInt<1>("h00"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_541 = cat(_T_539, UInt<2>("h01")) @[Cat.scala 30:58]
    node _T_546 = cat(UInt<1>("h00"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_548 = cat(_T_546, UInt<2>("h00")) @[Cat.scala 30:58]
    node _T_553 = cat(UInt<1>("h01"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_555 = cat(_T_553, UInt<2>("h01")) @[Cat.scala 30:58]
    node _T_560 = cat(UInt<1>("h01"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_562 = cat(_T_560, UInt<2>("h00")) @[Cat.scala 30:58]
    node _T_565 = eq(_T_562, _T_478) @[Misc.scala 87:20]
    node _T_566 = mux(_T_565, UInt<1>("h00"), UInt<1>("h00")) @[Misc.scala 73:9]
    node _T_567 = mux(_T_565, UInt<2>("h01"), UInt<1>("h00")) @[Misc.scala 73:36]
    node _T_568 = eq(_T_555, _T_478) @[Misc.scala 87:20]
    node _T_569 = mux(_T_568, UInt<1>("h00"), _T_566) @[Misc.scala 73:9]
    node _T_570 = mux(_T_568, UInt<2>("h02"), _T_567) @[Misc.scala 73:36]
    node _T_571 = eq(_T_548, _T_478) @[Misc.scala 87:20]
    node _T_572 = mux(_T_571, UInt<1>("h00"), _T_569) @[Misc.scala 73:9]
    node _T_573 = mux(_T_571, UInt<2>("h01"), _T_570) @[Misc.scala 73:36]
    node _T_574 = eq(_T_541, _T_478) @[Misc.scala 87:20]
    node _T_575 = mux(_T_574, UInt<1>("h00"), _T_572) @[Misc.scala 73:9]
    node _T_576 = mux(_T_574, UInt<2>("h02"), _T_573) @[Misc.scala 73:36]
    node _T_577 = eq(_T_534, _T_478) @[Misc.scala 87:20]
    node _T_578 = mux(_T_577, UInt<1>("h00"), _T_575) @[Misc.scala 73:9]
    node _T_579 = mux(_T_577, UInt<2>("h00"), _T_576) @[Misc.scala 73:36]
    node _T_580 = eq(_T_527, _T_478) @[Misc.scala 87:20]
    node _T_581 = mux(_T_580, UInt<1>("h01"), _T_578) @[Misc.scala 73:9]
    node _T_582 = mux(_T_580, UInt<2>("h03"), _T_579) @[Misc.scala 73:36]
    node _T_583 = eq(_T_520, _T_478) @[Misc.scala 87:20]
    node _T_584 = mux(_T_583, UInt<1>("h01"), _T_581) @[Misc.scala 73:9]
    node _T_585 = mux(_T_583, UInt<2>("h03"), _T_582) @[Misc.scala 73:36]
    node _T_586 = eq(_T_513, _T_478) @[Misc.scala 87:20]
    node _T_587 = mux(_T_586, UInt<1>("h01"), _T_584) @[Misc.scala 73:9]
    node _T_588 = mux(_T_586, UInt<2>("h02"), _T_585) @[Misc.scala 73:36]
    node _T_589 = eq(_T_506, _T_478) @[Misc.scala 87:20]
    node _T_590 = mux(_T_589, UInt<1>("h01"), _T_587) @[Misc.scala 73:9]
    node _T_591 = mux(_T_589, UInt<2>("h03"), _T_588) @[Misc.scala 73:36]
    node _T_592 = eq(_T_499, _T_478) @[Misc.scala 87:20]
    node _T_593 = mux(_T_592, UInt<1>("h01"), _T_590) @[Misc.scala 73:9]
    node _T_594 = mux(_T_592, UInt<2>("h01"), _T_591) @[Misc.scala 73:36]
    node _T_595 = eq(_T_492, _T_478) @[Misc.scala 87:20]
    node _T_596 = mux(_T_595, UInt<1>("h01"), _T_593) @[Misc.scala 73:9]
    node _T_597 = mux(_T_595, UInt<2>("h02"), _T_594) @[Misc.scala 73:36]
    node _T_598 = eq(_T_485, _T_478) @[Misc.scala 87:20]
    node s2_has_permission = mux(_T_598, UInt<1>("h01"), _T_596) @[Misc.scala 73:9]
    node _T_599 = mux(_T_598, UInt<2>("h03"), _T_597) @[Misc.scala 73:36]
    wire s2_new_hit_state : {state : UInt<2>} @[Metadata.scala 160:20]
    s2_new_hit_state is invalid @[Metadata.scala 160:20]
    s2_new_hit_state.state <= _T_599 @[Metadata.scala 161:16]
    node _T_601 = and(s2_tag_match, s2_has_permission) @[NBDcache.scala 794:29]
    node _T_602 = eq(s2_hit_state.state, s2_new_hit_state.state) @[Metadata.scala 46:46]
    node s2_hit = and(_T_601, _T_602) @[NBDcache.scala 794:50]
    reg lrsc_count : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[NBDcache.scala 797:23]
    node lrsc_valid = gt(lrsc_count, UInt<2>("h03")) @[NBDcache.scala 798:31]
    reg lrsc_addr : UInt, clock @[NBDcache.scala 799:22]
    node s2_lr = eq(s2_req.cmd, UInt<3>("h06")) @[NBDcache.scala 800:36]
    node s2_sc = eq(s2_req.cmd, UInt<3>("h07")) @[NBDcache.scala 800:58]
    node _T_609 = shr(s2_req.addr, 6) @[NBDcache.scala 801:69]
    node _T_610 = eq(lrsc_addr, _T_609) @[NBDcache.scala 801:52]
    node s2_lrsc_addr_match = and(lrsc_valid, _T_610) @[NBDcache.scala 801:39]
    node _T_612 = eq(s2_lrsc_addr_match, UInt<1>("h00")) @[NBDcache.scala 802:29]
    node s2_sc_fail = and(s2_sc, _T_612) @[NBDcache.scala 802:26]
    node _T_614 = gt(lrsc_count, UInt<1>("h00")) @[NBDcache.scala 803:20]
    when _T_614 : @[NBDcache.scala 803:25]
      node _T_616 = sub(lrsc_count, UInt<1>("h01")) @[NBDcache.scala 803:52]
      node _T_617 = asUInt(_T_616) @[NBDcache.scala 803:52]
      node _T_618 = tail(_T_617, 1) @[NBDcache.scala 803:52]
      lrsc_count <= _T_618 @[NBDcache.scala 803:38]
      skip @[NBDcache.scala 803:25]
    node _T_619 = and(s2_valid_masked, s2_hit) @[NBDcache.scala 804:25]
    node _T_620 = or(_T_619, s2_replay) @[NBDcache.scala 804:35]
    when _T_620 : @[NBDcache.scala 804:49]
      when s2_lr : @[NBDcache.scala 805:18]
        lrsc_count <= UInt<5>("h01f") @[NBDcache.scala 806:18]
        node _T_622 = shr(s2_req.addr, 6) @[NBDcache.scala 807:32]
        lrsc_addr <= _T_622 @[NBDcache.scala 807:17]
        skip @[NBDcache.scala 805:18]
      node _T_624 = gt(lrsc_count, UInt<1>("h00")) @[NBDcache.scala 809:22]
      when _T_624 : @[NBDcache.scala 809:27]
        lrsc_count <= UInt<1>("h00") @[NBDcache.scala 810:18]
        skip @[NBDcache.scala 809:27]
      skip @[NBDcache.scala 804:49]
    when io.cpu.invalidate_lr : @[NBDcache.scala 813:31]
      lrsc_count <= UInt<1>("h00") @[NBDcache.scala 813:44]
      skip @[NBDcache.scala 813:31]
    wire s2_data : UInt<64>[4] @[NBDcache.scala 815:21]
    s2_data is invalid @[NBDcache.scala 815:21]
    reg _T_639 : UInt<64>[1], clock @[NBDcache.scala 817:19]
    node _T_643 = bits(s1_tag_eq_way, 0, 0) @[NBDcache.scala 818:41]
    node _T_644 = and(s1_clk_en, _T_643) @[NBDcache.scala 818:25]
    node _T_648 = eq(UInt<1>("h01"), UInt<1>("h00")) @[NBDcache.scala 820:41]
    node _T_649 = or(UInt<1>("h01"), _T_648) @[NBDcache.scala 820:38]
    node _T_650 = or(_T_649, s1_writeback) @[NBDcache.scala 820:62]
    node _T_651 = and(_T_644, _T_650) @[NBDcache.scala 820:20]
    when _T_651 : @[NBDcache.scala 821:17]
      node _T_652 = shr(data.io.resp[0], 0) @[NBDcache.scala 821:46]
      _T_639[0] <= _T_652 @[NBDcache.scala 821:27]
      skip @[NBDcache.scala 821:17]
    s2_data[0] <= _T_639[0] @[NBDcache.scala 823:16]
    reg _T_656 : UInt<64>[1], clock @[NBDcache.scala 817:19]
    node _T_660 = bits(s1_tag_eq_way, 1, 1) @[NBDcache.scala 818:41]
    node _T_661 = and(s1_clk_en, _T_660) @[NBDcache.scala 818:25]
    node _T_665 = eq(UInt<1>("h01"), UInt<1>("h00")) @[NBDcache.scala 820:41]
    node _T_666 = or(UInt<1>("h01"), _T_665) @[NBDcache.scala 820:38]
    node _T_667 = or(_T_666, s1_writeback) @[NBDcache.scala 820:62]
    node _T_668 = and(_T_661, _T_667) @[NBDcache.scala 820:20]
    when _T_668 : @[NBDcache.scala 821:17]
      node _T_669 = shr(data.io.resp[1], 0) @[NBDcache.scala 821:46]
      _T_656[0] <= _T_669 @[NBDcache.scala 821:27]
      skip @[NBDcache.scala 821:17]
    s2_data[1] <= _T_656[0] @[NBDcache.scala 823:16]
    reg _T_673 : UInt<64>[1], clock @[NBDcache.scala 817:19]
    node _T_677 = bits(s1_tag_eq_way, 2, 2) @[NBDcache.scala 818:41]
    node _T_678 = and(s1_clk_en, _T_677) @[NBDcache.scala 818:25]
    node _T_682 = eq(UInt<1>("h01"), UInt<1>("h00")) @[NBDcache.scala 820:41]
    node _T_683 = or(UInt<1>("h01"), _T_682) @[NBDcache.scala 820:38]
    node _T_684 = or(_T_683, s1_writeback) @[NBDcache.scala 820:62]
    node _T_685 = and(_T_678, _T_684) @[NBDcache.scala 820:20]
    when _T_685 : @[NBDcache.scala 821:17]
      node _T_686 = shr(data.io.resp[2], 0) @[NBDcache.scala 821:46]
      _T_673[0] <= _T_686 @[NBDcache.scala 821:27]
      skip @[NBDcache.scala 821:17]
    s2_data[2] <= _T_673[0] @[NBDcache.scala 823:16]
    reg _T_690 : UInt<64>[1], clock @[NBDcache.scala 817:19]
    node _T_694 = bits(s1_tag_eq_way, 3, 3) @[NBDcache.scala 818:41]
    node _T_695 = and(s1_clk_en, _T_694) @[NBDcache.scala 818:25]
    node _T_699 = eq(UInt<1>("h01"), UInt<1>("h00")) @[NBDcache.scala 820:41]
    node _T_700 = or(UInt<1>("h01"), _T_699) @[NBDcache.scala 820:38]
    node _T_701 = or(_T_700, s1_writeback) @[NBDcache.scala 820:62]
    node _T_702 = and(_T_695, _T_701) @[NBDcache.scala 820:20]
    when _T_702 : @[NBDcache.scala 821:17]
      node _T_703 = shr(data.io.resp[3], 0) @[NBDcache.scala 821:46]
      _T_690[0] <= _T_703 @[NBDcache.scala 821:27]
      skip @[NBDcache.scala 821:17]
    s2_data[3] <= _T_690[0] @[NBDcache.scala 823:16]
    node _T_704 = bits(s2_tag_match_way, 0, 0) @[Mux.scala 21:36]
    node _T_705 = bits(s2_tag_match_way, 1, 1) @[Mux.scala 21:36]
    node _T_706 = bits(s2_tag_match_way, 2, 2) @[Mux.scala 21:36]
    node _T_707 = bits(s2_tag_match_way, 3, 3) @[Mux.scala 21:36]
    node _T_710 = mux(_T_704, s2_data[0], UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_712 = mux(_T_705, s2_data[1], UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_714 = mux(_T_706, s2_data[2], UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_716 = mux(_T_707, s2_data[3], UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_717 = or(_T_710, _T_712) @[Mux.scala 19:72]
    node _T_718 = or(_T_717, _T_714) @[Mux.scala 19:72]
    node _T_719 = or(_T_718, _T_716) @[Mux.scala 19:72]
    wire s2_data_muxed : UInt<64> @[Mux.scala 19:72]
    s2_data_muxed <= _T_719 @[Mux.scala 19:72]
    node s2_data_corrected = bits(s2_data_muxed, 63, 0) @[NBDcache.scala 826:78]
    node _T_722 = dshr(UInt<1>("h00"), UInt<1>("h00")) @[NBDcache.scala 830:72]
    node s2_data_correctable = bits(_T_722, 0, 0) @[NBDcache.scala 830:72]
    node _T_723 = and(s2_valid_masked, s2_hit) @[NBDcache.scala 833:32]
    node _T_724 = or(_T_723, s2_replay) @[NBDcache.scala 833:42]
    node _T_726 = eq(s2_sc_fail, UInt<1>("h00")) @[NBDcache.scala 833:59]
    node _T_727 = and(_T_724, _T_726) @[NBDcache.scala 833:56]
    node _T_729 = eq(s2_req.cmd, UInt<1>("h01")) @[Consts.scala 94:32]
    node _T_731 = eq(s2_req.cmd, UInt<5>("h011")) @[Consts.scala 94:49]
    node _T_732 = or(_T_729, _T_731) @[Consts.scala 94:42]
    node _T_734 = eq(s2_req.cmd, UInt<3>("h07")) @[Consts.scala 94:66]
    node _T_735 = or(_T_732, _T_734) @[Consts.scala 94:59]
    node _T_740 = eq(s2_req.cmd, UInt<3>("h04")) @[package.scala 14:47]
    node _T_741 = eq(s2_req.cmd, UInt<4>("h09")) @[package.scala 14:47]
    node _T_742 = eq(s2_req.cmd, UInt<4>("h0a")) @[package.scala 14:47]
    node _T_743 = eq(s2_req.cmd, UInt<4>("h0b")) @[package.scala 14:47]
    node _T_744 = or(_T_740, _T_741) @[package.scala 14:62]
    node _T_745 = or(_T_744, _T_742) @[package.scala 14:62]
    node _T_746 = or(_T_745, _T_743) @[package.scala 14:62]
    node _T_752 = eq(s2_req.cmd, UInt<4>("h08")) @[package.scala 14:47]
    node _T_753 = eq(s2_req.cmd, UInt<4>("h0c")) @[package.scala 14:47]
    node _T_754 = eq(s2_req.cmd, UInt<4>("h0d")) @[package.scala 14:47]
    node _T_755 = eq(s2_req.cmd, UInt<4>("h0e")) @[package.scala 14:47]
    node _T_756 = eq(s2_req.cmd, UInt<4>("h0f")) @[package.scala 14:47]
    node _T_757 = or(_T_752, _T_753) @[package.scala 14:62]
    node _T_758 = or(_T_757, _T_754) @[package.scala 14:62]
    node _T_759 = or(_T_758, _T_755) @[package.scala 14:62]
    node _T_760 = or(_T_759, _T_756) @[package.scala 14:62]
    node _T_761 = or(_T_746, _T_760) @[Consts.scala 91:44]
    node _T_762 = or(_T_735, _T_761) @[Consts.scala 94:76]
    node _T_763 = and(_T_727, _T_762) @[NBDcache.scala 833:71]
    s3_valid <= _T_763 @[NBDcache.scala 833:12]
    inst amoalu of AMOALU @[NBDcache.scala 834:22]
    amoalu.io is invalid
    amoalu.clock <= clock
    amoalu.reset <= reset
    node _T_764 = or(s2_valid, s2_replay) @[NBDcache.scala 835:19]
    node _T_766 = eq(s2_req.cmd, UInt<1>("h01")) @[Consts.scala 94:32]
    node _T_768 = eq(s2_req.cmd, UInt<5>("h011")) @[Consts.scala 94:49]
    node _T_769 = or(_T_766, _T_768) @[Consts.scala 94:42]
    node _T_771 = eq(s2_req.cmd, UInt<3>("h07")) @[Consts.scala 94:66]
    node _T_772 = or(_T_769, _T_771) @[Consts.scala 94:59]
    node _T_777 = eq(s2_req.cmd, UInt<3>("h04")) @[package.scala 14:47]
    node _T_778 = eq(s2_req.cmd, UInt<4>("h09")) @[package.scala 14:47]
    node _T_779 = eq(s2_req.cmd, UInt<4>("h0a")) @[package.scala 14:47]
    node _T_780 = eq(s2_req.cmd, UInt<4>("h0b")) @[package.scala 14:47]
    node _T_781 = or(_T_777, _T_778) @[package.scala 14:62]
    node _T_782 = or(_T_781, _T_779) @[package.scala 14:62]
    node _T_783 = or(_T_782, _T_780) @[package.scala 14:62]
    node _T_789 = eq(s2_req.cmd, UInt<4>("h08")) @[package.scala 14:47]
    node _T_790 = eq(s2_req.cmd, UInt<4>("h0c")) @[package.scala 14:47]
    node _T_791 = eq(s2_req.cmd, UInt<4>("h0d")) @[package.scala 14:47]
    node _T_792 = eq(s2_req.cmd, UInt<4>("h0e")) @[package.scala 14:47]
    node _T_793 = eq(s2_req.cmd, UInt<4>("h0f")) @[package.scala 14:47]
    node _T_794 = or(_T_789, _T_790) @[package.scala 14:62]
    node _T_795 = or(_T_794, _T_791) @[package.scala 14:62]
    node _T_796 = or(_T_795, _T_792) @[package.scala 14:62]
    node _T_797 = or(_T_796, _T_793) @[package.scala 14:62]
    node _T_798 = or(_T_783, _T_797) @[Consts.scala 91:44]
    node _T_799 = or(_T_772, _T_798) @[Consts.scala 94:76]
    node _T_800 = or(_T_799, s2_data_correctable) @[NBDcache.scala 835:57]
    node _T_801 = and(_T_764, _T_800) @[NBDcache.scala 835:33]
    when _T_801 : @[NBDcache.scala 835:82]
      s3_req <- s2_req @[NBDcache.scala 836:12]
      node _T_802 = mux(s2_data_correctable, s2_data_corrected, amoalu.io.out) @[NBDcache.scala 837:23]
      s3_req.data <= _T_802 @[NBDcache.scala 837:17]
      s3_way <= s2_tag_match_way @[NBDcache.scala 838:12]
      skip @[NBDcache.scala 835:82]
    writeArb.io.in[0].bits.addr <= s3_req.addr @[NBDcache.scala 841:31]
    node _T_805 = dshl(UInt<1>("h01"), UInt<1>("h00")) @[OneHot.scala 45:35]
    writeArb.io.in[0].bits.wmask <= _T_805 @[NBDcache.scala 842:32]
    writeArb.io.in[0].bits.data <= s3_req.data @[NBDcache.scala 843:31]
    writeArb.io.in[0].valid <= s3_valid @[NBDcache.scala 844:27]
    writeArb.io.in[0].bits.way_en <= s3_way @[NBDcache.scala 845:33]
    wire _T_807 : UInt<1> @[Replacement.scala 15:29]
    _T_807 is invalid @[Replacement.scala 15:29]
    _T_807 <= UInt<1>("h00") @[Replacement.scala 16:11]
    reg _T_811 : UInt<16>, clock with : (reset => (reset, UInt<16>("h01"))) @[LFSR.scala 22:23]
    when _T_807 : @[LFSR.scala 23:22]
      node _T_812 = bits(_T_811, 0, 0) @[LFSR.scala 23:40]
      node _T_813 = bits(_T_811, 2, 2) @[LFSR.scala 23:48]
      node _T_814 = xor(_T_812, _T_813) @[LFSR.scala 23:43]
      node _T_815 = bits(_T_811, 3, 3) @[LFSR.scala 23:56]
      node _T_816 = xor(_T_814, _T_815) @[LFSR.scala 23:51]
      node _T_817 = bits(_T_811, 5, 5) @[LFSR.scala 23:64]
      node _T_818 = xor(_T_816, _T_817) @[LFSR.scala 23:59]
      node _T_819 = bits(_T_811, 15, 1) @[LFSR.scala 23:73]
      node _T_820 = cat(_T_818, _T_819) @[Cat.scala 30:58]
      _T_811 <= _T_820 @[LFSR.scala 23:29]
      skip @[LFSR.scala 23:22]
    node _T_821 = bits(_T_811, 1, 0) @[Replacement.scala 19:44]
    node s1_replaced_way_en = dshl(UInt<1>("h01"), _T_821) @[OneHot.scala 45:35]
    node _T_823 = bits(_T_811, 1, 0) @[Replacement.scala 19:44]
    reg _T_825 : UInt<2>, clock @[Reg.scala 11:16]
    when s1_clk_en : @[Reg.scala 12:19]
      _T_825 <= _T_823 @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node s2_replaced_way_en = dshl(UInt<1>("h01"), _T_825) @[OneHot.scala 45:35]
    node _T_827 = bits(s1_replaced_way_en, 0, 0) @[NBDcache.scala 851:125]
    node _T_828 = and(s1_clk_en, _T_827) @[NBDcache.scala 851:104]
    reg _T_830 : {coh : {state : UInt<2>}, tag : UInt<20>}, clock @[Reg.scala 11:16]
    when _T_828 : @[Reg.scala 12:19]
      _T_830.tag <= meta.io.resp[0].tag @[Reg.scala 12:23]
      _T_830.coh.state <= meta.io.resp[0].coh.state @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_831 = bits(s1_replaced_way_en, 1, 1) @[NBDcache.scala 851:125]
    node _T_832 = and(s1_clk_en, _T_831) @[NBDcache.scala 851:104]
    reg _T_834 : {coh : {state : UInt<2>}, tag : UInt<20>}, clock @[Reg.scala 11:16]
    when _T_832 : @[Reg.scala 12:19]
      _T_834.tag <= meta.io.resp[1].tag @[Reg.scala 12:23]
      _T_834.coh.state <= meta.io.resp[1].coh.state @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_835 = bits(s1_replaced_way_en, 2, 2) @[NBDcache.scala 851:125]
    node _T_836 = and(s1_clk_en, _T_835) @[NBDcache.scala 851:104]
    reg _T_838 : {coh : {state : UInt<2>}, tag : UInt<20>}, clock @[Reg.scala 11:16]
    when _T_836 : @[Reg.scala 12:19]
      _T_838.tag <= meta.io.resp[2].tag @[Reg.scala 12:23]
      _T_838.coh.state <= meta.io.resp[2].coh.state @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_839 = bits(s1_replaced_way_en, 3, 3) @[NBDcache.scala 851:125]
    node _T_840 = and(s1_clk_en, _T_839) @[NBDcache.scala 851:104]
    reg _T_842 : {coh : {state : UInt<2>}, tag : UInt<20>}, clock @[Reg.scala 11:16]
    when _T_840 : @[Reg.scala 12:19]
      _T_842.tag <= meta.io.resp[3].tag @[Reg.scala 12:23]
      _T_842.coh.state <= meta.io.resp[3].coh.state @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    wire _T_845 : {coh : {state : UInt<2>}, tag : UInt<20>}[4] @[NBDcache.scala 785:43]
    _T_845 is invalid @[NBDcache.scala 785:43]
    _T_845[0] <- _T_830 @[NBDcache.scala 785:43]
    _T_845[1] <- _T_834 @[NBDcache.scala 785:43]
    _T_845[2] <- _T_838 @[NBDcache.scala 785:43]
    _T_845[3] <- _T_842 @[NBDcache.scala 785:43]
    node _T_852 = bits(s2_replaced_way_en, 0, 0) @[Mux.scala 21:36]
    node _T_853 = bits(s2_replaced_way_en, 1, 1) @[Mux.scala 21:36]
    node _T_854 = bits(s2_replaced_way_en, 2, 2) @[Mux.scala 21:36]
    node _T_855 = bits(s2_replaced_way_en, 3, 3) @[Mux.scala 21:36]
    node _T_857 = cat(_T_845[0].coh.state, _T_845[0].tag) @[Mux.scala 19:72]
    node _T_859 = mux(_T_852, _T_857, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_860 = cat(_T_845[1].coh.state, _T_845[1].tag) @[Mux.scala 19:72]
    node _T_862 = mux(_T_853, _T_860, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_863 = cat(_T_845[2].coh.state, _T_845[2].tag) @[Mux.scala 19:72]
    node _T_865 = mux(_T_854, _T_863, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_866 = cat(_T_845[3].coh.state, _T_845[3].tag) @[Mux.scala 19:72]
    node _T_868 = mux(_T_855, _T_866, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_869 = or(_T_859, _T_862) @[Mux.scala 19:72]
    node _T_870 = or(_T_869, _T_865) @[Mux.scala 19:72]
    node _T_871 = or(_T_870, _T_868) @[Mux.scala 19:72]
    wire s2_repl_meta : {coh : {state : UInt<2>}, tag : UInt<20>} @[Mux.scala 19:72]
    wire _T_874 : UInt<22>
    _T_874 <= _T_871
    node _T_875 = bits(_T_874, 19, 0) @[Mux.scala 19:72]
    s2_repl_meta.tag <= _T_875 @[Mux.scala 19:72]
    node _T_876 = bits(_T_874, 21, 20) @[Mux.scala 19:72]
    s2_repl_meta.coh.state <= _T_876 @[Mux.scala 19:72]
    node _T_878 = eq(s2_hit, UInt<1>("h00")) @[NBDcache.scala 854:44]
    node _T_879 = and(s2_valid_masked, _T_878) @[NBDcache.scala 854:41]
    node _T_881 = eq(s2_req.cmd, UInt<2>("h02")) @[Consts.scala 92:35]
    node _T_883 = eq(s2_req.cmd, UInt<2>("h03")) @[Consts.scala 92:52]
    node _T_884 = or(_T_881, _T_883) @[Consts.scala 92:45]
    node _T_886 = eq(s2_req.cmd, UInt<1>("h00")) @[Consts.scala 93:31]
    node _T_888 = eq(s2_req.cmd, UInt<3>("h06")) @[Consts.scala 93:48]
    node _T_889 = or(_T_886, _T_888) @[Consts.scala 93:41]
    node _T_891 = eq(s2_req.cmd, UInt<3>("h07")) @[Consts.scala 93:65]
    node _T_892 = or(_T_889, _T_891) @[Consts.scala 93:58]
    node _T_897 = eq(s2_req.cmd, UInt<3>("h04")) @[package.scala 14:47]
    node _T_898 = eq(s2_req.cmd, UInt<4>("h09")) @[package.scala 14:47]
    node _T_899 = eq(s2_req.cmd, UInt<4>("h0a")) @[package.scala 14:47]
    node _T_900 = eq(s2_req.cmd, UInt<4>("h0b")) @[package.scala 14:47]
    node _T_901 = or(_T_897, _T_898) @[package.scala 14:62]
    node _T_902 = or(_T_901, _T_899) @[package.scala 14:62]
    node _T_903 = or(_T_902, _T_900) @[package.scala 14:62]
    node _T_909 = eq(s2_req.cmd, UInt<4>("h08")) @[package.scala 14:47]
    node _T_910 = eq(s2_req.cmd, UInt<4>("h0c")) @[package.scala 14:47]
    node _T_911 = eq(s2_req.cmd, UInt<4>("h0d")) @[package.scala 14:47]
    node _T_912 = eq(s2_req.cmd, UInt<4>("h0e")) @[package.scala 14:47]
    node _T_913 = eq(s2_req.cmd, UInt<4>("h0f")) @[package.scala 14:47]
    node _T_914 = or(_T_909, _T_910) @[package.scala 14:62]
    node _T_915 = or(_T_914, _T_911) @[package.scala 14:62]
    node _T_916 = or(_T_915, _T_912) @[package.scala 14:62]
    node _T_917 = or(_T_916, _T_913) @[package.scala 14:62]
    node _T_918 = or(_T_903, _T_917) @[Consts.scala 91:44]
    node _T_919 = or(_T_892, _T_918) @[Consts.scala 93:75]
    node _T_920 = or(_T_884, _T_919) @[NBDcache.scala 854:79]
    node _T_922 = eq(s2_req.cmd, UInt<1>("h01")) @[Consts.scala 94:32]
    node _T_924 = eq(s2_req.cmd, UInt<5>("h011")) @[Consts.scala 94:49]
    node _T_925 = or(_T_922, _T_924) @[Consts.scala 94:42]
    node _T_927 = eq(s2_req.cmd, UInt<3>("h07")) @[Consts.scala 94:66]
    node _T_928 = or(_T_925, _T_927) @[Consts.scala 94:59]
    node _T_933 = eq(s2_req.cmd, UInt<3>("h04")) @[package.scala 14:47]
    node _T_934 = eq(s2_req.cmd, UInt<4>("h09")) @[package.scala 14:47]
    node _T_935 = eq(s2_req.cmd, UInt<4>("h0a")) @[package.scala 14:47]
    node _T_936 = eq(s2_req.cmd, UInt<4>("h0b")) @[package.scala 14:47]
    node _T_937 = or(_T_933, _T_934) @[package.scala 14:62]
    node _T_938 = or(_T_937, _T_935) @[package.scala 14:62]
    node _T_939 = or(_T_938, _T_936) @[package.scala 14:62]
    node _T_945 = eq(s2_req.cmd, UInt<4>("h08")) @[package.scala 14:47]
    node _T_946 = eq(s2_req.cmd, UInt<4>("h0c")) @[package.scala 14:47]
    node _T_947 = eq(s2_req.cmd, UInt<4>("h0d")) @[package.scala 14:47]
    node _T_948 = eq(s2_req.cmd, UInt<4>("h0e")) @[package.scala 14:47]
    node _T_949 = eq(s2_req.cmd, UInt<4>("h0f")) @[package.scala 14:47]
    node _T_950 = or(_T_945, _T_946) @[package.scala 14:62]
    node _T_951 = or(_T_950, _T_947) @[package.scala 14:62]
    node _T_952 = or(_T_951, _T_948) @[package.scala 14:62]
    node _T_953 = or(_T_952, _T_949) @[package.scala 14:62]
    node _T_954 = or(_T_939, _T_953) @[Consts.scala 91:44]
    node _T_955 = or(_T_928, _T_954) @[Consts.scala 94:76]
    node _T_956 = or(_T_920, _T_955) @[NBDcache.scala 854:101]
    node _T_957 = and(_T_879, _T_956) @[NBDcache.scala 854:52]
    mshrs.io.req.valid <= _T_957 @[NBDcache.scala 854:22]
    mshrs.io.req.bits <- s2_req @[NBDcache.scala 855:21]
    mshrs.io.req.bits.tag_match <= s2_tag_match @[NBDcache.scala 856:31]
    wire _T_959 : {coh : {state : UInt<2>}, tag : UInt<20>} @[HellaCache.scala 228:20]
    _T_959 is invalid @[HellaCache.scala 228:20]
    _T_959.tag <= s2_repl_meta.tag @[HellaCache.scala 229:14]
    _T_959.coh <- s2_hit_state @[HellaCache.scala 230:14]
    node _T_960 = mux(s2_tag_match, _T_959, s2_repl_meta) @[NBDcache.scala 857:36]
    mshrs.io.req.bits.old_meta <- _T_960 @[NBDcache.scala 857:30]
    node _T_961 = mux(s2_tag_match, s2_tag_match_way, s2_replaced_way_en) @[NBDcache.scala 858:34]
    mshrs.io.req.bits.way_en <= _T_961 @[NBDcache.scala 858:28]
    mshrs.io.req.bits.data <= s2_req.data @[NBDcache.scala 859:26]
    node _T_962 = and(mshrs.io.req.ready, mshrs.io.req.valid) @[Decoupled.scala 30:37]
    when _T_962 : @[NBDcache.scala 860:30]
      _T_807 <= UInt<1>("h01") @[Replacement.scala 20:22]
      skip @[NBDcache.scala 860:30]
    tl_out.a <- mshrs.io.mem_acquire @[NBDcache.scala 861:12]
    readArb.io.in[1].valid <= mshrs.io.replay.valid @[NBDcache.scala 864:26]
    readArb.io.in[1].bits <- mshrs.io.replay.bits @[NBDcache.scala 865:25]
    node _T_965 = not(UInt<4>("h00")) @[NBDcache.scala 866:35]
    readArb.io.in[1].bits.way_en <= _T_965 @[NBDcache.scala 866:32]
    mshrs.io.replay.ready <= readArb.io.in[1].ready @[NBDcache.scala 867:25]
    node _T_966 = and(mshrs.io.replay.valid, readArb.io.in[1].ready) @[NBDcache.scala 868:38]
    s1_replay <= _T_966 @[NBDcache.scala 868:13]
    metaReadArb.io.in[1] <- mshrs.io.meta_read @[NBDcache.scala 869:24]
    metaWriteArb.io.in[0] <- mshrs.io.meta_write @[NBDcache.scala 870:25]
    node _T_968 = eq(lrsc_valid, UInt<1>("h00")) @[NBDcache.scala 873:44]
    node _T_969 = and(tl_out.b.valid, _T_968) @[NBDcache.scala 873:41]
    prober.io.req.valid <= _T_969 @[NBDcache.scala 873:23]
    node _T_971 = eq(lrsc_valid, UInt<1>("h00")) @[NBDcache.scala 874:44]
    node _T_972 = and(prober.io.req.ready, _T_971) @[NBDcache.scala 874:41]
    tl_out.b.ready <= _T_972 @[NBDcache.scala 874:18]
    prober.io.req.bits <- tl_out.b.bits @[NBDcache.scala 875:22]
    prober.io.way_en <= s2_tag_match_way @[NBDcache.scala 876:20]
    prober.io.block_state <- s2_hit_state @[NBDcache.scala 877:25]
    metaReadArb.io.in[2] <- prober.io.meta_read @[NBDcache.scala 878:24]
    metaWriteArb.io.in[1] <- prober.io.meta_write @[NBDcache.scala 879:25]
    prober.io.mshr_rdy <= mshrs.io.probe_rdy @[NBDcache.scala 880:22]
    node grant_has_data = bits(tl_out.d.bits.opcode, 0, 0) @[Edges.scala 106:36]
    node _T_973 = and(tl_out.d.ready, tl_out.d.valid) @[Decoupled.scala 30:37]
    mshrs.io.mem_grant.valid <= _T_973 @[NBDcache.scala 884:28]
    mshrs.io.mem_grant.bits <- tl_out.d.bits @[NBDcache.scala 885:27]
    node _T_975 = eq(grant_has_data, UInt<1>("h00")) @[NBDcache.scala 886:48]
    node _T_976 = or(writeArb.io.in[1].ready, _T_975) @[NBDcache.scala 886:45]
    tl_out.d.ready <= _T_976 @[NBDcache.scala 886:18]
    node _T_977 = and(tl_out.d.valid, grant_has_data) @[NBDcache.scala 890:45]
    node _T_979 = lt(tl_out.d.bits.source, UInt<2>("h02")) @[NBDcache.scala 891:53]
    node _T_980 = and(_T_977, _T_979) @[NBDcache.scala 890:63]
    writeArb.io.in[1].valid <= _T_980 @[NBDcache.scala 890:27]
    writeArb.io.in[1].bits.addr <= mshrs.io.refill.addr @[NBDcache.scala 892:31]
    writeArb.io.in[1].bits.way_en <= mshrs.io.refill.way_en @[NBDcache.scala 893:33]
    node _T_982 = not(UInt<1>("h00")) @[NBDcache.scala 894:35]
    writeArb.io.in[1].bits.wmask <= _T_982 @[NBDcache.scala 894:32]
    node _T_983 = bits(tl_out.d.bits.data, 63, 0) @[NBDcache.scala 895:52]
    writeArb.io.in[1].bits.data <= _T_983 @[NBDcache.scala 895:31]
    data.io.read <- readArb.io.out @[NBDcache.scala 896:16]
    node _T_985 = eq(tl_out.d.valid, UInt<1>("h00")) @[NBDcache.scala 897:27]
    node _T_986 = or(_T_985, tl_out.d.ready) @[NBDcache.scala 897:43]
    readArb.io.out.ready <= _T_986 @[NBDcache.scala 897:24]
    tl_out.e <- mshrs.io.mem_finish @[NBDcache.scala 898:12]
    inst wbArb of Arbiter_11 @[NBDcache.scala 901:21]
    wbArb.io is invalid
    wbArb.clock <= clock
    wbArb.reset <= reset
    wbArb.io.in[0] <- prober.io.wb_req @[NBDcache.scala 902:18]
    wbArb.io.in[1] <- mshrs.io.wb_req @[NBDcache.scala 903:18]
    wb.io.req <- wbArb.io.out @[NBDcache.scala 904:13]
    metaReadArb.io.in[3] <- wb.io.meta_read @[NBDcache.scala 905:24]
    readArb.io.in[2] <- wb.io.data_req @[NBDcache.scala 906:20]
    wb.io.data_resp <= s2_data_corrected @[NBDcache.scala 907:19]
    node _T_989 = asUInt(asSInt(UInt<12>("h0fff"))) @[package.scala 82:70]
    node _T_990 = dshl(_T_989, wb.io.release.bits.size) @[package.scala 82:77]
    node _T_991 = bits(_T_990, 11, 0) @[package.scala 82:82]
    node _T_992 = not(_T_991) @[package.scala 82:46]
    node _T_993 = shr(_T_992, 3) @[Edges.scala 211:59]
    node _T_994 = bits(wb.io.release.bits.opcode, 0, 0) @[Edges.scala 102:36]
    node _T_996 = mux(_T_994, _T_993, UInt<1>("h00")) @[Edges.scala 212:14]
    node _T_998 = asUInt(asSInt(UInt<12>("h0fff"))) @[package.scala 82:70]
    node _T_999 = dshl(_T_998, prober.io.rep.bits.size) @[package.scala 82:77]
    node _T_1000 = bits(_T_999, 11, 0) @[package.scala 82:82]
    node _T_1001 = not(_T_1000) @[package.scala 82:46]
    node _T_1002 = shr(_T_1001, 3) @[Edges.scala 211:59]
    node _T_1003 = bits(prober.io.rep.bits.opcode, 0, 0) @[Edges.scala 102:36]
    node _T_1005 = mux(_T_1003, _T_1002, UInt<1>("h00")) @[Edges.scala 212:14]
    reg _T_1008 : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[Arbiter.scala 51:30]
    node _T_1010 = eq(_T_1008, UInt<1>("h00")) @[Arbiter.scala 52:28]
    node _T_1011 = and(_T_1010, tl_out.c.ready) @[Arbiter.scala 53:24]
    node _T_1012 = cat(prober.io.rep.valid, wb.io.release.valid) @[Cat.scala 30:58]
    node _T_1013 = shl(_T_1012, 1) @[package.scala 91:48]
    node _T_1014 = bits(_T_1013, 1, 0) @[package.scala 91:53]
    node _T_1015 = or(_T_1012, _T_1014) @[package.scala 91:43]
    node _T_1016 = bits(_T_1015, 1, 0) @[package.scala 92:17]
    node _T_1017 = shl(_T_1016, 1) @[Arbiter.scala 15:78]
    node _T_1018 = bits(_T_1017, 1, 0) @[Arbiter.scala 15:83]
    node _T_1019 = not(_T_1018) @[Arbiter.scala 15:61]
    node _T_1020 = bits(_T_1019, 0, 0) @[Arbiter.scala 58:72]
    node _T_1021 = bits(_T_1019, 1, 1) @[Arbiter.scala 58:72]
    wire _T_1024 : UInt<1>[2] @[Arbiter.scala 58:23]
    _T_1024 is invalid @[Arbiter.scala 58:23]
    _T_1024[0] <= _T_1020 @[Arbiter.scala 58:23]
    _T_1024[1] <= _T_1021 @[Arbiter.scala 58:23]
    node _T_1029 = and(_T_1024[0], wb.io.release.valid) @[Arbiter.scala 60:65]
    node _T_1030 = and(_T_1024[1], prober.io.rep.valid) @[Arbiter.scala 60:65]
    wire _T_1033 : UInt<1>[2] @[Arbiter.scala 60:23]
    _T_1033 is invalid @[Arbiter.scala 60:23]
    _T_1033[0] <= _T_1029 @[Arbiter.scala 60:23]
    _T_1033[1] <= _T_1030 @[Arbiter.scala 60:23]
    node _T_1039 = or(UInt<1>("h00"), _T_1033[0]) @[Arbiter.scala 65:52]
    node _T_1040 = or(_T_1039, _T_1033[1]) @[Arbiter.scala 65:52]
    node _T_1042 = eq(UInt<1>("h00"), UInt<1>("h00")) @[Arbiter.scala 66:56]
    node _T_1044 = eq(_T_1033[0], UInt<1>("h00")) @[Arbiter.scala 66:62]
    node _T_1045 = or(_T_1042, _T_1044) @[Arbiter.scala 66:59]
    node _T_1047 = eq(_T_1039, UInt<1>("h00")) @[Arbiter.scala 66:56]
    node _T_1049 = eq(_T_1033[1], UInt<1>("h00")) @[Arbiter.scala 66:62]
    node _T_1050 = or(_T_1047, _T_1049) @[Arbiter.scala 66:59]
    node _T_1051 = and(_T_1045, _T_1050) @[Arbiter.scala 66:77]
    node _T_1052 = bits(reset, 0, 0) @[Arbiter.scala 66:13]
    node _T_1053 = or(_T_1051, _T_1052) @[Arbiter.scala 66:13]
    node _T_1055 = eq(_T_1053, UInt<1>("h00")) @[Arbiter.scala 66:13]
    when _T_1055 : @[Arbiter.scala 66:13]
      printf(clock, UInt<1>(1), "Assertion failed\n    at Arbiter.scala:66 assert((prefixOR zip winner) map { case (p,w) => !p || !w } reduce {_ && _})\n") @[Arbiter.scala 66:13]
      stop(clock, UInt<1>(1), 1) @[Arbiter.scala 66:13]
      skip @[Arbiter.scala 66:13]
    node _T_1056 = or(wb.io.release.valid, prober.io.rep.valid) @[Arbiter.scala 68:31]
    node _T_1058 = eq(_T_1056, UInt<1>("h00")) @[Arbiter.scala 68:15]
    node _T_1059 = or(_T_1033[0], _T_1033[1]) @[Arbiter.scala 68:54]
    node _T_1060 = or(_T_1058, _T_1059) @[Arbiter.scala 68:36]
    node _T_1061 = bits(reset, 0, 0) @[Arbiter.scala 68:14]
    node _T_1062 = or(_T_1060, _T_1061) @[Arbiter.scala 68:14]
    node _T_1064 = eq(_T_1062, UInt<1>("h00")) @[Arbiter.scala 68:14]
    when _T_1064 : @[Arbiter.scala 68:14]
      printf(clock, UInt<1>(1), "Assertion failed\n    at Arbiter.scala:68 assert (!valids.reduce(_||_) || winner.reduce(_||_))\n") @[Arbiter.scala 68:14]
      stop(clock, UInt<1>(1), 1) @[Arbiter.scala 68:14]
      skip @[Arbiter.scala 68:14]
    node _T_1066 = mux(_T_1033[0], _T_996, UInt<1>("h00")) @[Arbiter.scala 71:69]
    node _T_1068 = mux(_T_1033[1], _T_1005, UInt<1>("h00")) @[Arbiter.scala 71:69]
    node _T_1069 = or(_T_1066, _T_1068) @[Arbiter.scala 72:44]
    node _T_1070 = and(tl_out.c.ready, tl_out.c.valid) @[Decoupled.scala 30:37]
    node _T_1071 = sub(_T_1008, _T_1070) @[Arbiter.scala 73:52]
    node _T_1072 = asUInt(_T_1071) @[Arbiter.scala 73:52]
    node _T_1073 = tail(_T_1072, 1) @[Arbiter.scala 73:52]
    node _T_1074 = mux(_T_1011, _T_1069, _T_1073) @[Arbiter.scala 73:23]
    _T_1008 <= _T_1074 @[Arbiter.scala 73:17]
    wire _T_1079 : UInt<1>[2] @[compatibility.scala 117:12]
    _T_1079 is invalid @[compatibility.scala 117:12]
    _T_1079[0] <= UInt<1>("h00") @[compatibility.scala 117:12]
    _T_1079[1] <= UInt<1>("h00") @[compatibility.scala 117:12]
    reg _T_1092 : UInt<1>[2], clock with : (reset => (reset, _T_1079)) @[Arbiter.scala 76:26]
    node _T_1103 = mux(_T_1010, _T_1033, _T_1092) @[Arbiter.scala 77:25]
    _T_1092 <- _T_1103 @[Arbiter.scala 78:13]
    node _T_1111 = mux(_T_1010, _T_1024, _T_1092) @[Arbiter.scala 81:26]
    node _T_1119 = and(tl_out.c.ready, _T_1111[0]) @[Arbiter.scala 83:33]
    wb.io.release.ready <= _T_1119 @[Arbiter.scala 83:19]
    node _T_1120 = and(tl_out.c.ready, _T_1111[1]) @[Arbiter.scala 83:33]
    prober.io.rep.ready <= _T_1120 @[Arbiter.scala 83:19]
    node _T_1121 = or(wb.io.release.valid, prober.io.rep.valid) @[Arbiter.scala 89:46]
    node _T_1124 = mux(_T_1092[0], wb.io.release.valid, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_1126 = mux(_T_1092[1], prober.io.rep.valid, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_1127 = or(_T_1124, _T_1126) @[Mux.scala 19:72]
    wire _T_1129 : UInt<1> @[Mux.scala 19:72]
    _T_1129 <= _T_1127 @[Mux.scala 19:72]
    node _T_1130 = mux(_T_1010, _T_1121, _T_1129) @[Arbiter.scala 89:24]
    tl_out.c.valid <= _T_1130 @[Arbiter.scala 89:18]
    node _T_1132 = cat(wb.io.release.bits.address, wb.io.release.bits.data) @[Mux.scala 19:72]
    node _T_1133 = cat(_T_1132, wb.io.release.bits.error) @[Mux.scala 19:72]
    node _T_1134 = cat(wb.io.release.bits.size, wb.io.release.bits.source) @[Mux.scala 19:72]
    node _T_1135 = cat(wb.io.release.bits.opcode, wb.io.release.bits.param) @[Mux.scala 19:72]
    node _T_1136 = cat(_T_1135, _T_1134) @[Mux.scala 19:72]
    node _T_1137 = cat(_T_1136, _T_1133) @[Mux.scala 19:72]
    node _T_1139 = mux(_T_1103[0], _T_1137, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_1140 = cat(prober.io.rep.bits.address, prober.io.rep.bits.data) @[Mux.scala 19:72]
    node _T_1141 = cat(_T_1140, prober.io.rep.bits.error) @[Mux.scala 19:72]
    node _T_1142 = cat(prober.io.rep.bits.size, prober.io.rep.bits.source) @[Mux.scala 19:72]
    node _T_1143 = cat(prober.io.rep.bits.opcode, prober.io.rep.bits.param) @[Mux.scala 19:72]
    node _T_1144 = cat(_T_1143, _T_1142) @[Mux.scala 19:72]
    node _T_1145 = cat(_T_1144, _T_1141) @[Mux.scala 19:72]
    node _T_1147 = mux(_T_1103[1], _T_1145, UInt<1>("h00")) @[Mux.scala 19:72]
    node _T_1148 = or(_T_1139, _T_1147) @[Mux.scala 19:72]
    wire _T_1150 : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<2>, address : UInt<32>, data : UInt<64>, error : UInt<1>} @[Mux.scala 19:72]
    wire _T_1152 : UInt<109>
    _T_1152 <= _T_1148
    node _T_1153 = bits(_T_1152, 0, 0) @[Mux.scala 19:72]
    _T_1150.error <= _T_1153 @[Mux.scala 19:72]
    node _T_1154 = bits(_T_1152, 64, 1) @[Mux.scala 19:72]
    _T_1150.data <= _T_1154 @[Mux.scala 19:72]
    node _T_1155 = bits(_T_1152, 96, 65) @[Mux.scala 19:72]
    _T_1150.address <= _T_1155 @[Mux.scala 19:72]
    node _T_1156 = bits(_T_1152, 98, 97) @[Mux.scala 19:72]
    _T_1150.source <= _T_1156 @[Mux.scala 19:72]
    node _T_1157 = bits(_T_1152, 102, 99) @[Mux.scala 19:72]
    _T_1150.size <= _T_1157 @[Mux.scala 19:72]
    node _T_1158 = bits(_T_1152, 105, 103) @[Mux.scala 19:72]
    _T_1150.param <= _T_1158 @[Mux.scala 19:72]
    node _T_1159 = bits(_T_1152, 108, 106) @[Mux.scala 19:72]
    _T_1150.opcode <= _T_1159 @[Mux.scala 19:72]
    tl_out.c.bits <- _T_1150 @[Arbiter.scala 90:17]
    reg s4_valid : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[NBDcache.scala 911:21]
    s4_valid <= s3_valid @[NBDcache.scala 911:21]
    node _T_1162 = and(s3_valid, metaReadArb.io.out.valid) @[NBDcache.scala 912:43]
    reg s4_req : {addr : UInt<40>, tag : UInt<7>, cmd : UInt<5>, typ : UInt<3>, phys : UInt<1>, data : UInt<64>}, clock @[Reg.scala 11:16]
    when _T_1162 : @[Reg.scala 12:19]
      s4_req.data <= s3_req.data @[Reg.scala 12:23]
      s4_req.phys <= s3_req.phys @[Reg.scala 12:23]
      s4_req.typ <= s3_req.typ @[Reg.scala 12:23]
      s4_req.cmd <= s3_req.cmd @[Reg.scala 12:23]
      s4_req.tag <= s3_req.tag @[Reg.scala 12:23]
      s4_req.addr <= s3_req.addr @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    node _T_1164 = or(s2_valid_masked, s2_replay) @[NBDcache.scala 914:23]
    node _T_1166 = eq(s2_sc_fail, UInt<1>("h00")) @[NBDcache.scala 914:40]
    node _T_1167 = and(_T_1164, _T_1166) @[NBDcache.scala 914:37]
    node _T_1168 = shr(dtlb.io.resp.paddr, 3) @[NBDcache.scala 917:32]
    node _T_1169 = shr(s2_req.addr, 3) @[NBDcache.scala 917:61]
    node _T_1170 = eq(_T_1168, _T_1169) @[NBDcache.scala 917:47]
    node _T_1171 = and(_T_1167, _T_1170) @[NBDcache.scala 917:20]
    node _T_1173 = eq(s2_req.cmd, UInt<1>("h01")) @[Consts.scala 94:32]
    node _T_1175 = eq(s2_req.cmd, UInt<5>("h011")) @[Consts.scala 94:49]
    node _T_1176 = or(_T_1173, _T_1175) @[Consts.scala 94:42]
    node _T_1178 = eq(s2_req.cmd, UInt<3>("h07")) @[Consts.scala 94:66]
    node _T_1179 = or(_T_1176, _T_1178) @[Consts.scala 94:59]
    node _T_1184 = eq(s2_req.cmd, UInt<3>("h04")) @[package.scala 14:47]
    node _T_1185 = eq(s2_req.cmd, UInt<4>("h09")) @[package.scala 14:47]
    node _T_1186 = eq(s2_req.cmd, UInt<4>("h0a")) @[package.scala 14:47]
    node _T_1187 = eq(s2_req.cmd, UInt<4>("h0b")) @[package.scala 14:47]
    node _T_1188 = or(_T_1184, _T_1185) @[package.scala 14:62]
    node _T_1189 = or(_T_1188, _T_1186) @[package.scala 14:62]
    node _T_1190 = or(_T_1189, _T_1187) @[package.scala 14:62]
    node _T_1196 = eq(s2_req.cmd, UInt<4>("h08")) @[package.scala 14:47]
    node _T_1197 = eq(s2_req.cmd, UInt<4>("h0c")) @[package.scala 14:47]
    node _T_1198 = eq(s2_req.cmd, UInt<4>("h0d")) @[package.scala 14:47]
    node _T_1199 = eq(s2_req.cmd, UInt<4>("h0e")) @[package.scala 14:47]
    node _T_1200 = eq(s2_req.cmd, UInt<4>("h0f")) @[package.scala 14:47]
    node _T_1201 = or(_T_1196, _T_1197) @[package.scala 14:62]
    node _T_1202 = or(_T_1201, _T_1198) @[package.scala 14:62]
    node _T_1203 = or(_T_1202, _T_1199) @[package.scala 14:62]
    node _T_1204 = or(_T_1203, _T_1200) @[package.scala 14:62]
    node _T_1205 = or(_T_1190, _T_1204) @[Consts.scala 91:44]
    node _T_1206 = or(_T_1179, _T_1205) @[Consts.scala 94:76]
    node _T_1207 = and(_T_1171, _T_1206) @[NBDcache.scala 917:77]
    node _T_1208 = shr(dtlb.io.resp.paddr, 3) @[NBDcache.scala 917:32]
    node _T_1209 = shr(s3_req.addr, 3) @[NBDcache.scala 917:61]
    node _T_1210 = eq(_T_1208, _T_1209) @[NBDcache.scala 917:47]
    node _T_1211 = and(s3_valid, _T_1210) @[NBDcache.scala 917:20]
    node _T_1213 = eq(s3_req.cmd, UInt<1>("h01")) @[Consts.scala 94:32]
    node _T_1215 = eq(s3_req.cmd, UInt<5>("h011")) @[Consts.scala 94:49]
    node _T_1216 = or(_T_1213, _T_1215) @[Consts.scala 94:42]
    node _T_1218 = eq(s3_req.cmd, UInt<3>("h07")) @[Consts.scala 94:66]
    node _T_1219 = or(_T_1216, _T_1218) @[Consts.scala 94:59]
    node _T_1224 = eq(s3_req.cmd, UInt<3>("h04")) @[package.scala 14:47]
    node _T_1225 = eq(s3_req.cmd, UInt<4>("h09")) @[package.scala 14:47]
    node _T_1226 = eq(s3_req.cmd, UInt<4>("h0a")) @[package.scala 14:47]
    node _T_1227 = eq(s3_req.cmd, UInt<4>("h0b")) @[package.scala 14:47]
    node _T_1228 = or(_T_1224, _T_1225) @[package.scala 14:62]
    node _T_1229 = or(_T_1228, _T_1226) @[package.scala 14:62]
    node _T_1230 = or(_T_1229, _T_1227) @[package.scala 14:62]
    node _T_1236 = eq(s3_req.cmd, UInt<4>("h08")) @[package.scala 14:47]
    node _T_1237 = eq(s3_req.cmd, UInt<4>("h0c")) @[package.scala 14:47]
    node _T_1238 = eq(s3_req.cmd, UInt<4>("h0d")) @[package.scala 14:47]
    node _T_1239 = eq(s3_req.cmd, UInt<4>("h0e")) @[package.scala 14:47]
    node _T_1240 = eq(s3_req.cmd, UInt<4>("h0f")) @[package.scala 14:47]
    node _T_1241 = or(_T_1236, _T_1237) @[package.scala 14:62]
    node _T_1242 = or(_T_1241, _T_1238) @[package.scala 14:62]
    node _T_1243 = or(_T_1242, _T_1239) @[package.scala 14:62]
    node _T_1244 = or(_T_1243, _T_1240) @[package.scala 14:62]
    node _T_1245 = or(_T_1230, _T_1244) @[Consts.scala 91:44]
    node _T_1246 = or(_T_1219, _T_1245) @[Consts.scala 94:76]
    node _T_1247 = and(_T_1211, _T_1246) @[NBDcache.scala 917:77]
    node _T_1248 = shr(dtlb.io.resp.paddr, 3) @[NBDcache.scala 917:32]
    node _T_1249 = shr(s4_req.addr, 3) @[NBDcache.scala 917:61]
    node _T_1250 = eq(_T_1248, _T_1249) @[NBDcache.scala 917:47]
    node _T_1251 = and(s4_valid, _T_1250) @[NBDcache.scala 917:20]
    node _T_1253 = eq(s4_req.cmd, UInt<1>("h01")) @[Consts.scala 94:32]
    node _T_1255 = eq(s4_req.cmd, UInt<5>("h011")) @[Consts.scala 94:49]
    node _T_1256 = or(_T_1253, _T_1255) @[Consts.scala 94:42]
    node _T_1258 = eq(s4_req.cmd, UInt<3>("h07")) @[Consts.scala 94:66]
    node _T_1259 = or(_T_1256, _T_1258) @[Consts.scala 94:59]
    node _T_1264 = eq(s4_req.cmd, UInt<3>("h04")) @[package.scala 14:47]
    node _T_1265 = eq(s4_req.cmd, UInt<4>("h09")) @[package.scala 14:47]
    node _T_1266 = eq(s4_req.cmd, UInt<4>("h0a")) @[package.scala 14:47]
    node _T_1267 = eq(s4_req.cmd, UInt<4>("h0b")) @[package.scala 14:47]
    node _T_1268 = or(_T_1264, _T_1265) @[package.scala 14:62]
    node _T_1269 = or(_T_1268, _T_1266) @[package.scala 14:62]
    node _T_1270 = or(_T_1269, _T_1267) @[package.scala 14:62]
    node _T_1276 = eq(s4_req.cmd, UInt<4>("h08")) @[package.scala 14:47]
    node _T_1277 = eq(s4_req.cmd, UInt<4>("h0c")) @[package.scala 14:47]
    node _T_1278 = eq(s4_req.cmd, UInt<4>("h0d")) @[package.scala 14:47]
    node _T_1279 = eq(s4_req.cmd, UInt<4>("h0e")) @[package.scala 14:47]
    node _T_1280 = eq(s4_req.cmd, UInt<4>("h0f")) @[package.scala 14:47]
    node _T_1281 = or(_T_1276, _T_1277) @[package.scala 14:62]
    node _T_1282 = or(_T_1281, _T_1278) @[package.scala 14:62]
    node _T_1283 = or(_T_1282, _T_1279) @[package.scala 14:62]
    node _T_1284 = or(_T_1283, _T_1280) @[package.scala 14:62]
    node _T_1285 = or(_T_1270, _T_1284) @[Consts.scala 91:44]
    node _T_1286 = or(_T_1259, _T_1285) @[Consts.scala 94:76]
    node _T_1287 = and(_T_1251, _T_1286) @[NBDcache.scala 917:77]
    reg s2_store_bypass_data : UInt<64>, clock @[NBDcache.scala 918:33]
    reg s2_store_bypass : UInt<1>, clock @[NBDcache.scala 919:28]
    when s1_clk_en : @[NBDcache.scala 920:20]
      s2_store_bypass <= UInt<1>("h00") @[NBDcache.scala 921:21]
      node _T_1291 = or(_T_1207, _T_1247) @[NBDcache.scala 922:38]
      node _T_1292 = or(_T_1291, _T_1287) @[NBDcache.scala 922:38]
      when _T_1292 : @[NBDcache.scala 922:44]
        node _T_1293 = mux(_T_1247, s3_req.data, s4_req.data) @[Mux.scala 31:69]
        node _T_1294 = mux(_T_1207, amoalu.io.out, _T_1293) @[Mux.scala 31:69]
        s2_store_bypass_data <= _T_1294 @[NBDcache.scala 923:28]
        s2_store_bypass <= UInt<1>("h01") @[NBDcache.scala 924:23]
        skip @[NBDcache.scala 922:44]
      skip @[NBDcache.scala 920:20]
    node _T_1297 = cat(UInt<1>("h00"), UInt<6>("h00")) @[Cat.scala 30:58]
    node s2_data_word_prebypass = dshr(s2_data_corrected, _T_1297) @[NBDcache.scala 929:52]
    node s2_data_word = mux(s2_store_bypass, s2_store_bypass_data, s2_data_word_prebypass) @[NBDcache.scala 930:25]
    node _T_1298 = bits(s2_req.typ, 2, 2) @[Consts.scala 20:31]
    node _T_1300 = eq(_T_1298, UInt<1>("h00")) @[Consts.scala 20:28]
    node _T_1301 = bits(s2_req.typ, 1, 0) @[AMOALU.scala 10:17]
    node _T_1303 = bits(s2_req.typ, 1, 0) @[AMOALU.scala 10:17]
    node _T_1305 = bits(s2_req.addr, 0, 0) @[AMOALU.scala 17:27]
    node _T_1307 = mux(_T_1305, UInt<1>("h01"), UInt<1>("h00")) @[AMOALU.scala 17:22]
    node _T_1309 = geq(_T_1303, UInt<1>("h01")) @[AMOALU.scala 17:57]
    node _T_1312 = mux(_T_1309, UInt<1>("h01"), UInt<1>("h00")) @[AMOALU.scala 17:51]
    node _T_1313 = or(_T_1307, _T_1312) @[AMOALU.scala 17:46]
    node _T_1314 = bits(s2_req.addr, 0, 0) @[AMOALU.scala 18:27]
    node _T_1316 = mux(_T_1314, UInt<1>("h00"), UInt<1>("h01")) @[AMOALU.scala 18:22]
    node _T_1317 = cat(_T_1313, _T_1316) @[Cat.scala 30:58]
    node _T_1318 = bits(s2_req.addr, 1, 1) @[AMOALU.scala 17:27]
    node _T_1320 = mux(_T_1318, _T_1317, UInt<1>("h00")) @[AMOALU.scala 17:22]
    node _T_1322 = geq(_T_1303, UInt<2>("h02")) @[AMOALU.scala 17:57]
    node _T_1325 = mux(_T_1322, UInt<2>("h03"), UInt<1>("h00")) @[AMOALU.scala 17:51]
    node _T_1326 = or(_T_1320, _T_1325) @[AMOALU.scala 17:46]
    node _T_1327 = bits(s2_req.addr, 1, 1) @[AMOALU.scala 18:27]
    node _T_1329 = mux(_T_1327, UInt<1>("h00"), _T_1317) @[AMOALU.scala 18:22]
    node _T_1330 = cat(_T_1326, _T_1329) @[Cat.scala 30:58]
    node _T_1331 = bits(s2_req.addr, 2, 2) @[AMOALU.scala 17:27]
    node _T_1333 = mux(_T_1331, _T_1330, UInt<1>("h00")) @[AMOALU.scala 17:22]
    node _T_1335 = geq(_T_1303, UInt<2>("h03")) @[AMOALU.scala 17:57]
    node _T_1338 = mux(_T_1335, UInt<4>("h0f"), UInt<1>("h00")) @[AMOALU.scala 17:51]
    node _T_1339 = or(_T_1333, _T_1338) @[AMOALU.scala 17:46]
    node _T_1340 = bits(s2_req.addr, 2, 2) @[AMOALU.scala 18:27]
    node _T_1342 = mux(_T_1340, UInt<1>("h00"), _T_1330) @[AMOALU.scala 18:22]
    node _T_1343 = cat(_T_1339, _T_1342) @[Cat.scala 30:58]
    amoalu.io.mask <= _T_1343 @[NBDcache.scala 933:18]
    amoalu.io.cmd <= s2_req.cmd @[NBDcache.scala 934:17]
    amoalu.io.lhs <= s2_data_word @[NBDcache.scala 935:17]
    amoalu.io.rhs <= s2_req.data @[NBDcache.scala 936:17]
    node _T_1344 = and(dtlb.io.req.valid, dtlb.io.resp.miss) @[NBDcache.scala 939:35]
    node _T_1345 = bits(s1_req.addr, 11, 6) @[NBDcache.scala 940:28]
    node _T_1346 = eq(_T_1345, prober.io.meta_write.bits.idx) @[NBDcache.scala 940:44]
    node _T_1348 = eq(prober.io.req.ready, UInt<1>("h00")) @[NBDcache.scala 940:81]
    node _T_1349 = and(_T_1346, _T_1348) @[NBDcache.scala 940:78]
    node s1_nack = or(_T_1344, _T_1349) @[NBDcache.scala 939:56]
    node _T_1350 = or(s1_valid, s1_replay) @[NBDcache.scala 941:49]
    reg s2_nack_hit : UInt<1>, clock @[Reg.scala 11:16]
    when _T_1350 : @[Reg.scala 12:19]
      s2_nack_hit <= s1_nack @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    when s2_nack_hit : @[NBDcache.scala 942:22]
      mshrs.io.req.valid <= UInt<1>("h00") @[NBDcache.scala 942:43]
      skip @[NBDcache.scala 942:22]
    node s2_nack_victim = and(s2_hit, mshrs.io.secondary_miss) @[NBDcache.scala 943:31]
    node _T_1354 = eq(s2_hit, UInt<1>("h00")) @[NBDcache.scala 944:22]
    node _T_1356 = eq(mshrs.io.req.ready, UInt<1>("h00")) @[NBDcache.scala 944:33]
    node s2_nack_miss = and(_T_1354, _T_1356) @[NBDcache.scala 944:30]
    node _T_1357 = or(s2_nack_hit, s2_nack_victim) @[NBDcache.scala 945:29]
    node s2_nack = or(_T_1357, s2_nack_miss) @[NBDcache.scala 945:47]
    node _T_1359 = eq(s2_nack, UInt<1>("h00")) @[NBDcache.scala 946:34]
    node _T_1360 = and(s2_valid, _T_1359) @[NBDcache.scala 946:31]
    s2_valid_masked <= _T_1360 @[NBDcache.scala 946:19]
    node _T_1361 = or(s2_valid, s2_replay) @[NBDcache.scala 948:34]
    node _T_1362 = and(_T_1361, s2_hit) @[NBDcache.scala 948:48]
    node s2_recycle_ecc = and(_T_1362, s2_data_correctable) @[NBDcache.scala 948:58]
    reg s2_recycle_next : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[NBDcache.scala 949:28]
    node _T_1365 = or(s1_valid, s1_replay) @[NBDcache.scala 950:18]
    when _T_1365 : @[NBDcache.scala 950:32]
      s2_recycle_next <= s2_recycle_ecc @[NBDcache.scala 950:50]
      skip @[NBDcache.scala 950:32]
    node _T_1366 = or(s2_recycle_ecc, s2_recycle_next) @[NBDcache.scala 951:32]
    s2_recycle <= _T_1366 @[NBDcache.scala 951:14]
    reg block_miss : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[NBDcache.scala 954:23]
    node _T_1369 = or(s2_valid, block_miss) @[NBDcache.scala 955:27]
    node _T_1370 = and(_T_1369, s2_nack_miss) @[NBDcache.scala 955:42]
    block_miss <= _T_1370 @[NBDcache.scala 955:14]
    when block_miss : @[NBDcache.scala 956:21]
      io.cpu.req.ready <= UInt<1>("h00") @[NBDcache.scala 957:22]
      skip @[NBDcache.scala 956:21]
    wire cache_resp : {valid : UInt<1>, bits : {addr : UInt<40>, tag : UInt<7>, cmd : UInt<5>, typ : UInt<3>, data : UInt<64>, replay : UInt<1>, has_data : UInt<1>, data_word_bypass : UInt<64>, data_raw : UInt<64>, store_data : UInt<64>}} @[NBDcache.scala 960:24]
    cache_resp is invalid @[NBDcache.scala 960:24]
    node _T_1378 = and(s2_valid_masked, s2_hit) @[NBDcache.scala 961:53]
    node _T_1379 = or(s2_replay, _T_1378) @[NBDcache.scala 961:34]
    node _T_1381 = eq(s2_data_correctable, UInt<1>("h00")) @[NBDcache.scala 961:67]
    node _T_1382 = and(_T_1379, _T_1381) @[NBDcache.scala 961:64]
    cache_resp.valid <= _T_1382 @[NBDcache.scala 961:20]
    cache_resp.bits <- s2_req @[NBDcache.scala 962:19]
    node _T_1384 = eq(s2_req.cmd, UInt<1>("h00")) @[Consts.scala 93:31]
    node _T_1386 = eq(s2_req.cmd, UInt<3>("h06")) @[Consts.scala 93:48]
    node _T_1387 = or(_T_1384, _T_1386) @[Consts.scala 93:41]
    node _T_1389 = eq(s2_req.cmd, UInt<3>("h07")) @[Consts.scala 93:65]
    node _T_1390 = or(_T_1387, _T_1389) @[Consts.scala 93:58]
    node _T_1395 = eq(s2_req.cmd, UInt<3>("h04")) @[package.scala 14:47]
    node _T_1396 = eq(s2_req.cmd, UInt<4>("h09")) @[package.scala 14:47]
    node _T_1397 = eq(s2_req.cmd, UInt<4>("h0a")) @[package.scala 14:47]
    node _T_1398 = eq(s2_req.cmd, UInt<4>("h0b")) @[package.scala 14:47]
    node _T_1399 = or(_T_1395, _T_1396) @[package.scala 14:62]
    node _T_1400 = or(_T_1399, _T_1397) @[package.scala 14:62]
    node _T_1401 = or(_T_1400, _T_1398) @[package.scala 14:62]
    node _T_1407 = eq(s2_req.cmd, UInt<4>("h08")) @[package.scala 14:47]
    node _T_1408 = eq(s2_req.cmd, UInt<4>("h0c")) @[package.scala 14:47]
    node _T_1409 = eq(s2_req.cmd, UInt<4>("h0d")) @[package.scala 14:47]
    node _T_1410 = eq(s2_req.cmd, UInt<4>("h0e")) @[package.scala 14:47]
    node _T_1411 = eq(s2_req.cmd, UInt<4>("h0f")) @[package.scala 14:47]
    node _T_1412 = or(_T_1407, _T_1408) @[package.scala 14:62]
    node _T_1413 = or(_T_1412, _T_1409) @[package.scala 14:62]
    node _T_1414 = or(_T_1413, _T_1410) @[package.scala 14:62]
    node _T_1415 = or(_T_1414, _T_1411) @[package.scala 14:62]
    node _T_1416 = or(_T_1401, _T_1415) @[Consts.scala 91:44]
    node _T_1417 = or(_T_1390, _T_1416) @[Consts.scala 93:75]
    cache_resp.bits.has_data <= _T_1417 @[NBDcache.scala 963:28]
    node _T_1418 = bits(s2_req.addr, 2, 2) @[AMOALU.scala 39:29]
    node _T_1419 = bits(s2_data_word, 63, 32) @[AMOALU.scala 39:37]
    node _T_1420 = bits(s2_data_word, 31, 0) @[AMOALU.scala 39:55]
    node _T_1421 = mux(_T_1418, _T_1419, _T_1420) @[AMOALU.scala 39:24]
    node _T_1423 = and(UInt<1>("h00"), s2_sc) @[AMOALU.scala 40:33]
    node _T_1425 = mux(_T_1423, UInt<1>("h00"), _T_1421) @[AMOALU.scala 41:23]
    node _T_1427 = eq(_T_1301, UInt<2>("h02")) @[AMOALU.scala 42:26]
    node _T_1428 = or(_T_1427, _T_1423) @[AMOALU.scala 42:38]
    node _T_1429 = bits(_T_1425, 31, 31) @[AMOALU.scala 42:85]
    node _T_1430 = and(_T_1300, _T_1429) @[AMOALU.scala 42:76]
    node _T_1431 = bits(_T_1430, 0, 0) @[Bitwise.scala 72:15]
    node _T_1434 = mux(_T_1431, UInt<32>("h0ffffffff"), UInt<32>("h00")) @[Bitwise.scala 72:12]
    node _T_1435 = bits(s2_data_word, 63, 32) @[AMOALU.scala 42:98]
    node _T_1436 = mux(_T_1428, _T_1434, _T_1435) @[AMOALU.scala 42:20]
    node _T_1437 = cat(_T_1436, _T_1425) @[Cat.scala 30:58]
    node _T_1438 = bits(s2_req.addr, 1, 1) @[AMOALU.scala 39:29]
    node _T_1439 = bits(_T_1437, 31, 16) @[AMOALU.scala 39:37]
    node _T_1440 = bits(_T_1437, 15, 0) @[AMOALU.scala 39:55]
    node _T_1441 = mux(_T_1438, _T_1439, _T_1440) @[AMOALU.scala 39:24]
    node _T_1443 = and(UInt<1>("h00"), s2_sc) @[AMOALU.scala 40:33]
    node _T_1445 = mux(_T_1443, UInt<1>("h00"), _T_1441) @[AMOALU.scala 41:23]
    node _T_1447 = eq(_T_1301, UInt<1>("h01")) @[AMOALU.scala 42:26]
    node _T_1448 = or(_T_1447, _T_1443) @[AMOALU.scala 42:38]
    node _T_1449 = bits(_T_1445, 15, 15) @[AMOALU.scala 42:85]
    node _T_1450 = and(_T_1300, _T_1449) @[AMOALU.scala 42:76]
    node _T_1451 = bits(_T_1450, 0, 0) @[Bitwise.scala 72:15]
    node _T_1454 = mux(_T_1451, UInt<48>("h0ffffffffffff"), UInt<48>("h00")) @[Bitwise.scala 72:12]
    node _T_1455 = bits(_T_1437, 63, 16) @[AMOALU.scala 42:98]
    node _T_1456 = mux(_T_1448, _T_1454, _T_1455) @[AMOALU.scala 42:20]
    node _T_1457 = cat(_T_1456, _T_1445) @[Cat.scala 30:58]
    node _T_1458 = bits(s2_req.addr, 0, 0) @[AMOALU.scala 39:29]
    node _T_1459 = bits(_T_1457, 15, 8) @[AMOALU.scala 39:37]
    node _T_1460 = bits(_T_1457, 7, 0) @[AMOALU.scala 39:55]
    node _T_1461 = mux(_T_1458, _T_1459, _T_1460) @[AMOALU.scala 39:24]
    node _T_1463 = and(UInt<1>("h01"), s2_sc) @[AMOALU.scala 40:33]
    node _T_1465 = mux(_T_1463, UInt<1>("h00"), _T_1461) @[AMOALU.scala 41:23]
    node _T_1467 = eq(_T_1301, UInt<1>("h00")) @[AMOALU.scala 42:26]
    node _T_1468 = or(_T_1467, _T_1463) @[AMOALU.scala 42:38]
    node _T_1469 = bits(_T_1465, 7, 7) @[AMOALU.scala 42:85]
    node _T_1470 = and(_T_1300, _T_1469) @[AMOALU.scala 42:76]
    node _T_1471 = bits(_T_1470, 0, 0) @[Bitwise.scala 72:15]
    node _T_1474 = mux(_T_1471, UInt<56>("h0ffffffffffffff"), UInt<56>("h00")) @[Bitwise.scala 72:12]
    node _T_1475 = bits(_T_1457, 63, 8) @[AMOALU.scala 42:98]
    node _T_1476 = mux(_T_1468, _T_1474, _T_1475) @[AMOALU.scala 42:20]
    node _T_1477 = cat(_T_1476, _T_1465) @[Cat.scala 30:58]
    node _T_1478 = or(_T_1477, s2_sc_fail) @[NBDcache.scala 964:40]
    cache_resp.bits.data <= _T_1478 @[NBDcache.scala 964:24]
    cache_resp.bits.store_data <= s2_req.data @[NBDcache.scala 965:30]
    cache_resp.bits.replay <= s2_replay @[NBDcache.scala 966:26]
    wire uncache_resp : {valid : UInt<1>, bits : {addr : UInt<40>, tag : UInt<7>, cmd : UInt<5>, typ : UInt<3>, data : UInt<64>, replay : UInt<1>, has_data : UInt<1>, data_word_bypass : UInt<64>, data_raw : UInt<64>, store_data : UInt<64>}} @[NBDcache.scala 968:26]
    uncache_resp is invalid @[NBDcache.scala 968:26]
    uncache_resp.bits <- mshrs.io.resp.bits @[NBDcache.scala 969:21]
    uncache_resp.valid <= mshrs.io.resp.valid @[NBDcache.scala 970:22]
    node _T_1485 = or(s1_valid, s1_replay) @[NBDcache.scala 971:47]
    node _T_1487 = eq(_T_1485, UInt<1>("h00")) @[NBDcache.scala 971:36]
    reg _T_1489 : UInt<1>, clock @[NBDcache.scala 971:29]
    _T_1489 <= _T_1487 @[NBDcache.scala 971:29]
    mshrs.io.resp.ready <= _T_1489 @[NBDcache.scala 971:23]
    node _T_1490 = and(s2_valid, s2_nack) @[NBDcache.scala 973:30]
    io.cpu.s2_nack <= _T_1490 @[NBDcache.scala 973:18]
    node _T_1491 = mux(mshrs.io.resp.ready, uncache_resp, cache_resp) @[NBDcache.scala 974:21]
    io.cpu.resp <- _T_1491 @[NBDcache.scala 974:15]
    node _T_1494 = bits(s2_req.addr, 2, 2) @[AMOALU.scala 39:29]
    node _T_1495 = bits(s2_data_word, 63, 32) @[AMOALU.scala 39:37]
    node _T_1496 = bits(s2_data_word, 31, 0) @[AMOALU.scala 39:55]
    node _T_1497 = mux(_T_1494, _T_1495, _T_1496) @[AMOALU.scala 39:24]
    node _T_1499 = and(UInt<1>("h00"), s2_sc) @[AMOALU.scala 40:33]
    node _T_1501 = mux(_T_1499, UInt<1>("h00"), _T_1497) @[AMOALU.scala 41:23]
    node _T_1503 = eq(_T_1301, UInt<2>("h02")) @[AMOALU.scala 42:26]
    node _T_1504 = or(_T_1503, _T_1499) @[AMOALU.scala 42:38]
    node _T_1505 = bits(_T_1501, 31, 31) @[AMOALU.scala 42:85]
    node _T_1506 = and(_T_1300, _T_1505) @[AMOALU.scala 42:76]
    node _T_1507 = bits(_T_1506, 0, 0) @[Bitwise.scala 72:15]
    node _T_1510 = mux(_T_1507, UInt<32>("h0ffffffff"), UInt<32>("h00")) @[Bitwise.scala 72:12]
    node _T_1511 = bits(s2_data_word, 63, 32) @[AMOALU.scala 42:98]
    node _T_1512 = mux(_T_1504, _T_1510, _T_1511) @[AMOALU.scala 42:20]
    node _T_1513 = cat(_T_1512, _T_1501) @[Cat.scala 30:58]
    io.cpu.resp.bits.data_word_bypass <= _T_1513 @[NBDcache.scala 975:37]
    io.cpu.resp.bits.data_raw <= s2_data_word @[NBDcache.scala 976:29]
    node _T_1515 = eq(s1_valid, UInt<1>("h00")) @[NBDcache.scala 977:43]
    node _T_1516 = and(mshrs.io.fence_rdy, _T_1515) @[NBDcache.scala 977:40]
    node _T_1518 = eq(s2_valid, UInt<1>("h00")) @[NBDcache.scala 977:56]
    node _T_1519 = and(_T_1516, _T_1518) @[NBDcache.scala 977:53]
    io.cpu.ordered <= _T_1519 @[NBDcache.scala 977:18]
    node _T_1520 = and(s1_replay, s1_read) @[NBDcache.scala 978:36]
    node _T_1521 = or(_T_1520, mshrs.io.replay_next) @[NBDcache.scala 978:48]
    io.cpu.replay_next <= _T_1521 @[NBDcache.scala 978:22]
    node _T_1523 = eq(s1_nack, UInt<1>("h00")) @[NBDcache.scala 980:44]
    node s1_xcpt_valid = and(dtlb.io.req.valid, _T_1523) @[NBDcache.scala 980:41]
    reg _T_1525 : UInt<1>, clock @[NBDcache.scala 982:32]
    _T_1525 <= s1_xcpt_valid @[NBDcache.scala 982:32]
    reg _T_1527 : {miss : UInt<1>, paddr : UInt<32>, pf : {ld : UInt<1>, st : UInt<1>, inst : UInt<1>}, ae : {ld : UInt<1>, st : UInt<1>, inst : UInt<1>}, ma : {ld : UInt<1>, st : UInt<1>, inst : UInt<1>}, cacheable : UInt<1>, prefetchable : UInt<1>}, clock @[Reg.scala 11:16]
    when s1_clk_en : @[Reg.scala 12:19]
      _T_1527.prefetchable <= dtlb.io.resp.prefetchable @[Reg.scala 12:23]
      _T_1527.cacheable <= dtlb.io.resp.cacheable @[Reg.scala 12:23]
      _T_1527.ma.inst <= dtlb.io.resp.ma.inst @[Reg.scala 12:23]
      _T_1527.ma.st <= dtlb.io.resp.ma.st @[Reg.scala 12:23]
      _T_1527.ma.ld <= dtlb.io.resp.ma.ld @[Reg.scala 12:23]
      _T_1527.ae.inst <= dtlb.io.resp.ae.inst @[Reg.scala 12:23]
      _T_1527.ae.st <= dtlb.io.resp.ae.st @[Reg.scala 12:23]
      _T_1527.ae.ld <= dtlb.io.resp.ae.ld @[Reg.scala 12:23]
      _T_1527.pf.inst <= dtlb.io.resp.pf.inst @[Reg.scala 12:23]
      _T_1527.pf.st <= dtlb.io.resp.pf.st @[Reg.scala 12:23]
      _T_1527.pf.ld <= dtlb.io.resp.pf.ld @[Reg.scala 12:23]
      _T_1527.paddr <= dtlb.io.resp.paddr @[Reg.scala 12:23]
      _T_1527.miss <= dtlb.io.resp.miss @[Reg.scala 12:23]
      skip @[Reg.scala 12:19]
    wire _T_1530 : {miss : UInt<1>, paddr : UInt<32>, pf : {ld : UInt<1>, st : UInt<1>, inst : UInt<1>}, ae : {ld : UInt<1>, st : UInt<1>, inst : UInt<1>}, ma : {ld : UInt<1>, st : UInt<1>, inst : UInt<1>}, cacheable : UInt<1>, prefetchable : UInt<1>} @[NBDcache.scala 982:92]
    _T_1530 is invalid @[NBDcache.scala 982:92]
    wire _T_1532 : UInt<44>
    _T_1532 is invalid
    _T_1532 <= UInt<1>("h00")
    node _T_1533 = bits(_T_1532, 0, 0) @[NBDcache.scala 982:92]
    _T_1530.prefetchable <= _T_1533 @[NBDcache.scala 982:92]
    node _T_1534 = bits(_T_1532, 1, 1) @[NBDcache.scala 982:92]
    _T_1530.cacheable <= _T_1534 @[NBDcache.scala 982:92]
    node _T_1535 = bits(_T_1532, 2, 2) @[NBDcache.scala 982:92]
    _T_1530.ma.inst <= _T_1535 @[NBDcache.scala 982:92]
    node _T_1536 = bits(_T_1532, 3, 3) @[NBDcache.scala 982:92]
    _T_1530.ma.st <= _T_1536 @[NBDcache.scala 982:92]
    node _T_1537 = bits(_T_1532, 4, 4) @[NBDcache.scala 982:92]
    _T_1530.ma.ld <= _T_1537 @[NBDcache.scala 982:92]
    node _T_1538 = bits(_T_1532, 5, 5) @[NBDcache.scala 982:92]
    _T_1530.ae.inst <= _T_1538 @[NBDcache.scala 982:92]
    node _T_1539 = bits(_T_1532, 6, 6) @[NBDcache.scala 982:92]
    _T_1530.ae.st <= _T_1539 @[NBDcache.scala 982:92]
    node _T_1540 = bits(_T_1532, 7, 7) @[NBDcache.scala 982:92]
    _T_1530.ae.ld <= _T_1540 @[NBDcache.scala 982:92]
    node _T_1541 = bits(_T_1532, 8, 8) @[NBDcache.scala 982:92]
    _T_1530.pf.inst <= _T_1541 @[NBDcache.scala 982:92]
    node _T_1542 = bits(_T_1532, 9, 9) @[NBDcache.scala 982:92]
    _T_1530.pf.st <= _T_1542 @[NBDcache.scala 982:92]
    node _T_1543 = bits(_T_1532, 10, 10) @[NBDcache.scala 982:92]
    _T_1530.pf.ld <= _T_1543 @[NBDcache.scala 982:92]
    node _T_1544 = bits(_T_1532, 42, 11) @[NBDcache.scala 982:92]
    _T_1530.paddr <= _T_1544 @[NBDcache.scala 982:92]
    node _T_1545 = bits(_T_1532, 43, 43) @[NBDcache.scala 982:92]
    _T_1530.miss <= _T_1545 @[NBDcache.scala 982:92]
    node _T_1546 = mux(_T_1525, _T_1527, _T_1530) @[NBDcache.scala 982:24]
    io.cpu.s2_xcpt <- _T_1546 @[NBDcache.scala 982:18]
    node _T_1547 = and(tl_out.a.ready, tl_out.a.valid) @[Decoupled.scala 30:37]
    node _T_1549 = asUInt(asSInt(UInt<12>("h0fff"))) @[package.scala 82:70]
    node _T_1550 = dshl(_T_1549, tl_out.a.bits.size) @[package.scala 82:77]
    node _T_1551 = bits(_T_1550, 11, 0) @[package.scala 82:82]
    node _T_1552 = not(_T_1551) @[package.scala 82:46]
    node _T_1553 = shr(_T_1552, 3) @[Edges.scala 211:59]
    node _T_1554 = bits(tl_out.a.bits.opcode, 2, 2) @[Edges.scala 92:37]
    node _T_1556 = eq(_T_1554, UInt<1>("h00")) @[Edges.scala 92:28]
    node _T_1558 = mux(_T_1556, _T_1553, UInt<1>("h00")) @[Edges.scala 212:14]
    reg _T_1561 : UInt<9>, clock with : (reset => (reset, UInt<9>("h00"))) @[Edges.scala 220:27]
    node _T_1563 = sub(_T_1561, UInt<1>("h01")) @[Edges.scala 221:28]
    node _T_1564 = asUInt(_T_1563) @[Edges.scala 221:28]
    node _T_1565 = tail(_T_1564, 1) @[Edges.scala 221:28]
    node _T_1567 = eq(_T_1561, UInt<1>("h00")) @[Edges.scala 222:25]
    node _T_1569 = eq(_T_1561, UInt<1>("h01")) @[Edges.scala 223:25]
    node _T_1571 = eq(_T_1558, UInt<1>("h00")) @[Edges.scala 223:47]
    node _T_1572 = or(_T_1569, _T_1571) @[Edges.scala 223:37]
    node _T_1573 = and(_T_1572, _T_1547) @[Edges.scala 224:22]
    node _T_1574 = not(_T_1565) @[Edges.scala 225:27]
    node _T_1575 = and(_T_1558, _T_1574) @[Edges.scala 225:25]
    when _T_1547 : @[Edges.scala 226:17]
      node _T_1576 = mux(_T_1567, _T_1558, _T_1565) @[Edges.scala 227:21]
      _T_1561 <= _T_1576 @[Edges.scala 227:15]
      skip @[Edges.scala 226:17]
    io.cpu.perf.acquire <= _T_1573 @[NBDcache.scala 985:23]
    node _T_1577 = and(tl_out.c.ready, tl_out.c.valid) @[Decoupled.scala 30:37]
    node _T_1579 = asUInt(asSInt(UInt<12>("h0fff"))) @[package.scala 82:70]
    node _T_1580 = dshl(_T_1579, tl_out.c.bits.size) @[package.scala 82:77]
    node _T_1581 = bits(_T_1580, 11, 0) @[package.scala 82:82]
    node _T_1582 = not(_T_1581) @[package.scala 82:46]
    node _T_1583 = shr(_T_1582, 3) @[Edges.scala 211:59]
    node _T_1584 = bits(tl_out.c.bits.opcode, 0, 0) @[Edges.scala 102:36]
    node _T_1586 = mux(_T_1584, _T_1583, UInt<1>("h00")) @[Edges.scala 212:14]
    reg _T_1589 : UInt<9>, clock with : (reset => (reset, UInt<9>("h00"))) @[Edges.scala 220:27]
    node _T_1591 = sub(_T_1589, UInt<1>("h01")) @[Edges.scala 221:28]
    node _T_1592 = asUInt(_T_1591) @[Edges.scala 221:28]
    node _T_1593 = tail(_T_1592, 1) @[Edges.scala 221:28]
    node _T_1595 = eq(_T_1589, UInt<1>("h00")) @[Edges.scala 222:25]
    node _T_1597 = eq(_T_1589, UInt<1>("h01")) @[Edges.scala 223:25]
    node _T_1599 = eq(_T_1586, UInt<1>("h00")) @[Edges.scala 223:47]
    node _T_1600 = or(_T_1597, _T_1599) @[Edges.scala 223:37]
    node _T_1601 = and(_T_1600, _T_1577) @[Edges.scala 224:22]
    node _T_1602 = not(_T_1593) @[Edges.scala 225:27]
    node _T_1603 = and(_T_1586, _T_1602) @[Edges.scala 225:25]
    when _T_1577 : @[Edges.scala 226:17]
      node _T_1604 = mux(_T_1595, _T_1586, _T_1593) @[Edges.scala 227:21]
      _T_1589 <= _T_1604 @[Edges.scala 227:15]
      skip @[Edges.scala 226:17]
    io.cpu.perf.release <= _T_1601 @[NBDcache.scala 986:23]
    node _T_1605 = and(io.ptw.req.ready, io.ptw.req.valid) @[Decoupled.scala 30:37]
    io.cpu.perf.tlbMiss <= _T_1605 @[NBDcache.scala 987:23]
